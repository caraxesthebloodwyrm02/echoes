{
  "entities": {
    "janitor.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 12 functions: feedback_log, clean_garbage, optimize_dependencies, run_automation_tasks, _load_manifest, _ensure_dir, _archive_file, _consolidate_group, consolidate_from_manifest, _is_preserved, cleanup_from_manifest, main",
        "Imports: argparse, os, shutil, sys, subprocess, pathlib.Path, datetime.datetime, json, glob, fnmatch, yaml"
      ]
    },
    "mcp_server.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: EchoRequest, EchoResponse",
        "Contains 4 functions: health, root, favicon, echo",
        "Imports: typing.Optional, uvicorn, fastapi.FastAPI, fastapi.Response, pydantic.BaseModel"
      ]
    },
    "queensgambit.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: collect_reports, extract_insights, main",
        "Imports: argparse, json, os, pathlib.Path, datetime.datetime, glob, yaml"
      ]
    },
    "app\\main.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: load_dotenv",
        "Imports: logging, os, datetime.datetime, fastapi.FastAPI, fastapi.middleware.cors.CORSMiddleware, fastapi.responses.JSONResponse, dotenv.load_dotenv, app.core.validation.provenance_enforcer.ProvenanceEnforcerMiddleware, app.api.routes.system_router, app.api.routes.auth_router, app.domains.science.science_module.science_router, app.domains.commerce.commerce_module.commerce_router, app.domains.arts.arts_module.arts_router, app.domains.commerce.finance.finance_router, uvicorn, core.validation.provenance_enforcer.ProvenanceEnforcerMiddleware, api.routes.system_router, api.routes.auth_router, domains.science.science_module.science_router, domains.commerce.commerce_module.commerce_router, domains.arts.arts_module.arts_router, domains.commerce.finance.finance_router"
      ]
    },
    "app\\main_production.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: create_application",
        "Imports: logging, os, sys, pathlib.Path, fastapi.FastAPI, fastapi.middleware.httpsredirect.HTTPSRedirectMiddleware, fastapi.middleware.trustedhost.TrustedHostMiddleware, app.main.app, uvicorn"
      ]
    },
    "app\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\api\\schemas.py": {
      "entityType": "file",
      "observations": [
        "Contains 20 classes: ProvenanceSource, Provenance, Assertion, FeedbackLabel, HILFeedback, AgentAction, AgentExecutionRequest, SafetyCheck, AgentExecutionResponse, KillSignal, BiomedicalQuery, BiomedicalResult, UBISimulationParams, UBISimulationResult, EmploymentMatch, CreativeWork, HealthResponse, MetricsResponse, Config, Config",
        "Contains 1 functions: validate_provenance_not_empty",
        "Imports: datetime.datetime, enum.Enum, typing.Any, typing.Dict, typing.List, typing.Optional, pydantic.BaseModel, pydantic.Field, pydantic.HttpUrl, pydantic.validator"
      ]
    },
    "app\\api\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\api\\routes\\auth.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: datetime.timedelta, fastapi.APIRouter, fastapi.Depends, fastapi.HTTPException, fastapi.status, app.core.auth.ACCESS_TOKEN_EXPIRE_MINUTES, app.core.auth.LoginRequest, app.core.auth.TokenResponse, app.core.auth.User, app.core.auth.authenticate_user, app.core.auth.create_access_token, app.core.auth.get_current_active_user"
      ]
    },
    "app\\api\\routes\\system.py": {
      "entityType": "file",
      "observations": [
        "Contains 9 classes: Provenance, Assertion, HILFeedback, AgentExecutionRequest, SafetyCheck, AgentExecutionResponse, KillSignal, HealthResponse, MetricsResponse",
        "Contains 6 functions: check_database_health, execute_biomedical_search, execute_economic_simulation, execute_employment_matching, execute_art_generation, execute_sentiment_analysis",
        "Imports: logging, time, datetime.datetime, typing.Dict, typing.List, typing.Optional, fastapi.APIRouter, fastapi.BackgroundTasks, fastapi.HTTPException, fastapi.Depends, pydantic.BaseModel, pydantic.Field, app.core.auth.User, app.core.auth.get_current_active_user, app.core.auth.require_role, core.auth.User, core.auth.get_current_active_user, core.auth.require_role"
      ]
    },
    "app\\api\\routes\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: auth.router, system.router"
      ]
    },
    "app\\cli\\audit.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: quick, full, report",
        "Imports: typer, rich.console.Console, typing.Optional, app.domains.audit.audit_core.AuditEngine, app.domains.audit.audit_core.AuditConfig"
      ]
    },
    "app\\cli\\main.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: version",
        "Imports: typer, rich.console.Console, .audit, .tour"
      ]
    },
    "app\\cli\\tour.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 6 functions: onboard, generate, publish, onboard, generate, publish",
        "Imports: typer, rich.console.Console, yaml, pathlib.Path, datetime.datetime, harmony.swing_scheduler.SamplerState, datetime.datetime, harmony.swing_scheduler.SamplerState, domains.arts.investlab.hub_investlab.hub.highway.highway, domains.arts.investlab.hub_investlab.hub.highway.DataType, domains.arts.investlab.hub_investlab.hub.highway.highway, domains.arts.investlab.hub_investlab.hub.highway.DataType"
      ]
    },
    "app\\cli\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\core\\auth.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: User, TokenData, LoginRequest, TokenResponse",
        "Contains 6 functions: hash_password, verify_password, create_access_token, decode_token, require_role, authenticate_user",
        "Imports: hashlib, os, secrets, datetime.datetime, datetime.timedelta, typing.Optional, typing.Dict, typing.Any, fastapi.Depends, fastapi.HTTPException, fastapi.status, fastapi.security.HTTPAuthorizationCredentials, fastapi.security.HTTPBearer, pydantic.BaseModel"
      ]
    },
    "app\\core\\knowledge_graph_memory.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MemoryMCPServer",
        "Contains 9 functions: __init__, _load_data, _save_data, create_entities_tool, create_relations_tool, add_observations_tool, read_graph_tool, search_nodes_tool, open_nodes_tool",
        "Imports: json, pathlib.Path, typing.Any, typing.Dict, typing.List"
      ]
    },
    "app\\core\\test_runner.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TestRunner",
        "Contains 7 functions: main, __init__, run_tests, _get_coverage_percentage, enforce_coverage_threshold, run_security_tests, generate_test_report",
        "Imports: subprocess, sys, pathlib.Path, typing.Dict, defusedxml.ElementTree, security_guardrails.SecurityGuardrails"
      ]
    },
    "app\\core\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\core\\validation\\provenance_enforcer.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ProvenanceEnforcerMiddleware",
        "Contains 2 functions: __init__, _check_provenance",
        "Imports: json, logging, fastapi.Request, fastapi.Response, starlette.middleware.base.BaseHTTPMiddleware, starlette.types.ASGIApp"
      ]
    },
    "app\\core\\validation\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: provenance_enforcer.ProvenanceEnforcerMiddleware"
      ]
    },
    "app\\domains\\arts\\arts_module.py": {
      "entityType": "file",
      "observations": [
        "Contains 9 classes: CreativeWorkRequest, CreativeWork, CulturalAnalysisRequest, CulturalAnalysisResult, LanguagePreservationRequest, LanguagePreservationResult, EmotionalMusicRequest, TherapeuticSessionRequest, PersonalizedFeedRequest",
        "Contains 3 functions: get_harmony_engine, get_intelligence_engine, get_resonance_engine",
        "Imports: logging, sys, datetime.datetime, pathlib.Path, typing.Any, typing.Dict, typing.List, typing.Optional, fastapi.APIRouter, fastapi.HTTPException, pydantic.BaseModel, hall_of_fame.router, harmony.get_harmony_engine, intelligence.get_intelligence_engine, resonance.get_resonance_engine"
      ]
    },
    "app\\domains\\arts\\hall_of_fame.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: PlaylistShowcase, CymaticsResearch",
        "Contains 0 functions: ",
        "Imports: datetime.datetime, typing.Dict, typing.List, typing.Optional, pydantic.BaseModel, fastapi.APIRouter"
      ]
    },
    "app\\domains\\arts\\investlab\\security_monitor.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 7 functions: run_command, check_bandit_scan, check_dependency_vulnerabilities, check_environment_variables, check_file_permissions, generate_security_report, main",
        "Imports: json, os, subprocess, sys, datetime.datetime, pathlib.Path"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\config.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Config",
        "Contains 4 functions: get_config_summary, validate_config, save_config_to_file, load_config_from_file",
        "Imports: os, json, typing.Dict, typing.Any, dotenv.load_dotenv"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\dashboard_launcher.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: check_dependencies, setup_environment, start_dashboard, show_quick_guide, main",
        "Imports: os, sys, subprocess, argparse, pathlib.Path"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: DataHub",
        "Contains 8 functions: print_banner, __init__, _save_data, get_latest_data, run_dashboard, start_scheduler, stop_scheduler, get_system_status",
        "Imports: asyncio, logging, json, os, datetime.datetime, typing.Dict, typing.List, typing.Any, dotenv.load_dotenv, fetchers.microsoft_fetcher.MicrosoftFetcher, fetchers.google_fetcher.GoogleFetcher, fetchers.x_fetcher.XFetcher, aggregator.data_aggregator.DataAggregator, aggregator.scheduler.DataScheduler, web.dashboard.create_dashboard, config.Config"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 10 functions: demo_complete_ecosystem, demo_system_architecture, demo_dashboard_initialization, demo_ai_research_capabilities, demo_collaboration_features, demo_music_guidance_system, demo_highway_routing, demo_analytics_dashboard, demo_complete_integration, create_demo_report",
        "Imports: os, sys, time, json, datetime.datetime, researchlab_dashboard.*, highway.get_highway, researchlab.get_research_lab, unified_hub.get_unified_hub, researchlab_dashboard, research.advanced_research.get_advanced_research, research.advanced_research.get_advanced_research, entertainment.nudges.music_nudges.get_music_nudges, highway.get_highway, highway.monitor.get_highway_monitor, highway.get_highway, researchlab.get_research_lab, unified_hub.get_unified_hub, research.advanced_research.get_advanced_research, entertainment.nudges.music_nudges.get_music_nudges, streamlit, plotly, pandas"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\final_hub.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: DataHub",
        "Contains 3 functions: main, __init__, fetch_data",
        "Imports: json, logging, os, urllib.request, datetime.datetime"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 7 functions: run_research, run_entertainment, run_finance, run_insights, run_master, run_weather, main",
        "Imports: os, sys, json, argparse, datetime.datetime, research.ai_service.AIService, entertainment.media_service.MediaService, entertainment.nudges.music_nudges.MusicNudges, finance.finance_service.FinanceService, insights.social_service.SocialService, master_hub.MasterHub, entertainment.nudges.music_nudges.MusicNudges"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: ResearchWorkflow, ResearchMetrics, ResearchLab",
        "Contains 19 functions: get_research_lab, initiate_project, conduct_research, collaborate, analyze_impact, get_lab_status, optimize_workflow, __init__, _initialize_domains, _initialize_innovation_engine, initiate_research_project, conduct_research_workflow, collaborate_on_research, analyze_research_impact, _calculate_research_quality, _generate_impact_recommendations, _generate_publication_insights, get_lab_status, optimize_research_workflow",
        "Imports: os, json, logging, datetime.datetime, typing.Dict, typing.List, typing.Any, typing.Optional, dataclasses.dataclass, dataclasses.field, highway.get_highway, highway.DataType, highway.router.get_highway_router, highway.monitor.get_highway_monitor, research.advanced_research.get_advanced_research, entertainment.nudges.music_nudges.get_music_nudges"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 9 functions: initialize_system, get_real_time_data, create_system_overview_tab, create_research_workspace_tab, create_ai_insights_tab, create_collaboration_tab, create_music_guidance_tab, create_real_time_monitoring_tab, main",
        "Imports: streamlit, plotly.express, plotly.graph_objects, altair, pandas, numpy, datetime.datetime, datetime.timedelta, json, asyncio, threading, time, random, typing.Dict, typing.List, typing.Any, typing.Optional, sys, os, highway.get_highway, researchlab.get_research_lab, unified_hub.get_unified_hub, highway.monitor.get_highway_monitor, research.advanced_research.get_advanced_research, entertainment.nudges.music_nudges.get_music_nudges"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\run_complete.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: CompleteHub",
        "Contains 2 functions: __init__, run_all_services",
        "Imports: os, json, logging, datetime.datetime"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SimpleDataHub",
        "Contains 2 functions: print_banner, __init__",
        "Imports: asyncio, json, logging, os, urllib.request, datetime.datetime, typing.Dict, typing.List, typing.Any"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\test_hub.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, os, asyncio, json, data_hub.DataHub"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: UnifiedSession, InteractiveWorkflow, UnifiedHub",
        "Contains 37 functions: get_unified_hub, create_session, start_workflow, advance_workflow, exchange_data, get_unified_status, get_session_status, __init__, _initialize_workflows, _initialize_connections, _initialize_protocols, create_session, start_workflow, advance_workflow, _execute_workflow_step, _welcome_step, _domain_selection_step, _ai_research_demo_step, _collaboration_demo_step, _data_analysis_demo_step, _full_workflow_demo_step, _project_init_step, _hypothesis_generation_step, _experiment_design_step, _data_collection_step, _data_analysis_step, _results_validation_step, _publication_prep_step, exchange_data, _exchange_research_data, _exchange_collaboration_data, _exchange_analysis_data, _exchange_publication_data, _exchange_music_data, _exchange_system_data, get_unified_status, get_session_status",
        "Imports: os, json, asyncio, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Callable, dataclasses.dataclass, dataclasses.field, logging, highway.get_highway, highway.router.get_highway_router, highway.monitor.get_highway_monitor, highway.development_bridge.get_development_bridge, researchlab.get_research_lab, research.advanced_research.get_advanced_research, entertainment.nudges.music_nudges.get_music_nudges"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 12 functions: main, run_test, test_highway_integration, test_advanced_research, test_researchlab_init, test_project_initiation, test_research_workflow, test_collaboration, test_music_integration, test_highway_router, test_development_bridge, test_impact_analysis",
        "Imports: sys, os, json, datetime.datetime, highway.get_highway, research.advanced_research.get_advanced_research, researchlab.get_research_lab, researchlab.initiate_project, researchlab.conduct_research, researchlab.collaborate, entertainment.nudges.music_nudges.get_music_nudges, highway.router.get_highway_router, highway.development_bridge.get_development_bridge, researchlab.analyze_impact, researchlab.initiate_project"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: EmotionalState, CommunicationIntent, SoundMessage, EmotionalProfile, HarmonyCommunity, HarmonyHub",
        "Contains 31 functions: get_harmony_hub, create_user_profile, send_sound_message, analyze_emotional_resonance, create_emotional_community, recommend_music_for_emotion, get_emotional_intelligence_insights, __init__, _initialize_emotional_ai, _initialize_music_recommender, _initialize_communication_engine, _initialize_community_manager, create_user_profile, send_sound_message, analyze_emotional_resonance, create_emotional_community, recommend_music_for_emotion, get_emotional_intelligence_insights, _recommend_music_for_communication, _calculate_resonance_score, _assess_emotional_impact, _measure_connection_strength, _generate_resonance_insights, _suggest_communication_improvements, _generate_music_recommendations, _analyze_emotional_profile, _assess_communication_effectiveness, _track_music_preference_evolution, _analyze_social_connection_patterns, _identify_growth_opportunities, _generate_personalized_recommendations",
        "Imports: os, json, asyncio, time, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Union, dataclasses.dataclass, dataclasses.field, enum.Enum, logging, highway.get_highway, highway.DataType, intelligence.get_intelligence_engine, analytics.get_portfolio_analytics"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: DataAggregator",
        "Contains 12 functions: __init__, aggregate, _create_summary, _check_health_status, _extract_trending_topics, _extract_recent_articles, _extract_service_status, _generate_alerts, _calculate_statistics, get_data_summary, export_to_csv, get_alerts_summary",
        "Imports: json, logging, pandas, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, schedule, time, collections.defaultdict"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\scheduler.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: DataScheduler",
        "Contains 11 functions: __init__, schedule_hourly_fetch, schedule_daily_fetch, schedule_custom_interval, _run_async_fetch, start_scheduler, _run_scheduler, stop_scheduler, get_scheduler_status, add_custom_job, run_fetch",
        "Imports: asyncio, logging, schedule, time, datetime.datetime, typing.Callable, threading"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\media_service.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MediaService",
        "Contains 6 functions: __init__, fetch_spotify_data, fetch_youtube_data, fetch_instagram_data, fetch_facebook_data, get_media_dashboard",
        "Imports: os, json, datetime.datetime, typing.Dict, typing.List, typing.Any"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MusicNudges",
        "Contains 13 functions: get_music_nudges, nudge_direction, nudge_motivation, nudge_reflection, nudge_celebration, random_nudge, __init__, load_nudges_database, play_nudge, get_random_nudge, get_nudge_history, save_nudge_history, load_nudge_history",
        "Imports: os, json, logging, subprocess, datetime.datetime, typing.Dict, typing.List, typing.Any, typing.Optional, random"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: FinanceService",
        "Contains 5 functions: __init__, fetch_yahoo_finance_live, fetch_commerce_data, get_personal_finance, get_finance_dashboard",
        "Imports: os, json, urllib.request, urllib.parse, datetime.datetime, typing.Dict, typing.List, typing.Any"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: HighwayDevelopmentBridge",
        "Contains 27 functions: get_development_bridge, sync_with_development, create_dev_bridge, route_dev_to_research, route_research_to_dev, __init__, _ensure_external_path, _initialize_adaptation_rules, sync_with_external_projects, _scan_external_projects, _analyze_project, _extract_code_patterns, _generate_project_insights, _apply_project_advancements, _create_advancement_from_insight, _send_advancement_to_research, _send_advancement_to_finance, _send_advancement_to_content, _send_sync_results, _adapt_ai_models, _adapt_financial_strategies, _adapt_content_templates, _adapt_research_insights, _adapt_development_patterns, create_development_bridge, get_bridge_status, monitor_development_learnings",
        "Imports: os, json, shutil, hashlib, datetime.datetime, pathlib.Path, typing.Dict, typing.List, typing.Any, typing.Optional, highway.Highway, highway.DataType, highway.get_highway, highway.get_highway, highway.get_highway, highway.get_highway"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: HighwayMonitor",
        "Contains 22 functions: get_highway_monitor, start_monitoring, get_dashboard, trigger_optimization, __init__, start_monitoring, _monitor_cycle, _check_highway_status, _check_routing_performance, _check_development_sync, _check_cross_module_learning, _calculate_success_rate, _generate_optimizations, _display_status, _generate_final_report, _calculate_average_success_rate, get_real_time_dashboard, trigger_optimization, _cleanup_cache, _check_module_health, _optimize_routing, export_highway_data",
        "Imports: os, json, time, datetime.datetime, typing.Dict, typing.List, typing.Any, highway.Highway, highway.get_highway, highway.router.get_highway_router, highway.development_bridge.get_development_bridge"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\quick_start.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: quick_start",
        "Imports: os, sys, highway.get_highway, highway.router.get_highway_router, highway.development_bridge.get_development_bridge, highway.monitor.get_highway_monitor"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: HighwayRouter",
        "Contains 20 functions: get_highway_router, __init__, route_research_to_development, route_development_to_research, route_finance_to_content, route_entertainment_to_insights, route_brainstorming_to_all, route_music_to_research, route_external_project_updates, _generate_content_ideas_from_finance, _analyze_mood_from_entertainment, _correlate_music_with_research, _determine_relevant_modules, create_adaptive_route, get_routing_status, monitor_cross_module_learnings, _track_research_finance_learnings, _track_entertainment_insights_learnings, _track_finance_content_learnings, _track_external_learnings",
        "Imports: os, json, asyncio, datetime.datetime, typing.Dict, typing.List, typing.Any, typing.Optional, highway.Highway, highway.DataType, highway.RoutePriority"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: RoutePriority, DataType, HighwayPacket, ModuleEndpoint, Highway",
        "Contains 40 functions: get_highway, send_to_research, send_to_entertainment, send_to_intelligence, send_to_insights, send_to_finance, send_to_media, send_to_brainstorming, send_to_external, __init__, _initialize_modules, _start_background_processes, route_packet, _calculate_optimal_route, _execute_route, _deliver_to_module, _handle_research_delivery, _handle_entertainment_delivery, _handle_insights_delivery, _handle_finance_delivery, _handle_media_delivery, _handle_brainstorming_delivery, _handle_external_delivery, _generate_research_insights, _generate_insights, _publish_content, _sync_with_external_projects, _integrate_external_changes, _packet_cleanup_loop, _learning_loop, _adaptive_learning, _external_integration_loop, _check_external_updates, _learn_from_routing, _update_average_route_time, send_data, get_module_status, get_highway_status, enable_learning, enable_external_integration",
        "Imports: os, json, logging, asyncio, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Callable, dataclasses.dataclass, dataclasses.field, enum.Enum, hashlib, threading, time"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\insights\\social_service.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SocialService",
        "Contains 5 functions: __init__, fetch_reddit_insights, fetch_discord_data, get_user_driven_insights, get_social_dashboard",
        "Imports: os, json, datetime.datetime, typing.Dict, typing.List, typing.Any"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Dashboard",
        "Contains 16 functions: create_dashboard, __init__, setup_routes, render_dashboard, generate_html_dashboard, render_alerts, render_health_status, render_articles, render_trending_topics, run, index, api_data, api_summary, api_alerts, api_refresh, api_health",
        "Imports: json, logging, datetime.datetime, flask.Flask, flask.render_template, flask.jsonify, flask.request, flask_cors.CORS, os, asyncio"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: ResearchHypothesis, ResearchExperiment, ResearchProject, AIRearchCapabilities, DataSciencePlatform, ExperimentManager, ResearchCollaboration, AdvancedResearch",
        "Contains 30 functions: get_advanced_research, conduct_research, get_research_status, __init__, _load_available_models, _load_research_patterns, generate_hypothesis, analyze_research_data, design_experiment, __init__, _initialize_engines, _initialize_visualization, _initialize_statistics, analyze_dataset, _compute_summary_stats, _run_statistical_tests, _apply_ml_models, _suggest_visualizations, _assess_data_quality, __init__, _initialize_version_control, _initialize_reproducibility, create_experiment, track_experiment_progress, __init__, start_collaborative_session, share_research_findings, __init__, conduct_comprehensive_research, get_research_status",
        "Imports: os, json, asyncio, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Union, dataclasses.dataclass, dataclasses.field, hashlib, logging, highway.DataType, highway.get_highway"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AIService",
        "Contains 7 functions: __init__, get_ollama_status, query_ollama, get_huggingface_models, query_groq, query_google_ai, get_ai_dashboard",
        "Imports: os, json, requests, logging, datetime.datetime, typing.Dict, typing.List, typing.Any"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\auth_hub.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: print_banner, check_configuration, create_sample_env, main",
        "Imports: os, sys, datetime.datetime, auth.web_app.create_auth_app, auth.user_manager.UserManager, auth.oauth_manager.OAuthManager"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\oauth_manager.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: OAuthManager",
        "Contains 8 functions: __init__, generate_auth_url, exchange_code_for_token, get_user_info, _normalize_user_data, refresh_token, revoke_token, is_configured",
        "Imports: json, secrets, urllib.parse, urllib.request, datetime.datetime, datetime.timedelta, os"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\user_manager.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: UserManager",
        "Contains 13 functions: __init__, ensure_directories, create_user_profile, get_user_profile, update_user_preferences, get_all_users, get_personalized_microsoft_data, get_personalized_google_data, get_personalized_twitter_data, get_user_tokens, refresh_user_token, delete_user, get_user_activity_summary",
        "Imports: json, os, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AuthWebApp",
        "Contains 15 functions: create_auth_app, __init__, setup_routes, render_login_page, render_dashboard, save_user_profile, get_personalized_data, run, index, login, callback, dashboard, logout, api_user, api_personalized_data",
        "Imports: os, json, datetime.datetime, flask.Flask, flask.render_template, flask.request, flask.redirect, flask.url_for, flask.session, flask.jsonify, auth.oauth_manager.OAuthManager"
      ]
    },
    "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: PortfolioMetrics, RiskAssessment, OptimizationResult, PortfolioAnalytics",
        "Contains 38 functions: get_portfolio_analytics, calculate_portfolio_metrics, assess_portfolio_risk, optimize_portfolio, analyze_asset_correlations, perform_factor_analysis, __init__, _initialize_risk_models, _initialize_optimization_engines, _initialize_performance_calculators, calculate_portfolio_metrics, assess_portfolio_risk, optimize_portfolio, analyze_asset_correlations, perform_factor_analysis, _calculate_daily_return, _calculate_volatility, _calculate_sharpe_ratio, _calculate_max_drawdown, _calculate_beta, _calculate_alpha, _calculate_sortino_ratio, _calculate_information_ratio, _calculate_tracking_error, _calculate_var, _calculate_cvar, _perform_stress_testing, _perform_scenario_analysis, _assess_liquidity_risk, _calculate_concentration_risk, _assess_tail_risk, _assess_systemic_risk, _estimate_expected_returns, _estimate_covariance_matrix, _optimize_mean_variance, _optimize_risk_parity, _calculate_efficient_frontier, _validate_constraints",
        "Imports: os, json, numpy, pandas, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Tuple, dataclasses.dataclass, dataclasses.field, logging, highway.get_highway, highway.DataType"
      ]
    },
    "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: SoundWave, TherapeuticIntent, SoundNotification, EmotionalPlaylist, SoundConversation, HarmonyEngine",
        "Contains 25 functions: get_harmony_engine, create_sound_notification, curate_emotional_playlist, initiate_sound_conversation, deliver_therapeutic_session, analyze_notification_effectiveness, __init__, _initialize_sound_messaging, _initialize_emotional_therapy, _initialize_notification_system, _initialize_playlist_curation, create_sound_notification, curate_emotional_playlist, initiate_sound_conversation, deliver_therapeutic_session, analyze_notification_effectiveness, _select_optimal_sound, _curate_playlist_tracks, _assess_therapeutic_benefits, _design_therapeutic_session, _initialize_adaptive_delivery, _calculate_effectiveness_score, _assess_behavioral_impact, _generate_optimization_suggestions, _generate_effectiveness_insights",
        "Imports: os, json, time, asyncio, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Union, dataclasses.dataclass, dataclasses.field, enum.Enum, logging, random, highway.get_highway, highway.DataType"
      ]
    },
    "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: MarketIntelligence, InvestmentHypothesis, PortfolioAnalysis, IntelligenceEngine",
        "Contains 32 functions: get_intelligence_engine, analyze_market_intelligence, generate_investment_hypothesis, analyze_portfolio_intelligence, __init__, _initialize_market_providers, _initialize_ai_models, _initialize_analysis_frameworks, analyze_market_intelligence, generate_investment_hypothesis, analyze_portfolio_intelligence, _get_technical_analysis, _get_fundamental_analysis, _get_sentiment_analysis, _get_risk_assessment, _generate_ai_insights, _calculate_investment_recommendation, _calculate_confidence_score, _generate_thesis, _gather_supporting_evidence, _assess_risk_factors, _calculate_expected_return, _calculate_hypothesis_confidence, _determine_time_horizon, _analyze_asset_allocation, _calculate_risk_metrics, _calculate_performance_metrics, _generate_rebalancing_recommendations, _identify_tax_optimization_opportunities, _calculate_diversification_score, _calculate_risk_adjusted_return, _generate_portfolio_ai_recommendations",
        "Imports: os, json, asyncio, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Union, dataclasses.dataclass, dataclasses.field, logging, highway.get_highway, highway.router.get_highway_router, highway.monitor.get_highway_monitor"
      ]
    },
    "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: PortfolioHolding, Portfolio, RebalancingRecommendation, PerformanceReport, PortfolioManager",
        "Contains 26 functions: get_portfolio_manager, create_portfolio, add_portfolio_holding, update_portfolio_prices, get_rebalancing_recommendations, execute_portfolio_rebalancing, generate_portfolio_report, __init__, _initialize_price_feeds, _initialize_rebalancing_strategies, create_portfolio, add_holding, update_portfolio_prices, generate_rebalancing_recommendations, execute_rebalancing, generate_performance_report, _get_default_allocation, _get_current_price, _get_asset_name, _update_portfolio_totals, _calculate_asset_allocation, _calculate_rebalancing_trades, _estimate_rebalancing_impact, _assess_tax_implications, _calculate_rebalancing_confidence, _update_holding_after_trade",
        "Imports: os, json, uuid, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Union, dataclasses.dataclass, dataclasses.field, decimal.Decimal, logging, highway.get_highway, highway.DataType, analytics.get_portfolio_analytics, random"
      ]
    },
    "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: DataHub",
        "Contains 4 functions: __init__, _save_data, get_latest_data, run_dashboard",
        "Imports: asyncio, logging, json, os, datetime.datetime, typing.Dict, typing.List, typing.Any, pandas, dotenv.load_dotenv, fetchers.microsoft_fetcher.MicrosoftFetcher, fetchers.google_fetcher.GoogleFetcher, fetchers.x_fetcher.XFetcher, aggregator.data_aggregator.DataAggregator, web.dashboard.create_dashboard"
      ]
    },
    "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: GoogleFetcher",
        "Contains 1 functions: __init__",
        "Imports: asyncio, aiohttp, logging, json, datetime.datetime, typing.Dict, typing.List, typing.Any, feedparser, bs4.BeautifulSoup"
      ]
    },
    "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MicrosoftFetcher",
        "Contains 1 functions: __init__",
        "Imports: asyncio, aiohttp, logging, json, datetime.datetime, typing.Dict, typing.List, typing.Any, feedparser, requests, bs4.BeautifulSoup"
      ]
    },
    "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: XFetcher",
        "Contains 1 functions: __init__",
        "Imports: asyncio, aiohttp, logging, json, os, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, feedparser, bs4.BeautifulSoup"
      ]
    },
    "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: ContentCategory, EmotionalTone, ResonanceLevel, TailoredContent, PersonalizedFeed, ContentResonance, ResonanceEngine",
        "Contains 38 functions: get_resonance_engine, aggregate_financial_content, create_personalized_feed, deliver_tailored_content, analyze_content_resonance, generate_content_insights, __init__, _initialize_content_aggregation, _initialize_emotional_analysis, _initialize_personalization_engine, _initialize_resonance_tracking, _initialize_content_sources, aggregate_financial_content, create_personalized_feed, deliver_tailored_content, analyze_content_resonance, generate_content_insights, _fetch_raw_content, _process_and_tailor_content, _analyze_emotional_tone, _calculate_sentiment_score, _extract_key_insights, _identify_related_symbols, _calculate_base_resonance_score, _determine_target_audience, _assess_urgency_level, _select_candidate_content, _rank_content_by_resonance, _calculate_resonance_level, _assess_emotional_impact, _calculate_engagement_metrics, _analyze_behavioral_response, _analyze_sentiment_distribution, _extract_key_themes, _assess_market_impact, _analyze_resonance_patterns, _generate_trend_predictions, _generate_content_recommendations",
        "Imports: os, json, feedparser, requests, datetime.datetime, datetime.timedelta, typing.Dict, typing.List, typing.Any, typing.Optional, typing.Union, dataclasses.dataclass, dataclasses.field, enum.Enum, logging, re, highway.get_highway, highway.DataType"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py": {
      "entityType": "file",
      "observations": [
        "Contains 17 classes: _Flavour, _WindowsFlavour, _PosixFlavour, _Accessor, _NormalAccessor, _Selector, _TerminatingSelector, _PreciseSelector, _WildcardSelector, _RecursiveWildcardSelector, _PathParents, PurePath, PurePosixPath, PureWindowsPath, Path, PosixPath, WindowsPath",
        "Contains 116 functions: _py2_fsencode, _is_wildcard_pattern, _cached, _make_selector, __init__, parse_parts, join_parsed_parts, splitroot, casefold, casefold_parts, resolve, _split_extended_path, _ext_to_normal, is_reserved, make_uri, splitroot, casefold, casefold_parts, resolve, is_reserved, make_uri, _wrap_strfunc, _wrap_binary_strfunc, readlink, __init__, select_from, _select_from, __init__, _select_from, __init__, _select_from, __init__, _iterate_directories, _select_from, __init__, __len__, __getitem__, __repr__, __new__, __reduce__, _parse_args, _from_parts, _from_parsed_parts, _format_parsed_parts, _init, _make_child, __str__, as_posix, __bytes__, __repr__, as_uri, _cparts, __eq__, __ne__, __hash__, __lt__, __le__, __gt__, __ge__, anchor, name, suffix, suffixes, stem, with_name, with_suffix, relative_to, parts, joinpath, __truediv__, __rtruediv__, parent, parents, is_absolute, is_reserved, match, __new__, _init, _make_child_relpath, _opener, _raw_open, cwd, iterdir, glob, rglob, absolute, resolve, stat, owner, group, open, touch, mkdir, chmod, lchmod, unlink, rmdir, lstat, rename, replace, symlink_to, exists, is_dir, is_file, is_symlink, is_block_device, is_char_device, is_fifo, is_socket, _resolve, wrapped, wrapped, lchmod, symlink, symlink, wrapper",
        "Imports: fnmatch, functools, io, ntpath, os, posixpath, re, sys, time, collections.Sequence, contextlib.contextmanager, errno.EINVAL, errno.ENOENT, operator.attrgetter, stat.S_ISDIR, stat.S_ISLNK, stat.S_ISREG, stat.S_ISSOCK, stat.S_ISBLK, stat.S_ISCHR, stat.S_ISFIFO, urllib.quote, urllib.quote, nt, urllib.parse.quote, urllib.parse.quote_from_bytes, nt._getfinalpathname, pwd, grp"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pylab.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: matplotlib.pylab.*, matplotlib.pylab"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py": {
      "entityType": "file",
      "observations": [
        "Contains 15 classes: _LazyDescr, MovedModule, _LazyModule, MovedAttribute, _SixMetaPathImporter, _MovedItems, Module_six_moves_urllib_parse, Module_six_moves_urllib_error, Module_six_moves_urllib_request, Module_six_moves_urllib_response, Module_six_moves_urllib_robotparser, Module_six_moves_urllib, Iterator, metaclass, X",
        "Contains 69 functions: _add_doc, _import_module, add_move, remove_move, assertCountEqual, assertRaisesRegex, assertRegex, assertNotRegex, with_metaclass, add_metaclass, ensure_binary, ensure_str, ensure_text, python_2_unicode_compatible, __init__, __get__, __init__, _resolve, __getattr__, __init__, __dir__, __init__, _resolve, __init__, _add_module, _get_module, find_module, find_spec, __get_module, load_module, is_package, get_code, create_module, exec_module, __dir__, get_unbound_function, create_unbound_method, get_unbound_function, create_bound_method, create_unbound_method, iterkeys, itervalues, iteritems, iterlists, iterkeys, itervalues, iteritems, iterlists, b, u, b, u, byte2int, indexbytes, reraise, exec_, raise_from, print_, print_, _update_wrapper, wraps, wrapper, advance_iterator, callable, next, write, __new__, __prepare__, __len__",
        "Imports: __future__.absolute_import, functools, itertools, operator, sys, types, importlib.util.spec_from_loader, struct, io, StringIO"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py": {
      "entityType": "file",
      "observations": [
        "Contains 50 classes: _Sentinel, _SpecialForm, _ExtensionsSpecialForm, _DefaultMixin, _TypeVarLikeMeta, _EllipsisDummy, Sentinel, _AnyMeta, Any, _LiteralGenericAlias, _LiteralForm, _SpecialGenericAlias, _ProtocolMeta, Protocol, SupportsInt, SupportsFloat, SupportsComplex, SupportsBytes, SupportsIndex, SupportsAbs, SupportsRound, Reader, Writer, SingletonMeta, NoDefaultType, NoExtraItemsType, _TypedDictMeta, _TypedDictSpecialForm, TypeVar, _Immutable, ParamSpecArgs, ParamSpecKwargs, _ConcatenateGenericAlias, _TypeFormForm, _UnpackSpecialForm, _UnpackAlias, deprecated, _NamedTupleMeta, Buffer, NewType, TypeAliasType, Doc, Format, ParamSpec, ParamSpec, _ConcatenateGenericAlias, TypeVarTuple, TypeVarTuple, _TypeAliasGenericAlias, Dummy",
        "Contains 211 functions: IntVar, _get_protocol_attrs, _caller, _set_default, _set_module, _create_concatenate_alias, _concatenate_getitem, _unpack_args, _has_generic_or_protocol_as_origin, _is_unpacked_typevartuple, __repr__, _should_collect_from_parameters, _should_collect_from_parameters, __init__, __getattr__, __mro_entries__, __repr__, __reduce__, __call__, __or__, __ror__, __instancecheck__, __subclasscheck__, __getitem__, __repr__, final, disjoint_base, _flatten_literal_params, _value_and_type_iter, overload, get_overloads, clear_overloads, _is_dunder, _allow_reckless_class_checks, _no_init, _type_check_issubclass_arg_1, _proto_hook, runtime_checkable, _get_typeddict_qualifiers, _create_typeddict, TypedDict, is_typeddict, assert_type, _strip_extras, get_type_hints, _could_be_inserted_optional, _clean_optional, get_origin, get_args, TypeAlias, __instancecheck__, Concatenate, TypeGuard, TypeIs, TypeForm, LiteralString, Self, Never, Required, NotRequired, ReadOnly, _is_unpack, Unpack, _is_unpack, reveal_type, assert_never, dataclass_transform, override, _is_param_expr, _is_param_expr, _check_generic, _check_generic, _collect_type_vars, _collect_parameters, _make_nmtuple, _namedtuple_mro_entries, NamedTuple, get_original_bases, is_protocol, get_protocol_members, get_annotations, _eval_with_owner, evaluate_forward_ref, __init__, __repr__, __getstate__, type_repr, __instancecheck__, __repr__, __new__, __eq__, __hash__, __init__, __getitem__, __init__, __setattr__, __getitem__, __new__, __init__, __subclasscheck__, __instancecheck__, __eq__, __hash__, __init_subclass__, __int__, __float__, __complex__, __bytes__, __index__, __abs__, __round__, read, write, __setattr__, __new__, __repr__, __reduce__, __new__, __repr__, __reduce__, __new__, __subclasscheck__, __call__, __mro_entries__, __new__, __init_subclass__, __copy__, __deepcopy__, __init__, __repr__, __eq__, __init__, __repr__, __eq__, _type_convert, __init__, __repr__, __hash__, __call__, __parameters__, copy_with, __getitem__, __call__, __init__, __typing_unpacked_tuple_args__, __typing_is_unpacked_typevartuple__, __getitem__, decorator, __init__, __call__, __new__, __call__, __init__, __mro_entries__, __repr__, __reduce__, _is_unionable, _is_unionable, __init__, __setattr__, __delattr__, _raise_attribute_error, __repr__, _check_parameters, __getitem__, __reduce__, __init_subclass__, __call__, __init__, __repr__, __hash__, __eq__, __call__, __or__, __ror__, _tvar_prepare_subst, __new__, __init_subclass__, args, kwargs, __init__, __repr__, __hash__, __eq__, __reduce__, __call__, copy_with, __getitem__, __new__, __init_subclass__, __iter__, __init__, __repr__, __hash__, __eq__, __reduce__, __init_subclass__, __or__, __ror__, __getattr__, _check_single_param, __or__, __ror__, __annotate__, _paramspec_prepare_subst, _typevartuple_prepare_subst, __init_subclass__, __new__, __init_subclass__, __init_subclass__, wrapper",
        "Imports: abc, builtins, collections, collections.abc, contextlib, enum, functools, inspect, io, keyword, operator, sys, types, typing, warnings, annotationlib, typing.Any, typing.AsyncContextManager, typing.AsyncGenerator, typing.ContextManager, typing.Generator, typing.TypeVar, typing.ParamSpec, typing.TypeVarTuple, annotationlib.Format, annotationlib.get_annotations, _socket, functools, types.MethodType, asyncio.coroutines, functools, inspect"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: _BlockingAsyncContextManager, _BlockingPortalTaskStatus, BlockingPortal, BlockingPortalProvider",
        "Contains 27 functions: _token_or_error, run, run_sync, start_blocking_portal, check_cancelled, __init__, __enter__, __exit__, __init__, started, __new__, __init__, _check_running, _spawn_task_from_thread, call, call, call, start_task_soon, start_task_soon, start_task_soon, start_task, wrap_async_context_manager, __enter__, __exit__, run_blocking_portal, callback, task_done",
        "Imports: __future__.annotations, sys, collections.abc.Awaitable, collections.abc.Callable, collections.abc.Generator, concurrent.futures.Future, contextlib.AbstractAsyncContextManager, contextlib.AbstractContextManager, contextlib.contextmanager, dataclasses.dataclass, dataclasses.field, inspect.isawaitable, threading.Lock, threading.Thread, threading.current_thread, threading.get_ident, types.TracebackType, typing.Any, typing.Generic, typing.TypeVar, typing.cast, typing.overload, _core._eventloop.get_async_backend, _core._eventloop.get_cancelled_exc_class, _core._eventloop.threadlocals, _core._eventloop.run, _core._exceptions.NoEventLoopError, _core._synchronization.Event, _core._tasks.CancelScope, _core._tasks.create_task_group, abc._tasks.TaskStatus, lowlevel.EventLoopToken, typing.TypeVarTuple, typing.Unpack, typing_extensions.TypeVarTuple, typing_extensions.Unpack"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: EventLoopToken, _NoValueSet, RunvarToken, RunVar",
        "Contains 10 functions: current_token, __init__, __init__, _current_vars, get, get, get, set, reset, __repr__",
        "Imports: __future__.annotations, enum, dataclasses.dataclass, typing.Any, typing.Generic, typing.Literal, typing.TypeVar, typing.final, typing.overload, weakref.WeakKeyDictionary, _core._eventloop.get_async_backend, abc.AsyncBackend"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: FreePortFactory",
        "Contains 19 functions: extract_backend_and_options, get_runner, pytest_addoption, pytest_configure, pytest_fixture_setup, pytest_pycollect_makeitem, pytest_pyfunc_call, anyio_backend, anyio_backend_name, anyio_backend_options, free_tcp_port_factory, free_udp_port_factory, free_tcp_port, free_udp_port, wrapper, run_with_hypothesis, __init__, kind, __call__",
        "Imports: __future__.annotations, socket, sys, collections.abc.Callable, collections.abc.Generator, collections.abc.Iterator, contextlib.ExitStack, contextlib.contextmanager, inspect.isasyncgenfunction, inspect.iscoroutinefunction, inspect.ismethod, typing.Any, typing.cast, pytest, sniffio, _pytest.fixtures.SubRequest, _pytest.outcomes.Exit, _core._eventloop.get_all_backends, _core._eventloop.get_async_backend, _core._exceptions.iterate_exceptions, abc.TestRunner, exceptiongroup.ExceptionGroup"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Worker, Worker, Worker",
        "Contains 12 functions: _stop_workers, current_default_interpreter_limiter, _interp_call, __init__, destroy, call, __init__, destroy, call, __init__, call, destroy",
        "Imports: __future__.annotations, atexit, os, sys, collections.deque, collections.abc.Callable, typing.Any, typing.Final, typing.TypeVar, .current_time, .to_thread, _core._exceptions.BrokenWorkerInterpreter, _core._synchronization.CapacityLimiter, lowlevel.RunVar, typing.TypeVarTuple, typing.Unpack, typing_extensions.TypeVarTuple, typing_extensions.Unpack, concurrent.interpreters.ExecutionFailed, concurrent.interpreters.create, _interpqueues, _interpreters, pickle"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: current_default_process_limiter, process_worker",
        "Imports: __future__.annotations, os, pickle, subprocess, sys, collections.deque, collections.abc.Callable, importlib.util.module_from_spec, importlib.util.spec_from_file_location, typing.TypeVar, typing.cast, _core._eventloop.current_time, _core._eventloop.get_async_backend, _core._eventloop.get_cancelled_exc_class, _core._exceptions.BrokenWorkerProcess, _core._subprocesses.open_process, _core._synchronization.CapacityLimiter, _core._tasks.CancelScope, _core._tasks.fail_after, abc.ByteReceiveStream, abc.ByteSendStream, abc.Process, lowlevel.RunVar, lowlevel.checkpoint_if_cancelled, streams.buffered.BufferedByteReceiveStream, typing.TypeVarTuple, typing.Unpack, typing_extensions.TypeVarTuple, typing_extensions.Unpack"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: current_default_thread_limiter",
        "Imports: __future__.annotations, sys, collections.abc.Callable, typing.TypeVar, warnings.warn, _core._eventloop.get_async_backend, abc.CapacityLimiter, typing.TypeVarTuple, typing.Unpack, typing_extensions.TypeVarTuple, typing_extensions.Unpack"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: __getattr__",
        "Imports: __future__.annotations, _core._contextmanagers.AsyncContextManagerMixin, _core._contextmanagers.ContextManagerMixin, _core._eventloop.current_time, _core._eventloop.get_all_backends, _core._eventloop.get_cancelled_exc_class, _core._eventloop.run, _core._eventloop.sleep, _core._eventloop.sleep_forever, _core._eventloop.sleep_until, _core._exceptions.BrokenResourceError, _core._exceptions.BrokenWorkerInterpreter, _core._exceptions.BrokenWorkerProcess, _core._exceptions.BusyResourceError, _core._exceptions.ClosedResourceError, _core._exceptions.ConnectionFailed, _core._exceptions.DelimiterNotFound, _core._exceptions.EndOfStream, _core._exceptions.IncompleteRead, _core._exceptions.NoEventLoopError, _core._exceptions.RunFinishedError, _core._exceptions.TypedAttributeLookupError, _core._exceptions.WouldBlock, _core._fileio.AsyncFile, _core._fileio.Path, _core._fileio.open_file, _core._fileio.wrap_file, _core._resources.aclose_forcefully, _core._signals.open_signal_receiver, _core._sockets.TCPConnectable, _core._sockets.UNIXConnectable, _core._sockets.as_connectable, _core._sockets.connect_tcp, _core._sockets.connect_unix, _core._sockets.create_connected_udp_socket, _core._sockets.create_connected_unix_datagram_socket, _core._sockets.create_tcp_listener, _core._sockets.create_udp_socket, _core._sockets.create_unix_datagram_socket, _core._sockets.create_unix_listener, _core._sockets.getaddrinfo, _core._sockets.getnameinfo, _core._sockets.notify_closing, _core._sockets.wait_readable, _core._sockets.wait_socket_readable, _core._sockets.wait_socket_writable, _core._sockets.wait_writable, _core._streams.create_memory_object_stream, _core._subprocesses.open_process, _core._subprocesses.run_process, _core._synchronization.CapacityLimiter, _core._synchronization.CapacityLimiterStatistics, _core._synchronization.Condition, _core._synchronization.ConditionStatistics, _core._synchronization.Event, _core._synchronization.EventStatistics, _core._synchronization.Lock, _core._synchronization.LockStatistics, _core._synchronization.ResourceGuard, _core._synchronization.Semaphore, _core._synchronization.SemaphoreStatistics, _core._tasks.TASK_STATUS_IGNORED, _core._tasks.CancelScope, _core._tasks.create_task_group, _core._tasks.current_effective_deadline, _core._tasks.fail_after, _core._tasks.move_on_after, _core._tempfile.NamedTemporaryFile, _core._tempfile.SpooledTemporaryFile, _core._tempfile.TemporaryDirectory, _core._tempfile.TemporaryFile, _core._tempfile.gettempdir, _core._tempfile.gettempdirb, _core._tempfile.mkdtemp, _core._tempfile.mkstemp, _core._testing.TaskInfo, _core._testing.get_current_task, _core._testing.get_running_tasks, _core._testing.wait_all_tasks_blocked, _core._typedattr.TypedAttributeProvider, _core._typedattr.TypedAttributeSet, _core._typedattr.typed_attribute, warnings"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AsyncBackend",
        "Contains 24 functions: run, current_token, current_time, cancelled_exception_class, create_cancel_scope, current_effective_deadline, create_task_group, create_event, create_lock, create_semaphore, create_capacity_limiter, check_cancelled, run_async_from_thread, run_sync_from_thread, create_blocking_portal, setup_process_pool_exit_at_shutdown, create_tcp_listener, create_unix_listener, notify_closing, current_default_thread_limiter, open_signal_receiver, get_current_task, get_running_tasks, create_test_runner",
        "Imports: __future__.annotations, math, sys, abc.ABCMeta, abc.abstractmethod, collections.abc.AsyncIterator, collections.abc.Awaitable, collections.abc.Callable, collections.abc.Sequence, contextlib.AbstractContextManager, os.PathLike, signal.Signals, socket.AddressFamily, socket.SocketKind, socket.socket, typing.IO, typing.TYPE_CHECKING, typing.Any, typing.TypeVar, typing.Union, typing.overload, typing.TypeVarTuple, typing.Unpack, typing_extensions.TypeVarTuple, typing_extensions.Unpack, typing.TypeAlias, typing_extensions.TypeAlias, _typeshed.FileDescriptorLike, _core._synchronization.CapacityLimiter, _core._synchronization.Event, _core._synchronization.Lock, _core._synchronization.Semaphore, _core._tasks.CancelScope, _core._testing.TaskInfo, from_thread.BlockingPortal, _sockets.ConnectedUDPSocket, _sockets.ConnectedUNIXDatagramSocket, _sockets.IPSockAddrType, _sockets.SocketListener, _sockets.SocketStream, _sockets.UDPSocket, _sockets.UNIXDatagramSocket, _sockets.UNIXSocketStream, _subprocesses.Process, _tasks.TaskGroup, _testing.TestRunner"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_resources.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AsyncResource",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, abc.ABCMeta, abc.abstractmethod, types.TracebackType, typing.TypeVar"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py": {
      "entityType": "file",
      "observations": [
        "Contains 9 classes: SocketAttribute, _SocketProvider, SocketStream, UNIXSocketStream, SocketListener, UDPSocket, ConnectedUDPSocket, UNIXDatagramSocket, ConnectedUNIXDatagramSocket",
        "Contains 3 functions: _validate_socket, extra_attributes, _raw_socket",
        "Imports: __future__.annotations, errno, socket, sys, abc.abstractmethod, collections.abc.Callable, collections.abc.Collection, collections.abc.Mapping, contextlib.AsyncExitStack, io.IOBase, ipaddress.IPv4Address, ipaddress.IPv6Address, socket.AddressFamily, typing.Any, typing.TypeVar, typing.Union, _core._eventloop.get_async_backend, _core._typedattr.TypedAttributeProvider, _core._typedattr.TypedAttributeSet, _core._typedattr.typed_attribute, _streams.ByteStream, _streams.Listener, _streams.UnreliableObjectStream, _tasks.TaskGroup, typing.TypeAlias, typing_extensions.TypeAlias, _core._sockets.convert_ipv6_sockaddr, .create_task_group"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py": {
      "entityType": "file",
      "observations": [
        "Contains 12 classes: UnreliableObjectReceiveStream, UnreliableObjectSendStream, UnreliableObjectStream, ObjectReceiveStream, ObjectSendStream, ObjectStream, ByteReceiveStream, ByteSendStream, ByteStream, Listener, ObjectStreamConnectable, ByteStreamConnectable",
        "Contains 2 functions: __aiter__, __aiter__",
        "Imports: __future__.annotations, sys, abc.ABCMeta, abc.abstractmethod, collections.abc.Callable, typing.Any, typing.Generic, typing.TypeVar, typing.Union, _core._exceptions.EndOfStream, _core._typedattr.TypedAttributeProvider, _resources.AsyncResource, _tasks.TaskGroup, typing.TypeAlias, typing_extensions.TypeAlias"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_subprocesses.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Process",
        "Contains 8 functions: terminate, kill, send_signal, pid, returncode, stdin, stdout, stderr",
        "Imports: __future__.annotations, abc.abstractmethod, signal.Signals, _resources.AsyncResource, _streams.ByteReceiveStream, _streams.ByteSendStream"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TaskStatus, TaskGroup",
        "Contains 4 functions: started, started, started, start_soon",
        "Imports: __future__.annotations, sys, abc.ABCMeta, abc.abstractmethod, collections.abc.Awaitable, collections.abc.Callable, types.TracebackType, typing.TYPE_CHECKING, typing.Any, typing.Protocol, typing.overload, typing.TypeVar, typing_extensions.TypeVar, typing.TypeVarTuple, typing.Unpack, typing_extensions.TypeVarTuple, typing_extensions.Unpack, _core._tasks.CancelScope"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TestRunner",
        "Contains 5 functions: __enter__, __exit__, run_asyncgen_fixture, run_fixture, run_test",
        "Imports: __future__.annotations, types, abc.ABCMeta, abc.abstractmethod, collections.abc.AsyncGenerator, collections.abc.Callable, collections.abc.Coroutine, collections.abc.Iterable, typing.Any, typing.TypeVar"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, _eventloop.AsyncBackend, _resources.AsyncResource, _sockets.ConnectedUDPSocket, _sockets.ConnectedUNIXDatagramSocket, _sockets.IPAddressType, _sockets.IPSockAddrType, _sockets.SocketAttribute, _sockets.SocketListener, _sockets.SocketStream, _sockets.UDPPacketType, _sockets.UDPSocket, _sockets.UNIXDatagramPacketType, _sockets.UNIXDatagramSocket, _sockets.UNIXSocketStream, _streams.AnyByteReceiveStream, _streams.AnyByteSendStream, _streams.AnyByteStream, _streams.AnyByteStreamConnectable, _streams.AnyUnreliableByteReceiveStream, _streams.AnyUnreliableByteSendStream, _streams.AnyUnreliableByteStream, _streams.ByteReceiveStream, _streams.ByteSendStream, _streams.ByteStream, _streams.ByteStreamConnectable, _streams.Listener, _streams.ObjectReceiveStream, _streams.ObjectSendStream, _streams.ObjectStream, _streams.ObjectStreamConnectable, _streams.UnreliableObjectReceiveStream, _streams.UnreliableObjectSendStream, _streams.UnreliableObjectStream, _subprocesses.Process, _tasks.TaskGroup, _tasks.TaskStatus, _testing.TestRunner, _core._synchronization.CapacityLimiter, _core._synchronization.Condition, _core._synchronization.Event, _core._synchronization.Lock, _core._synchronization.Semaphore, _core._tasks.CancelScope, from_thread.BlockingPortal"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: BufferedByteReceiveStream, BufferedByteStream, BufferedConnectable",
        "Contains 5 functions: buffer, extra_attributes, feed_data, __init__, __init__",
        "Imports: __future__.annotations, sys, collections.abc.Callable, collections.abc.Iterable, collections.abc.Mapping, dataclasses.dataclass, dataclasses.field, typing.Any, typing.SupportsIndex, .ClosedResourceError, .DelimiterNotFound, .EndOfStream, .IncompleteRead, abc.AnyByteReceiveStream, abc.AnyByteStream, abc.AnyByteStreamConnectable, abc.ByteReceiveStream, abc.ByteStream, abc.ByteStreamConnectable, typing.override, typing_extensions.override"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: FileStreamAttribute, _BaseFileStream, FileReadStream, FileWriteStream",
        "Contains 2 functions: __init__, extra_attributes",
        "Imports: __future__.annotations, collections.abc.Callable, collections.abc.Mapping, io.SEEK_SET, io.UnsupportedOperation, os.PathLike, pathlib.Path, typing.Any, typing.BinaryIO, typing.cast, .BrokenResourceError, .ClosedResourceError, .EndOfStream, .TypedAttributeSet, .to_thread, .typed_attribute, abc.ByteReceiveStream, abc.ByteSendStream"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: MemoryObjectStreamStatistics, MemoryObjectItemReceiver, MemoryObjectStreamState, MemoryObjectReceiveStream, MemoryObjectSendStream",
        "Contains 18 functions: __repr__, statistics, __post_init__, receive_nowait, clone, close, statistics, __enter__, __exit__, __del__, __post_init__, send_nowait, clone, close, statistics, __enter__, __exit__, __del__",
        "Imports: __future__.annotations, warnings, collections.OrderedDict, collections.deque, dataclasses.dataclass, dataclasses.field, types.TracebackType, typing.Generic, typing.NamedTuple, typing.TypeVar, .BrokenResourceError, .ClosedResourceError, .EndOfStream, .WouldBlock, _core._testing.TaskInfo, _core._testing.get_current_task, abc.Event, abc.ObjectReceiveStream, abc.ObjectSendStream, lowlevel.checkpoint"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: StapledByteStream, StapledObjectStream, MultiListener",
        "Contains 4 functions: extra_attributes, extra_attributes, __post_init__, extra_attributes",
        "Imports: __future__.annotations, collections.abc.Callable, collections.abc.Mapping, collections.abc.Sequence, dataclasses.dataclass, typing.Any, typing.Generic, typing.TypeVar, abc.ByteReceiveStream, abc.ByteSendStream, abc.ByteStream, abc.Listener, abc.ObjectReceiveStream, abc.ObjectSendStream, abc.ObjectStream, abc.TaskGroup, .create_task_group"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: TextReceiveStream, TextSendStream, TextStream, TextConnectable",
        "Contains 7 functions: __post_init__, extra_attributes, __post_init__, extra_attributes, __post_init__, extra_attributes, __init__",
        "Imports: __future__.annotations, codecs, sys, collections.abc.Callable, collections.abc.Mapping, dataclasses.InitVar, dataclasses.dataclass, dataclasses.field, typing.Any, abc.AnyByteReceiveStream, abc.AnyByteSendStream, abc.AnyByteStream, abc.AnyByteStreamConnectable, abc.ObjectReceiveStream, abc.ObjectSendStream, abc.ObjectStream, abc.ObjectStreamConnectable, typing.override, typing_extensions.override"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: TLSAttribute, TLSStream, TLSListener, TLSConnectable",
        "Contains 3 functions: extra_attributes, extra_attributes, __init__",
        "Imports: __future__.annotations, logging, re, ssl, sys, collections.abc.Callable, collections.abc.Mapping, dataclasses.dataclass, functools.wraps, ssl.SSLContext, typing.Any, typing.TypeVar, .BrokenResourceError, .EndOfStream, .aclose_forcefully, .get_cancelled_exc_class, .to_thread, _core._typedattr.TypedAttributeSet, _core._typedattr.typed_attribute, abc.AnyByteStream, abc.AnyByteStreamConnectable, abc.ByteStream, abc.ByteStreamConnectable, abc.Listener, abc.TaskGroup, typing.TypeAlias, typing_extensions.TypeAlias, typing.TypeVarTuple, typing.Unpack, typing_extensions.TypeVarTuple, typing_extensions.Unpack, typing.override, typing_extensions.override, .fail_after"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py": {
      "entityType": "file",
      "observations": [
        "Contains 30 classes: CancelScope, TaskState, _AsyncioTaskStatus, TaskGroup, WorkerThread, BlockingPortal, StreamReaderWrapper, StreamWriterWrapper, Process, StreamProtocol, DatagramProtocol, SocketStream, _RawSocketMixin, UNIXSocketStream, TCPSocketListener, UNIXSocketListener, UDPSocket, ConnectedUDPSocket, UNIXDatagramSocket, ConnectedUNIXDatagramSocket, Event, Lock, Semaphore, CapacityLimiter, _SignalReceiver, AsyncIOTaskInfo, TestRunner, AsyncIOBackend, _State, Runner",
        "Contains 154 functions: find_root_task, get_callable_name, _task_started, is_anyio_cancellation, _forcibly_shutdown_process_pool_on_exit, _cancel_all_tasks, __new__, __init__, __enter__, __exit__, _effectively_cancelled, _parent_cancellation_is_visible_to_us, _timeout, _deliver_cancellation, _restart_cancellation_in_parent, cancel, deadline, deadline, cancel_called, cancelled_caught, shield, shield, __init__, __init__, started, __init__, _spawn, start_soon, __init__, _report_result, run, stop, __new__, __init__, _spawn_task_from_thread, terminate, kill, send_signal, pid, returncode, stdin, stdout, stderr, connection_made, connection_lost, data_received, eof_received, pause_writing, resume_writing, connection_made, connection_lost, datagram_received, error_received, pause_writing, resume_writing, __init__, _raw_socket, __init__, _raw_socket, _wait_until_readable, _wait_until_writable, __init__, _raw_socket, __init__, _raw_socket, __init__, _raw_socket, __init__, _raw_socket, __new__, __init__, set, is_set, statistics, __new__, __init__, acquire_nowait, locked, release, statistics, __new__, __init__, acquire_nowait, release, value, max_value, statistics, __new__, __init__, total_tokens, total_tokens, borrowed_tokens, available_tokens, _notify_next_waiter, acquire_nowait, acquire_on_behalf_of_nowait, release, release_on_behalf_of, statistics, __init__, _deliver, __enter__, __exit__, __aiter__, __init__, has_pending_cancellation, __init__, __enter__, __exit__, get_loop, _exception_handler, _raise_async_exceptions, run_asyncgen_fixture, run_fixture, run_test, run, current_token, current_time, cancelled_exception_class, create_cancel_scope, current_effective_deadline, create_task_group, create_event, create_lock, create_semaphore, create_capacity_limiter, check_cancelled, run_async_from_thread, run_sync_from_thread, create_blocking_portal, setup_process_pool_exit_at_shutdown, create_tcp_listener, create_unix_listener, notify_closing, current_default_thread_limiter, open_signal_receiver, get_current_task, get_running_tasks, create_test_runner, __init__, __enter__, __exit__, close, get_loop, run, _lazy_init, _on_sigint, _do_shutdown, task_done, callback, callback, wrapper, cb, cb",
        "Imports: __future__.annotations, array, asyncio, concurrent.futures, contextvars, math, os, socket, sys, threading, weakref, asyncio.AbstractEventLoop, asyncio.CancelledError, asyncio.all_tasks, asyncio.create_task, asyncio.current_task, asyncio.get_running_loop, asyncio.sleep, asyncio.base_events._run_until_complete_cb, collections.OrderedDict, collections.deque, collections.abc.AsyncGenerator, collections.abc.AsyncIterator, collections.abc.Awaitable, collections.abc.Callable, collections.abc.Collection, collections.abc.Coroutine, collections.abc.Iterable, collections.abc.Sequence, concurrent.futures.Future, contextlib.AbstractContextManager, contextlib.suppress, contextvars.Context, contextvars.copy_context, dataclasses.dataclass, functools.partial, functools.wraps, inspect.CORO_RUNNING, inspect.CORO_SUSPENDED, inspect.getcoroutinestate, inspect.iscoroutine, io.IOBase, os.PathLike, queue.Queue, signal.Signals, socket.AddressFamily, socket.SocketKind, threading.Thread, types.CodeType, types.TracebackType, typing.IO, typing.TYPE_CHECKING, typing.Any, typing.Optional, typing.TypeVar, typing.cast, weakref.WeakKeyDictionary, sniffio, .CapacityLimiterStatistics, .EventStatistics, .LockStatistics, .TaskInfo, .abc, _core._eventloop.claim_worker_thread, _core._eventloop.threadlocals, _core._exceptions.BrokenResourceError, _core._exceptions.BusyResourceError, _core._exceptions.ClosedResourceError, _core._exceptions.EndOfStream, _core._exceptions.RunFinishedError, _core._exceptions.WouldBlock, _core._exceptions.iterate_exceptions, _core._sockets.convert_ipv6_sockaddr, _core._streams.create_memory_object_stream, _core._synchronization.CapacityLimiter, _core._synchronization.Event, _core._synchronization.Lock, _core._synchronization.ResourceGuard, _core._synchronization.SemaphoreStatistics, _core._synchronization.Semaphore, _core._tasks.CancelScope, abc.AsyncBackend, abc.IPSockAddrType, abc.SocketListener, abc.UDPPacketType, abc.UNIXDatagramPacketType, abc._eventloop.StrOrBytesPath, lowlevel.RunVar, streams.memory.MemoryObjectReceiveStream, streams.memory.MemoryObjectSendStream, _typeshed.FileDescriptorLike, typing.ParamSpec, typing_extensions.ParamSpec, asyncio.Runner, typing.TypeVarTuple, typing.Unpack, contextvars, enum, signal, asyncio.coroutines, asyncio.events, asyncio.exceptions, asyncio.tasks, exceptiongroup.BaseExceptionGroup, typing_extensions.TypeVarTuple, typing_extensions.Unpack, _pytest.outcomes.OutcomeException, uvloop, uvloop, anyio._core._asyncio_selector_thread.get_selector, anyio._core._asyncio_selector_thread.get_selector, anyio._core._asyncio_selector_thread.get_selector, anyio._core._asyncio_selector_thread.get_selector"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py": {
      "entityType": "file",
      "observations": [
        "Contains 24 classes: CancelScope, TaskGroup, BlockingPortal, ReceiveStreamWrapper, SendStreamWrapper, Process, _ProcessPoolShutdownInstrument, _TrioSocketMixin, SocketStream, UNIXSocketStream, TCPSocketListener, UNIXSocketListener, UDPSocket, ConnectedUDPSocket, UNIXDatagramSocket, ConnectedUNIXDatagramSocket, Event, Lock, Semaphore, CapacityLimiter, _SignalReceiver, TestRunner, TrioTaskInfo, TrioBackend",
        "Contains 105 functions: __new__, __init__, __enter__, __exit__, cancel, deadline, deadline, cancel_called, cancelled_caught, shield, shield, __init__, start_soon, __new__, __init__, _spawn_task_from_thread, terminate, kill, send_signal, pid, returncode, stdin, stdout, stderr, after_run, __init__, _check_closed, _raw_socket, _convert_socket_error, __init__, __init__, __init__, __init__, __init__, __init__, __init__, __new__, __init__, is_set, statistics, set, __new__, __init__, _convert_runtime_error_msg, acquire_nowait, locked, release, statistics, __new__, __init__, acquire_nowait, max_value, value, release, statistics, __new__, __init__, total_tokens, total_tokens, borrowed_tokens, available_tokens, acquire_nowait, acquire_on_behalf_of_nowait, release, release_on_behalf_of, statistics, __init__, __enter__, __exit__, __aiter__, __init__, __exit__, _main_task_finished, _call_in_runner_task, run_asyncgen_fixture, run_fixture, run_test, __init__, has_pending_cancellation, run, current_token, current_time, cancelled_exception_class, create_cancel_scope, current_effective_deadline, create_task_group, create_event, create_lock, create_semaphore, create_capacity_limiter, check_cancelled, run_async_from_thread, run_sync_from_thread, create_blocking_portal, setup_process_pool_exit_at_shutdown, create_tcp_listener, create_unix_listener, notify_closing, current_default_thread_limiter, open_signal_receiver, get_current_task, get_running_tasks, create_test_runner, wrapper, convert_item",
        "Imports: __future__.annotations, array, math, os, socket, sys, types, weakref, collections.abc.AsyncGenerator, collections.abc.AsyncIterator, collections.abc.Awaitable, collections.abc.Callable, collections.abc.Collection, collections.abc.Coroutine, collections.abc.Iterable, collections.abc.Sequence, concurrent.futures.Future, contextlib.AbstractContextManager, dataclasses.dataclass, functools.partial, io.IOBase, os.PathLike, signal.Signals, socket.AddressFamily, socket.SocketKind, types.TracebackType, typing.IO, typing.TYPE_CHECKING, typing.Any, typing.Generic, typing.NoReturn, typing.TypeVar, typing.cast, typing.overload, trio.from_thread, trio.lowlevel, outcome.Error, outcome.Outcome, outcome.Value, trio.lowlevel.current_root_task, trio.lowlevel.current_task, trio.lowlevel.notify_closing, trio.lowlevel.wait_readable, trio.lowlevel.wait_writable, trio.socket.SocketType, trio.to_thread.run_sync, .CapacityLimiterStatistics, .EventStatistics, .LockStatistics, .RunFinishedError, .TaskInfo, .WouldBlock, .abc, _core._eventloop.claim_worker_thread, _core._exceptions.BrokenResourceError, _core._exceptions.BusyResourceError, _core._exceptions.ClosedResourceError, _core._exceptions.EndOfStream, _core._sockets.convert_ipv6_sockaddr, _core._streams.create_memory_object_stream, _core._synchronization.CapacityLimiter, _core._synchronization.Event, _core._synchronization.Lock, _core._synchronization.ResourceGuard, _core._synchronization.SemaphoreStatistics, _core._synchronization.Semaphore, _core._tasks.CancelScope, abc.IPSockAddrType, abc.UDPPacketType, abc.UNIXDatagramPacketType, abc._eventloop.AsyncBackend, abc._eventloop.StrOrBytesPath, streams.memory.MemoryObjectSendStream, _typeshed.FileDescriptorLike, typing.ParamSpec, typing_extensions.ParamSpec, typing.TypeVarTuple, typing.Unpack, exceptiongroup.BaseExceptionGroup, typing_extensions.TypeVarTuple, typing_extensions.Unpack, queue.Queue, trio.testing.wait_all_tasks_blocked"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Selector",
        "Contains 10 functions: get_selector, __init__, start, _stop, _notify_self, add_reader, add_writer, remove_reader, remove_writer, run",
        "Imports: __future__.annotations, asyncio, socket, threading, collections.abc.Callable, selectors.EVENT_READ, selectors.EVENT_WRITE, selectors.DefaultSelector, typing.TYPE_CHECKING, typing.Any, _typeshed.FileDescriptorLike"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: _SupportsCtxMgr, _SupportsAsyncCtxMgr, ContextManagerMixin, AsyncContextManagerMixin",
        "Contains 6 functions: __contextmanager__, __asynccontextmanager__, __enter__, __exit__, __contextmanager__, __asynccontextmanager__",
        "Imports: __future__.annotations, abc.abstractmethod, contextlib.AbstractAsyncContextManager, contextlib.AbstractContextManager, inspect.isasyncgen, inspect.iscoroutine, inspect.isgenerator, types.TracebackType, typing.Protocol, typing.TypeVar, typing.cast, typing.final"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 6 functions: run, current_time, get_all_backends, get_cancelled_exc_class, claim_worker_thread, get_async_backend",
        "Imports: __future__.annotations, math, sys, threading, collections.abc.Awaitable, collections.abc.Callable, collections.abc.Generator, contextlib.contextmanager, importlib.import_module, typing.TYPE_CHECKING, typing.Any, typing.TypeVar, sniffio, typing.TypeVarTuple, typing.Unpack, typing_extensions.TypeVarTuple, typing_extensions.Unpack, abc.AsyncBackend, lowlevel.EventLoopToken"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_exceptions.py": {
      "entityType": "file",
      "observations": [
        "Contains 13 classes: BrokenResourceError, BrokenWorkerProcess, BrokenWorkerInterpreter, BusyResourceError, ClosedResourceError, ConnectionFailed, DelimiterNotFound, EndOfStream, IncompleteRead, TypedAttributeLookupError, WouldBlock, NoEventLoopError, RunFinishedError",
        "Contains 7 functions: iterate_exceptions, __init__, __str__, __init__, __init__, __init__, __init__",
        "Imports: __future__.annotations, sys, collections.abc.Generator, textwrap.dedent, typing.Any, exceptiongroup.BaseExceptionGroup"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: AsyncFile, _PathIterator, Path",
        "Contains 48 functions: wrap_file, __init__, __getattr__, wrapped, __init__, __fspath__, __str__, __repr__, __bytes__, __hash__, __eq__, __lt__, __le__, __gt__, __ge__, __truediv__, __rtruediv__, parts, drive, root, anchor, parents, parent, name, suffix, suffixes, stem, as_posix, as_uri, is_relative_to, glob, is_absolute, is_reserved, joinpath, rglob, with_name, with_stem, with_suffix, with_segments, from_uri, full_match, match, match, info, relative_to, relative_to, sync_write_text, get_next_value",
        "Imports: __future__.annotations, os, pathlib, sys, collections.abc.AsyncIterator, collections.abc.Callable, collections.abc.Iterable, collections.abc.Iterator, collections.abc.Sequence, dataclasses.dataclass, functools.partial, os.PathLike, typing.IO, typing.TYPE_CHECKING, typing.Any, typing.AnyStr, typing.ClassVar, typing.Final, typing.Generic, typing.overload, .to_thread, abc.AsyncResource, types.ModuleType, _typeshed.OpenBinaryMode, _typeshed.OpenTextMode, _typeshed.ReadableBuffer, _typeshed.WriteableBuffer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_resources.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, abc.AsyncResource, _tasks.CancelScope"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_signals.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: open_signal_receiver",
        "Imports: __future__.annotations, collections.abc.AsyncIterator, contextlib.AbstractContextManager, signal.Signals, _eventloop.get_async_backend"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TCPConnectable, UNIXConnectable",
        "Contains 10 functions: getnameinfo, wait_socket_readable, wait_socket_writable, wait_readable, wait_writable, notify_closing, convert_ipv6_sockaddr, as_connectable, setup_raw_socket, __post_init__",
        "Imports: __future__.annotations, errno, os, socket, ssl, stat, sys, collections.abc.Awaitable, dataclasses.dataclass, ipaddress.IPv4Address, ipaddress.IPv6Address, ipaddress.ip_address, os.PathLike, os.chmod, socket.AddressFamily, socket.SocketKind, typing.TYPE_CHECKING, typing.Any, typing.Literal, typing.cast, typing.overload, .ConnectionFailed, .to_thread, abc.ByteStreamConnectable, abc.ConnectedUDPSocket, abc.ConnectedUNIXDatagramSocket, abc.IPAddressType, abc.IPSockAddrType, abc.SocketListener, abc.SocketStream, abc.UDPSocket, abc.UNIXDatagramSocket, abc.UNIXSocketStream, streams.stapled.MultiListener, streams.tls.TLSConnectable, streams.tls.TLSStream, _eventloop.get_async_backend, _resources.aclose_forcefully, _synchronization.Event, _tasks.create_task_group, _tasks.move_on_after, _typeshed.FileDescriptorLike, exceptiongroup.ExceptionGroup, typing.override, typing_extensions.override, typing_extensions.deprecated, warnings.deprecated, idna"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_streams.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: create_memory_object_stream",
        "Contains 1 functions: __new__",
        "Imports: __future__.annotations, math, typing.TypeVar, warnings.warn, streams.memory.MemoryObjectReceiveStream, streams.memory.MemoryObjectSendStream, streams.memory.MemoryObjectStreamState"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, sys, collections.abc.AsyncIterable, collections.abc.Iterable, collections.abc.Mapping, collections.abc.Sequence, io.BytesIO, os.PathLike, subprocess.PIPE, subprocess.CalledProcessError, subprocess.CompletedProcess, typing.IO, typing.Any, typing.Union, typing.cast, abc.Process, _eventloop.get_async_backend, _tasks.create_task_group, typing.TypeAlias, typing_extensions.TypeAlias"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py": {
      "entityType": "file",
      "observations": [
        "Contains 15 classes: EventStatistics, CapacityLimiterStatistics, LockStatistics, ConditionStatistics, SemaphoreStatistics, Event, EventAdapter, Lock, LockAdapter, Condition, Semaphore, SemaphoreAdapter, CapacityLimiter, CapacityLimiterAdapter, ResourceGuard",
        "Contains 69 functions: __new__, set, is_set, statistics, __new__, _event, set, is_set, statistics, __new__, acquire_nowait, release, locked, statistics, __new__, __init__, _lock, acquire_nowait, release, locked, statistics, __init__, _check_acquired, acquire_nowait, release, locked, notify, notify_all, statistics, __new__, __init__, acquire_nowait, release, value, max_value, statistics, __new__, __init__, _semaphore, acquire_nowait, release, value, max_value, statistics, __new__, total_tokens, total_tokens, borrowed_tokens, available_tokens, acquire_nowait, acquire_on_behalf_of_nowait, release, release_on_behalf_of, statistics, __new__, __init__, _limiter, total_tokens, total_tokens, borrowed_tokens, available_tokens, acquire_nowait, acquire_on_behalf_of_nowait, release, release_on_behalf_of, statistics, __init__, __enter__, __exit__",
        "Imports: __future__.annotations, math, collections.deque, collections.abc.Callable, dataclasses.dataclass, types.TracebackType, typing.TypeVar, sniffio.AsyncLibraryNotFoundError, lowlevel.checkpoint_if_cancelled, _eventloop.get_async_backend, _exceptions.BusyResourceError, _tasks.CancelScope, _testing.TaskInfo, _testing.get_current_task"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: _IgnoredTaskStatus, CancelScope",
        "Contains 15 functions: fail_after, move_on_after, current_effective_deadline, create_task_group, started, __new__, cancel, deadline, deadline, cancel_called, cancelled_caught, shield, shield, __enter__, __exit__",
        "Imports: __future__.annotations, math, collections.abc.Generator, contextlib.contextmanager, types.TracebackType, abc._tasks.TaskGroup, abc._tasks.TaskStatus, _eventloop.get_async_backend"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: TemporaryFile, NamedTemporaryFile, SpooledTemporaryFile, TemporaryDirectory",
        "Contains 11 functions: __init__, __init__, __init__, __init__, __init__, __init__, __init__, __init__, __init__, closed, __init__",
        "Imports: __future__.annotations, os, sys, tempfile, collections.abc.Iterable, io.BytesIO, io.TextIOWrapper, types.TracebackType, typing.TYPE_CHECKING, typing.Any, typing.AnyStr, typing.Generic, typing.overload, .to_thread, _core._fileio.AsyncFile, lowlevel.checkpoint_if_cancelled, _typeshed.OpenBinaryMode, _typeshed.OpenTextMode, _typeshed.ReadableBuffer, _typeshed.WriteableBuffer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_testing.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TaskInfo",
        "Contains 7 functions: get_current_task, get_running_tasks, __init__, __eq__, __hash__, __repr__, has_pending_cancellation",
        "Imports: __future__.annotations, collections.abc.Awaitable, collections.abc.Generator, typing.Any, typing.cast, _eventloop.get_async_backend"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TypedAttributeSet, TypedAttributeProvider",
        "Contains 6 functions: typed_attribute, __init_subclass__, extra_attributes, extra, extra, extra",
        "Imports: __future__.annotations, collections.abc.Callable, collections.abc.Mapping, typing.Any, typing.TypeVar, typing.final, typing.overload, _exceptions.TypedAttributeLookupError"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: CSS",
        "Contains 11 functions: __init__, escape, _ns, _rs, compile, select_one, select, iselect, closest, match, filter",
        "Imports: __future__.annotations, types.ModuleType, typing.Any, typing.cast, typing.Iterable, typing.Iterator, typing.MutableSequence, typing.Optional, typing.TYPE_CHECKING, warnings, bs4._typing._NamespaceMapping, soupsieve.SoupSieve, bs4.element, bs4.element.ResultSet, bs4.element.Tag, soupsieve, bs4.ResultSet"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: EntitySubstitution, EncodingDetector, UnicodeDammit",
        "Contains 25 functions: _chardet_dammit, _populate_class_variables, _substitute_html_entity, _substitute_xml_entity, _escape_entity_name, _escape_unrecognized_entity_name, quoted_attribute_value, substitute_xml, substitute_xml_containing_entities, substitute_html, substitute_html5, substitute_html5_raw, __init__, _usable, encodings, strip_byte_order_mark, find_declared_encoding, __init__, _sub_ms_char, _convert_from, _to_unicode, declared_html_encoding, find_codec, _codec, detwingle",
        "Imports: html.entities.codepoint2name, collections.defaultdict, codecs, html.entities.html5, re, logging.Logger, logging.getLogger, types.ModuleType, typing.Dict, typing.Iterator, typing.List, typing.Optional, typing.Pattern, typing.Set, typing.Tuple, typing.Type, typing.Union, typing.cast, typing_extensions.Literal, bs4._typing._Encoding, bs4._typing._Encodings, warnings, cchardet, chardet, charset_normalizer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AnnouncingParser",
        "Contains 18 functions: diagnose, lxml_trace, htmlparser_trace, rword, rsentence, rdoc, benchmark_parsers, profile, _p, handle_starttag, handle_endtag, handle_data, handle_charref, handle_entityref, handle_comment, handle_decl, unknown_decl, handle_pi",
        "Imports: cProfile, io.BytesIO, html.parser.HTMLParser, bs4, bs4.BeautifulSoup, bs4.__version__, bs4.builder.builder_registry, typing.Any, typing.IO, typing.List, typing.Optional, typing.Tuple, typing.TYPE_CHECKING, pstats, random, tempfile, time, traceback, sys, bs4._typing._IncomingMarkup, lxml.etree, lxml.etree, html5lib, lxml.etree, html5lib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py": {
      "entityType": "file",
      "observations": [
        "Contains 25 classes: NamespacedAttribute, AttributeValueWithCharsetSubstitution, CharsetMetaAttributeValue, AttributeValueList, AttributeDict, XMLAttributeDict, HTMLAttributeDict, ContentMetaAttributeValue, PageElement, NavigableString, PreformattedString, CData, ProcessingInstruction, XMLProcessingInstruction, Comment, Declaration, Doctype, Stylesheet, Script, TemplateString, RubyTextString, RubyParenthesisString, Tag, ResultSet, _TreeTraversalEvent",
        "Contains 150 functions: __getattr__, __new__, substitute_encoding, __new__, substitute_encoding, __setitem__, __setitem__, __new__, substitute_encoding, setup, format_string, formatter_for_name, _is_xml, __deepcopy__, __copy__, _all_strings, stripped_strings, get_text, replace_with, wrap, extract, decompose, _last_descendant, insert_before, insert_after, find_next, find_next, find_next, find_all_next, find_all_next, find_all_next, find_next_sibling, find_next_sibling, find_next_sibling, find_next_siblings, find_next_siblings, find_next_siblings, find_previous, find_previous, find_previous, find_all_previous, find_all_previous, find_all_previous, find_previous_sibling, find_previous_sibling, find_previous_sibling, find_previous_siblings, find_previous_siblings, find_previous_siblings, find_parent, find_parents, next, previous, _find_one, _find_all, next_elements, self_and_next_elements, next_siblings, self_and_next_siblings, previous_elements, self_and_previous_elements, previous_siblings, self_and_previous_siblings, parents, self_and_parents, _self_and, decomposed, nextGenerator, nextSiblingGenerator, previousGenerator, previousSiblingGenerator, parentGenerator, __new__, __deepcopy__, __getnewargs__, __getitem__, string, output_ready, name, name, _all_strings, strings, output_ready, for_name_and_ids, _string_for_name_and_ids, __init__, __deepcopy__, copy_self, is_empty_element, isSelfClosing, string, string, _all_strings, insert, _insert, unwrap, replaceWithChildren, append, extend, clear, smooth, index, get, get_attribute_list, has_attr, __hash__, __getitem__, __iter__, __len__, __contains__, __bool__, __setitem__, __delitem__, __call__, __call__, __call__, __getattr__, __eq__, __ne__, __repr__, encode, decode, _event_stream, _indent_string, _format_tag, _should_pretty_print, prettify, prettify, prettify, decode_contents, encode_contents, renderContents, find, find, find, find_all, find_all, find_all, children, self_and_descendants, descendants, select_one, select, css, childGenerator, recursiveChildGenerator, has_key, __init__, __getattr__, rewrite",
        "Imports: __future__.annotations, re, warnings, bs4.css.CSS, bs4._deprecation._deprecated, bs4._deprecation._deprecated_alias, bs4._deprecation._deprecated_function_alias, bs4.formatter.Formatter, bs4.formatter.HTMLFormatter, bs4.formatter.XMLFormatter, bs4._warnings.AttributeResemblesVariableWarning, typing.Any, typing.Callable, typing.Dict, typing.Generic, typing.Iterable, typing.Iterator, typing.List, typing.Mapping, typing.MutableSequence, typing.Optional, typing.Pattern, typing.Set, typing.TYPE_CHECKING, typing.Tuple, typing.Type, typing.TypeVar, typing.Union, typing.cast, typing.overload, typing_extensions.Self, typing_extensions.TypeAlias, bs4.filter.SoupStrainer, bs4.BeautifulSoup, bs4.builder.TreeBuilder, bs4.filter.ElementFilter, bs4.formatter._EntitySubstitutionFunction, bs4.formatter._FormatterOrName, bs4._typing._AtMostOneElement, bs4._typing._AtMostOneTag, bs4._typing._AtMostOneNavigableString, bs4._typing._AttributeValue, bs4._typing._AttributeValues, bs4._typing._Encoding, bs4._typing._InsertableElement, bs4._typing._OneElement, bs4._typing._QueryResults, bs4._typing._RawOrProcessedAttributeValues, bs4._typing._StrainableElement, bs4._typing._StrainableAttribute, bs4._typing._StrainableAttributes, bs4._typing._StrainableString, bs4._typing._SomeNavigableStrings, bs4._typing._SomeTags, bs4.filter.ElementFilter, bs4.BeautifulSoup"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\exceptions.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: StopParsing, FeatureNotFound, ParserRejectedMarkup",
        "Contains 1 functions: __init__",
        "Imports: typing.Union"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: ElementFilter, MatchRule, TagNameMatchRule, AttributeValueMatchRule, StringMatchRule, SoupStrainer",
        "Contains 31 functions: __init__, includes_everything, excludes_everything, match, filter, find, find_all, allow_tag_creation, allow_string_creation, __init__, _base_match, matches_string, __repr__, __eq__, matches_tag, __init__, includes_everything, excludes_everything, string, text, __repr__, _make_match_rules, matches_tag, _attribute_match, allow_tag_creation, allow_string_creation, matches_any_string_rule, match, search_tag, search, _match_attribute_value_helper",
        "Imports: __future__.annotations, collections.defaultdict, re, typing.Any, typing.Callable, typing.cast, typing.Dict, typing.Iterator, typing.Iterable, typing.List, typing.Optional, typing.Sequence, typing.Type, typing.Union, warnings, bs4._deprecation._deprecated, bs4.element.AttributeDict, bs4.element.NavigableString, bs4.element.PageElement, bs4.element.ResultSet, bs4.element.Tag, bs4._typing._AtMostOneElement, bs4._typing._AttributeValue, bs4._typing._NullableStringMatchFunction, bs4._typing._OneElement, bs4._typing._PageElementMatchFunction, bs4._typing._QueryResults, bs4._typing._RawAttributeValues, bs4._typing._RegularExpressionProtocol, bs4._typing._StrainableAttribute, bs4._typing._StrainableElement, bs4._typing._StrainableString, bs4._typing._StringMatchFunction, bs4._typing._TagMatchFunction"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Formatter, HTMLFormatter, XMLFormatter",
        "Contains 7 functions: _default, __init__, substitute, attribute_value, attributes, __init__, __init__",
        "Imports: __future__.annotations, typing.Callable, typing.Dict, typing.Iterable, typing.Optional, typing.Set, typing.Tuple, typing.TYPE_CHECKING, typing.Union, typing_extensions.TypeAlias, bs4.dammit.EntitySubstitution, bs4._typing._AttributeValue, element.NavigableString"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_deprecation.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 8 functions: _deprecated_alias, _deprecated_function_alias, _deprecated, alias, alias, alias, deprecate, with_warning",
        "Imports: functools, warnings, typing.Any, typing.Callable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _RegularExpressionProtocol",
        "Contains 2 functions: search, pattern",
        "Imports: typing_extensions.runtime_checkable, typing_extensions.Protocol, typing_extensions.TypeAlias, typing.Any, typing.Callable, typing.Dict, typing.IO, typing.Iterable, typing.Mapping, typing.Optional, typing.Pattern, typing.TYPE_CHECKING, typing.Union, bs4.element.AttributeValueList, bs4.element.NamespacedAttribute, bs4.element.NavigableString, bs4.element.PageElement, bs4.element.ResultSet, bs4.element.Tag"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_warnings.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: GuessedAtParserWarning, UnusualUsageWarning, MarkupResemblesLocatorWarning, AttributeResemblesVariableWarning, XMLParsedAsHTMLWarning",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: BeautifulSoup, BeautifulStoneSoup",
        "Contains 26 functions: __init__, copy_self, __getstate__, __setstate__, _decode_markup, _markup_is_url, _markup_resembles_filename, _feed, reset, new_tag, string_container, new_string, insert_before, insert_after, popTag, pushTag, endData, object_was_parsed, _linkage_fixer, _popToTag, handle_starttag, handle_endtag, handle_data, decode, __init__, deprecated_argument",
        "Imports: collections.Counter, io, sys, warnings, builder.builder_registry, builder.TreeBuilder, builder._htmlparser.HTMLParserTreeBuilder, dammit.UnicodeDammit, css.CSS, _deprecation._deprecated, element.CData, element.Comment, element.DEFAULT_OUTPUT_ENCODING, element.Declaration, element.Doctype, element.NavigableString, element.PageElement, element.ProcessingInstruction, element.PYTHON_SPECIFIC_ENCODINGS, element.ResultSet, element.Script, element.Stylesheet, element.Tag, element.TemplateString, formatter.Formatter, filter.ElementFilter, filter.SoupStrainer, typing.Any, typing.cast, typing.Counter, typing.Dict, typing.Iterator, typing.List, typing.Sequence, typing.Sized, typing.Optional, typing.Type, typing.Union, bs4._typing._Encoding, bs4._typing._Encodings, bs4._typing._IncomingMarkup, bs4._typing._InsertableElement, bs4._typing._RawAttributeValue, bs4._typing._RawAttributeValues, bs4._typing._RawMarkup, bs4.exceptions.FeatureNotFound, bs4.exceptions.ParserRejectedMarkup, bs4.exceptions.StopParsing, bs4._warnings.AttributeResemblesVariableWarning, bs4._warnings.GuessedAtParserWarning, bs4._warnings.MarkupResemblesLocatorWarning, bs4._warnings.UnusualUsageWarning, bs4._warnings.XMLParsedAsHTMLWarning, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: HTML5TreeBuilder, TreeBuilderForHtml5lib, AttrList, BeautifulSoupNode, Element, TextNode",
        "Contains 37 functions: prepare_markup, feed, create_treebuilder, test_fragment_to_document, __init__, documentClass, insertDoctype, elementClass, commentClass, fragmentClass, getFragment, appendChild, getDocument, testSerializer, __init__, __iter__, __setitem__, items, keys, __len__, __getitem__, __contains__, element, nodeType, cloneNode, __init__, appendChild, getAttributes, setAttributes, insertText, insertBefore, removeChild, reparentChildren, hasContent, cloneNode, getNameTuple, __init__",
        "Imports: typing.Any, typing.cast, typing.Dict, typing.Iterable, typing.Optional, typing.Sequence, typing.TYPE_CHECKING, typing.Tuple, typing.Union, typing_extensions.TypeAlias, bs4._typing._AttributeValue, bs4._typing._AttributeValues, bs4._typing._Encoding, bs4._typing._Encodings, bs4._typing._NamespaceURL, bs4._typing._RawMarkup, warnings, bs4.builder.DetectsXMLParsedAsHTML, bs4.builder.PERMISSIVE, bs4.builder.HTML, bs4.builder.HTML_5, bs4.builder.HTMLTreeBuilder, bs4.element.NamespacedAttribute, bs4.element.PageElement, bs4.element.nonwhitespace_re, html5lib, html5lib.constants.namespaces, bs4.element.Comment, bs4.element.Doctype, bs4.element.NavigableString, bs4.element.Tag, html5lib.treebuilders.base, bs4.BeautifulSoup, bs4.BeautifulSoup"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: BeautifulSoupHTMLParser, HTMLParserTreeBuilder",
        "Contains 15 functions: __init__, error, handle_startendtag, handle_starttag, handle_endtag, handle_data, handle_charref, handle_entityref, handle_comment, handle_decl, unknown_decl, handle_pi, __init__, prepare_markup, feed",
        "Imports: __future__.annotations, html.parser.HTMLParser, typing.Any, typing.Callable, typing.cast, typing.Dict, typing.Iterable, typing.List, typing.Optional, typing.TYPE_CHECKING, typing.Tuple, typing.Type, typing.Union, bs4.element.AttributeDict, bs4.element.CData, bs4.element.Comment, bs4.element.Declaration, bs4.element.Doctype, bs4.element.ProcessingInstruction, bs4.dammit.EntitySubstitution, bs4.dammit.UnicodeDammit, bs4.builder.DetectsXMLParsedAsHTML, bs4.builder.HTML, bs4.builder.HTMLTreeBuilder, bs4.builder.STRICT, bs4.exceptions.ParserRejectedMarkup, bs4.BeautifulSoup, bs4.element.NavigableString, bs4._typing._Encoding, bs4._typing._Encodings, bs4._typing._RawMarkup"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: LXMLTreeBuilderForXML, LXMLTreeBuilder",
        "Contains 21 functions: _invert, initialize_soup, _register_namespaces, default_parser, parser_for, __init__, _getNsTag, prepare_markup, feed, close, start, _prefix_for_namespace, end, pi, data, doctype, comment, test_fragment_to_document, default_parser, feed, test_fragment_to_document",
        "Imports: __future__.annotations, typing.Any, typing.Dict, typing.Iterable, typing.List, typing.Optional, typing.Set, typing.Tuple, typing.Type, typing.TYPE_CHECKING, typing.Union, io.BytesIO, io.StringIO, typing_extensions.TypeAlias, lxml.etree, bs4.element.AttributeDict, bs4.element.XMLAttributeDict, bs4.element.Comment, bs4.element.Doctype, bs4.element.NamespacedAttribute, bs4.element.ProcessingInstruction, bs4.element.XMLProcessingInstruction, bs4.builder.DetectsXMLParsedAsHTML, bs4.builder.FAST, bs4.builder.HTML, bs4.builder.HTMLTreeBuilder, bs4.builder.PERMISSIVE, bs4.builder.TreeBuilder, bs4.builder.XML, bs4.dammit.EncodingDetector, bs4.exceptions.ParserRejectedMarkup, bs4._typing._Encoding, bs4._typing._Encodings, bs4._typing._NamespacePrefix, bs4._typing._NamespaceURL, bs4._typing._NamespaceMapping, bs4._typing._InvertedNamespaceMapping, bs4._typing._RawMarkup, bs4.BeautifulSoup"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: TreeBuilderRegistry, TreeBuilder, SAXTreeBuilder, HTMLTreeBuilder, DetectsXMLParsedAsHTML",
        "Contains 31 functions: register_treebuilders_from, __init__, register, lookup, __init__, initialize_soup, reset, can_be_empty_element, feed, prepare_markup, test_fragment_to_document, set_up_substitutions, _replace_cdata_list_attribute_values, __init__, feed, close, startElement, endElement, startElementNS, endElementNS, startPrefixMapping, endPrefixMapping, characters, startDocument, endDocument, set_up_substitutions, warn_if_markup_looks_like_xml, _warn, _initialize_xml_detector, _document_might_be_xml, _root_tag_encountered",
        "Imports: __future__.annotations, collections.defaultdict, re, types.ModuleType, typing.Any, typing.cast, typing.Dict, typing.Iterable, typing.List, typing.Optional, typing.Pattern, typing.Set, typing.Tuple, typing.Type, typing.TYPE_CHECKING, warnings, sys, bs4.element.AttributeDict, bs4.element.AttributeValueList, bs4.element.CharsetMetaAttributeValue, bs4.element.ContentMetaAttributeValue, bs4.element.RubyParenthesisString, bs4.element.RubyTextString, bs4.element.Stylesheet, bs4.element.Script, bs4.element.TemplateString, bs4.element.nonwhitespace_re, bs4.exceptions.ParserRejectedMarkup, bs4._typing._AttributeValues, bs4._typing._RawAttributeValue, bs4._warnings.XMLParsedAsHTMLWarning, ._htmlparser, bs4.BeautifulSoup, bs4.element.NavigableString, bs4.element.Tag, bs4._typing._AttributeValue, bs4._typing._Encoding, bs4._typing._Encodings, bs4._typing._RawOrProcessedAttributeValues, bs4._typing._RawMarkup, ._html5lib, ._lxml"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\core.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: exit_cacert_ctx, where, contents, where, contents",
        "Imports: sys, atexit, importlib.resources.as_file, importlib.resources.files, importlib.resources.path, importlib.resources.read_text"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: core.contents, core.where"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: argparse, certifi.contents, certifi.where"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: from_bytes, from_fp, from_path, is_binary",
        "Imports: __future__.annotations, logging, os.PathLike, typing.BinaryIO, cd.coherence_ratio, cd.encoding_languages, cd.mb_encoding_languages, cd.merge_coherence_ratios, constant.IANA_SUPPORTED, constant.TOO_BIG_SEQUENCE, constant.TOO_SMALL_SEQUENCE, constant.TRACE, md.mess_ratio, models.CharsetMatch, models.CharsetMatches, utils.any_specified_encoding, utils.cut_sequence_chunks, utils.iana_name, utils.identify_sig_or_bom, utils.is_cp_similar, utils.is_multi_byte_encoding, utils.should_strip_sig_or_bom"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 11 functions: encoding_unicode_range, unicode_range_languages, encoding_languages, mb_encoding_languages, get_target_features, alphabet_languages, characters_popularity_compare, alpha_unicode_split, merge_coherence_ratios, filter_alt_coherence_matches, coherence_ratio",
        "Imports: __future__.annotations, importlib, codecs.IncrementalDecoder, collections.Counter, functools.lru_cache, typing.Counter, constant.FREQUENCIES, constant.KO_NAMES, constant.LANGUAGE_SUPPORTED_COUNT, constant.TOO_SMALL_SEQUENCE, constant.ZH_NAMES, md.is_suspiciously_successive_range, models.CoherenceMatches, utils.is_accentuated, utils.is_latin, utils.is_multi_byte_encoding, utils.is_unicode_range_secondary, utils.unicode_range"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, codecs.BOM_UTF8, codecs.BOM_UTF16_BE, codecs.BOM_UTF16_LE, codecs.BOM_UTF32_BE, codecs.BOM_UTF32_LE, encodings.aliases.aliases, re.IGNORECASE, re.compile"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ResultDict",
        "Contains 1 functions: detect",
        "Imports: __future__.annotations, typing.TYPE_CHECKING, typing.Any, warnings.warn, api.from_bytes, constant.CHARDET_CORRESPONDENCE, constant.TOO_SMALL_SEQUENCE, typing_extensions.TypedDict"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py": {
      "entityType": "file",
      "observations": [
        "Contains 10 classes: MessDetectorPlugin, TooManySymbolOrPunctuationPlugin, TooManyAccentuatedPlugin, UnprintablePlugin, SuspiciousDuplicateAccentPlugin, SuspiciousRange, SuperWeirdWordPlugin, CjkUncommonPlugin, ArchaicUpperLowerPlugin, ArabicIsolatedFormPlugin",
        "Contains 51 functions: is_suspiciously_successive_range, mess_ratio, eligible, feed, reset, ratio, __init__, eligible, feed, reset, ratio, __init__, eligible, feed, reset, ratio, __init__, eligible, feed, reset, ratio, __init__, eligible, feed, reset, ratio, __init__, eligible, feed, reset, ratio, __init__, eligible, feed, reset, ratio, __init__, eligible, feed, reset, ratio, __init__, eligible, feed, reset, ratio, __init__, reset, eligible, feed, ratio",
        "Imports: __future__.annotations, functools.lru_cache, logging.getLogger, constant.COMMON_SAFE_ASCII_CHARACTERS, constant.TRACE, constant.UNICODE_SECONDARY_RANGE_KEYWORD, utils.is_accentuated, utils.is_arabic, utils.is_arabic_isolated_form, utils.is_case_variable, utils.is_cjk, utils.is_emoticon, utils.is_hangul, utils.is_hiragana, utils.is_katakana, utils.is_latin, utils.is_punctuation, utils.is_separator, utils.is_symbol, utils.is_thai, utils.is_unprintable, utils.remove_accent, utils.unicode_range, utils.is_cjk_uncommon"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: CharsetMatch, CharsetMatches, CliDetectionResult",
        "Contains 35 functions: __init__, __eq__, __lt__, multi_byte_usage, __str__, __repr__, add_submatch, encoding, encoding_aliases, bom, byte_order_mark, languages, language, chaos, coherence, percent_chaos, percent_coherence, raw, submatch, has_submatch, alphabets, could_be_from_charset, output, fingerprint, __init__, __iter__, __getitem__, __len__, __bool__, append, best, first, __init__, __dict__, to_json",
        "Imports: __future__.annotations, encodings.aliases.aliases, hashlib.sha256, json.dumps, re.sub, typing.Any, typing.Iterator, typing.List, typing.Tuple, constant.RE_POSSIBLE_ENCODING_INDICATION, constant.TOO_BIG_SEQUENCE, utils.iana_name, utils.is_multi_byte_encoding, utils.unicode_range, charset_normalizer.cd.encoding_languages, charset_normalizer.cd.mb_encoding_languages"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 28 functions: is_accentuated, remove_accent, unicode_range, is_latin, is_punctuation, is_symbol, is_emoticon, is_separator, is_case_variable, is_cjk, is_hiragana, is_katakana, is_hangul, is_thai, is_arabic, is_arabic_isolated_form, is_cjk_uncommon, is_unicode_range_secondary, is_unprintable, any_specified_encoding, is_multi_byte_encoding, identify_sig_or_bom, should_strip_sig_or_bom, iana_name, cp_similarity, is_cp_similar, set_logging_handler, cut_sequence_chunks",
        "Imports: __future__.annotations, importlib, logging, unicodedata, codecs.IncrementalDecoder, encodings.aliases.aliases, functools.lru_cache, re.findall, typing.Generator, _multibytecodec.MultibyteIncrementalDecoder, constant.ENCODING_MARKS, constant.IANA_SUPPORTED_SIMILAR, constant.RE_POSSIBLE_ENCODING_INDICATION, constant.UNICODE_RANGES_COMBINED, constant.UNICODE_SECONDARY_RANGE_KEYWORD, constant.UTF8_MAXIMAL_ALLOCATION, constant.COMMON_CJK_CHARACTERS"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\version.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, logging, api.from_bytes, api.from_fp, api.from_path, api.is_binary, legacy.detect, models.CharsetMatch, models.CharsetMatches, utils.set_logging_handler, version.VERSION, version.__version__"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, cli.cli_detect"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, __main__.cli_detect, __main__.query_yes_no"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: FileType",
        "Contains 5 functions: query_yes_no, cli_detect, __init__, __call__, __repr__",
        "Imports: __future__.annotations, argparse, sys, typing, json.dumps, os.path.abspath, os.path.basename, os.path.dirname, os.path.join, os.path.realpath, platform.python_version, unicodedata.unidata_version, charset_normalizer.md, charset_normalizer.from_fp, charset_normalizer.models.CliDetectionResult, charset_normalizer.version.__version__"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 20 functions: codes_from_offsets, codes_from_offsets_and_points, codes_from_points, concat_codes, concat_codes_or_none, concat_offsets, concat_offsets_or_none, concat_points, concat_points_or_none, concat_points_or_none_with_nan, concat_points_with_nan, insert_nan_at_offsets, offsets_from_codes, offsets_from_lengths, outer_offsets_from_list_of_codes, outer_offsets_from_list_of_offsets, remove_nan, split_codes_by_offsets, split_points_by_offsets, split_points_at_nan",
        "Imports: __future__.annotations, itertools.chain, itertools.pairwise, typing.TYPE_CHECKING, numpy, contourpy.typecheck.check_code_array, contourpy.typecheck.check_offset_array, contourpy.typecheck.check_point_array, contourpy.types.CLOSEPOLY, contourpy.types.LINETO, contourpy.types.MOVETO, contourpy.types.code_dtype, contourpy.types.offset_dtype, contourpy.types.point_dtype, contourpy._contourpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\chunk.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: calc_chunk_sizes, two_factors",
        "Imports: __future__.annotations, math"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 15 functions: _convert_filled_from_OuterCode, _convert_filled_from_OuterOffset, _convert_filled_from_ChunkCombinedCode, _convert_filled_from_ChunkCombinedOffset, _convert_filled_from_ChunkCombinedCodeOffset, _convert_filled_from_ChunkCombinedOffsetOffset, convert_filled, _convert_lines_from_Separate, _convert_lines_from_SeparateCode, _convert_lines_from_ChunkCombinedCode, _convert_lines_from_ChunkCombinedOffset, _convert_lines_from_ChunkCombinedNan, convert_lines, convert_multi_filled, convert_multi_lines",
        "Imports: __future__.annotations, itertools.pairwise, typing.TYPE_CHECKING, typing.cast, numpy, contourpy._contourpy.FillType, contourpy._contourpy.LineType, contourpy.array, contourpy.enum_util.as_fill_type, contourpy.enum_util.as_line_type, contourpy.typecheck.check_filled, contourpy.typecheck.check_lines, contourpy.types.MOVETO, contourpy.types.offset_dtype, contourpy._contourpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: dechunk_filled, dechunk_lines, dechunk_multi_filled, dechunk_multi_lines",
        "Imports: __future__.annotations, typing.TYPE_CHECKING, typing.cast, contourpy._contourpy.FillType, contourpy._contourpy.LineType, contourpy.array.concat_codes_or_none, contourpy.array.concat_offsets_or_none, contourpy.array.concat_points_or_none, contourpy.array.concat_points_or_none_with_nan, contourpy.enum_util.as_fill_type, contourpy.enum_util.as_line_type, contourpy.typecheck.check_filled, contourpy.typecheck.check_lines, contourpy._contourpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\enum_util.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: as_fill_type, as_line_type, as_z_interp",
        "Imports: __future__.annotations, contourpy._contourpy.FillType, contourpy._contourpy.LineType, contourpy._contourpy.ZInterp"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 6 functions: check_code_array, check_offset_array, check_point_array, _check_tuple_of_lists_with_same_length, check_filled, check_lines",
        "Imports: __future__.annotations, typing.TYPE_CHECKING, typing.Any, typing.cast, numpy, contourpy.FillType, contourpy.LineType, contourpy.enum_util.as_fill_type, contourpy.enum_util.as_line_type, contourpy.types.MOVETO, contourpy.types.code_dtype, contourpy.types.offset_dtype, contourpy.types.point_dtype, contourpy._contourpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\types.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, numpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\_version.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: _remove_z_mask, contour_generator",
        "Imports: __future__.annotations, typing.TYPE_CHECKING, numpy, contourpy._contourpy.ContourGenerator, contourpy._contourpy.FillType, contourpy._contourpy.LineType, contourpy._contourpy.Mpl2005ContourGenerator, contourpy._contourpy.Mpl2014ContourGenerator, contourpy._contourpy.SerialContourGenerator, contourpy._contourpy.ThreadedContourGenerator, contourpy._contourpy.ZInterp, contourpy._contourpy.max_threads, contourpy._version.__version__, contourpy.chunk.calc_chunk_sizes, contourpy.convert.convert_filled, contourpy.convert.convert_lines, contourpy.convert.convert_multi_filled, contourpy.convert.convert_multi_lines, contourpy.dechunk.dechunk_filled, contourpy.dechunk.dechunk_lines, contourpy.dechunk.dechunk_multi_filled, contourpy.dechunk.dechunk_multi_lines, contourpy.enum_util.as_fill_type, contourpy.enum_util.as_line_type, contourpy.enum_util.as_z_interp, typing.Any, numpy.typing.ArrayLike, _contourpy.CoordinateArray, _contourpy.MaskArray"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: BokehRenderer",
        "Contains 12 functions: __init__, _convert_color, _get_figure, filled, grid, lines, mask, save, save_to_buffer, show, title, z_values",
        "Imports: __future__.annotations, io, typing.TYPE_CHECKING, typing.Any, bokeh.io.export_png, bokeh.io.export_svg, bokeh.io.show, bokeh.io.export.get_screenshot_as_png, bokeh.layouts.gridplot, bokeh.models.annotations.labels.Label, bokeh.palettes.Category10, bokeh.plotting.figure, numpy, contourpy.enum_util.as_fill_type, contourpy.enum_util.as_line_type, contourpy.util.bokeh_util.filled_to_bokeh, contourpy.util.bokeh_util.lines_to_bokeh, contourpy.util.renderer.Renderer, bokeh.core.enums.OutputBackendType, bokeh.models.GridPlot, bokeh.palettes.Palette, numpy.typing.ArrayLike, selenium.webdriver.remote.webdriver.WebDriver, contourpy.FillType, contourpy.LineType, contourpy._contourpy.FillReturn, contourpy._contourpy.LineReturn"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: filled_to_bokeh, lines_to_bokeh",
        "Imports: __future__.annotations, typing.TYPE_CHECKING, typing.cast, contourpy.FillType, contourpy.LineType, contourpy.array.offsets_from_codes, contourpy.convert.convert_lines, contourpy.dechunk.dechunk_lines, contourpy._contourpy.CoordinateArray, contourpy._contourpy.FillReturn, contourpy._contourpy.LineReturn, contourpy._contourpy.LineReturn_ChunkCombinedNan"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\data.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: simple, random",
        "Imports: __future__.annotations, typing.TYPE_CHECKING, typing.Any, numpy, contourpy._contourpy.CoordinateArray"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: MplRenderer, MplTestRenderer, MplDebugRenderer",
        "Contains 21 functions: __init__, __del__, _autoscale, _get_ax, filled, grid, lines, mask, save, save_to_buffer, show, title, z_values, __init__, __init__, _arrow, filled, lines, point_numbers, quad_numbers, z_levels",
        "Imports: __future__.annotations, io, itertools.pairwise, typing.TYPE_CHECKING, typing.Any, typing.cast, matplotlib.collections, matplotlib.pyplot, numpy, contourpy.FillType, contourpy.LineType, contourpy.convert.convert_filled, contourpy.convert.convert_lines, contourpy.enum_util.as_fill_type, contourpy.enum_util.as_line_type, contourpy.util.mpl_util.filled_to_mpl_paths, contourpy.util.mpl_util.lines_to_mpl_paths, contourpy.util.renderer.Renderer, collections.abc.Sequence, matplotlib.axes.Axes, matplotlib.figure.Figure, numpy.typing.ArrayLike, contourpy._contourpy, matplotlib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: filled_to_mpl_paths, lines_to_mpl_paths",
        "Imports: __future__.annotations, itertools.pairwise, typing.TYPE_CHECKING, typing.cast, matplotlib.path, numpy, contourpy.FillType, contourpy.LineType, contourpy.array.codes_from_offsets, contourpy._contourpy.FillReturn, contourpy._contourpy.LineReturn, contourpy._contourpy.LineReturn_Separate"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Renderer",
        "Contains 12 functions: _grid_as_2d, filled, grid, lines, mask, multi_filled, multi_lines, save, save_to_buffer, show, title, z_values",
        "Imports: __future__.annotations, abc.ABC, abc.abstractmethod, typing.TYPE_CHECKING, typing.Any, numpy, io, numpy.typing.ArrayLike, contourpy._contourpy.CoordinateArray, contourpy._contourpy.FillReturn, contourpy._contourpy.FillType, contourpy._contourpy.LineReturn, contourpy._contourpy.LineType"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\_build_config.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: build_config",
        "Imports: __future__.annotations"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, contourpy.util._build_config.build_config"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Cycler",
        "Contains 30 functions: _process_keys, concat, cycler, cycler, cycler, cycler, _cycler, __call__, __init__, __contains__, keys, change_key, _from_iter, __getitem__, __iter__, __add__, __mul__, __mul__, __mul__, __rmul__, __rmul__, __rmul__, __len__, __iadd__, __imul__, __eq__, __repr__, _repr_html_, by_key, simplify",
        "Imports: __future__.annotations, collections.abc.Hashable, collections.abc.Iterable, collections.abc.Generator, copy, functools.reduce, itertools.product, itertools.cycle, operator.mul, operator.add, typing.TypeVar, typing.Generic, typing.Callable, typing.Union, typing.Dict, typing.List, typing.Any, typing.overload, typing.cast"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\easter.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: easter",
        "Imports: datetime"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\relativedelta.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: relativedelta",
        "Contains 20 functions: _sign, __init__, _fix, weeks, weeks, _set_months, normalized, __add__, __radd__, __rsub__, __sub__, __abs__, __neg__, __bool__, __mul__, __eq__, __hash__, __ne__, __div__, __repr__",
        "Imports: datetime, calendar, operator, math.copysign, six.integer_types, warnings.warn, _common.weekday"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: weekday, rrulebase, rrule, _iterinfo, rruleset, _rrulestr, _genitem",
        "Contains 51 functions: _invalidates_cache, __init__, inner_func, __init__, __iter__, _invalidate_cache, _iter_cached, __getitem__, __contains__, count, before, after, xafter, between, __init__, __str__, replace, _iter, __construct_byset, __mod_distance, __init__, rebuild, ydayset, mdayset, wdayset, ddayset, htimeset, mtimeset, stimeset, __init__, rrule, rdate, exrule, exdate, _iter, _handle_int, _handle_int_list, _handle_FREQ, _handle_UNTIL, _handle_WKST, _handle_BYWEEKDAY, _parse_rfc_rrule, _parse_date_value, _parse_rfc, __call__, __init__, __next__, __lt__, __gt__, __eq__, __ne__",
        "Imports: calendar, datetime, heapq, itertools, re, sys, functools.wraps, warnings.warn, six.advance_iterator, six.integer_types, six.moves._thread, six.moves.range, _common.weekday, math.gcd, fractions.gcd, dateutil.parser, dateutil.parser, dateutil.easter, .tz, dateutil.parser"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tzwin.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: tz.win.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\utils.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: today, default_tzinfo, within_delta",
        "Imports: __future__.unicode_literals, datetime.datetime, datetime.time"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\_common.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: weekday",
        "Contains 6 functions: __init__, __call__, __eq__, __hash__, __ne__, __repr__",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\_version.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: __getattr__, __dir__",
        "Imports: sys, _version.version, importlib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: isoparser",
        "Contains 13 functions: _takes_ascii, func, __init__, isoparse, parse_isodate, parse_isotime, parse_tzstr, _parse_isodate, _parse_isodate_common, _parse_isodate_uncommon, _calculate_weekdate, _parse_isotime, _parse_tzstr",
        "Imports: datetime.datetime, datetime.timedelta, datetime.time, datetime.date, calendar, dateutil.tz, functools.wraps, re, six"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py": {
      "entityType": "file",
      "observations": [
        "Contains 11 classes: _timelex, _resultbase, parserinfo, _ymd, parser, _tzparser, ParserError, UnknownTimezoneWarning, _result, _result, _attr",
        "Contains 58 functions: parse, _parsetz, __init__, get_token, __iter__, __next__, next, split, isword, isnum, isspace, __init__, _repr, __len__, __repr__, __init__, _convert, jump, weekday, month, hms, ampm, pertain, utczone, tzoffset, convertyear, validate, __init__, has_year, has_month, has_day, could_be_day, append, _resolve_from_stridxs, resolve_ymd, __init__, parse, _parse, _parse_numeric_token, _find_hms_idx, _assign_hms, _could_be_tzname, _ampm_valid, _adjust_ampm, _parse_min_sec, _parse_hms, _parsems, _to_decimal, _build_tzinfo, _build_tzaware, _build_naive, _assign_tzname, _recombine_skipped, parse, __str__, __repr__, __repr__, __init__",
        "Imports: __future__.unicode_literals, datetime, re, string, time, warnings, calendar.monthrange, io.StringIO, six, six.integer_types, six.text_type, decimal.Decimal, warnings.warn, .relativedelta, .tz"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: private_class",
        "Contains 4 functions: __deprecated_private_func, __deprecate_private_class, deprecated_func, __init__",
        "Imports: _parser.parse, _parser.parser, _parser.parserinfo, _parser.ParserError, _parser.DEFAULTPARSER, _parser.DEFAULTTZPARSER, _parser.UnknownTimezoneWarning, _parser.__doc__, isoparser.isoparser, isoparser.isoparse, _parser._timelex, _parser._resultbase, _parser._tzparser, _parser._parsetz, functools.wraps, warnings, warnings"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py": {
      "entityType": "file",
      "observations": [
        "Contains 13 classes: tzutc, tzoffset, tzlocal, _ttinfo, _tzfile, tzfile, tzrange, tzstr, _tzicalvtzcomp, _tzicalvtz, tzical, GettzFunc, _nullcontext",
        "Contains 87 functions: __get_gettz, datetime_exists, datetime_ambiguous, resolve_imaginary, _datetime_to_timestamp, utcoffset, dst, tzname, is_ambiguous, fromutc, __eq__, __ne__, __repr__, __init__, utcoffset, dst, tzname, fromutc, is_ambiguous, __eq__, __ne__, __repr__, __init__, utcoffset, dst, tzname, is_ambiguous, _naive_is_dst, _isdst, __eq__, __ne__, __repr__, __init__, __repr__, __eq__, __ne__, __getstate__, __setstate__, __init__, __init__, _set_tzdata, _read_tzfile, _find_last_transition, _get_ttinfo, _find_ttinfo, fromutc, is_ambiguous, _resolve_ambiguous_time, utcoffset, dst, tzname, __eq__, __ne__, __repr__, __reduce__, __reduce_ex__, __init__, transitions, __eq__, _dst_base_offset, __init__, _delta, __repr__, __init__, __init__, _find_comp, _find_compdt, utcoffset, dst, tzname, __repr__, __init__, keys, get, _parse_offset, _parse_rfc, __repr__, _get_supported_offset, _get_supported_offset, __init__, __call__, set_cache_size, cache_clear, nocache, __init__, __enter__, __exit__",
        "Imports: datetime, struct, time, sys, os, bisect, weakref, collections.OrderedDict, six, six.string_types, six.moves._thread, _common.tzname_in_python2, _common._tzinfo, _common.tzrangebase, _common.enfold, _common._validate_fromutc_inputs, _factories._TzSingleton, _factories._TzOffsetFactory, _factories._TzStrFactory, warnings.warn, win.tzwin, win.tzwinlocal, contextlib.nullcontext, dateutil.relativedelta, dateutil.parser._parser, dateutil.relativedelta, dateutil.rrule, dateutil.zoneinfo.get_zonefile_instance"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\win.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: tzres, tzwinbase, tzwin, tzwinlocal",
        "Contains 20 functions: _settzkeyname, picknthweekday, valuestodict, __init__, load_name, name_from_string, __init__, __eq__, list, display, transitions, _get_hasdst, _dst_base_offset, __init__, __repr__, __reduce__, __init__, __repr__, __str__, __reduce__",
        "Imports: datetime, struct, six.moves.winreg, six.text_type, _common.tzrangebase, ctypes, ctypes.wintypes"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_common.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: _tzinfo, tzrangebase, _DatetimeWithFold",
        "Contains 24 functions: tzname_in_python2, _validate_fromutc_inputs, enfold, enfold, fromutc, is_ambiguous, _fold_status, _fold, _fromutc, fromutc, __init__, utcoffset, dst, tzname, fromutc, is_ambiguous, _isdst, _naive_isdst, _dst_base_offset, __ne__, __repr__, adjust_encoding, replace, fold",
        "Imports: six.PY2, functools.wraps, datetime.datetime, datetime.timedelta, datetime.tzinfo"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_factories.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: _TzSingleton, _TzFactory, _TzOffsetFactory, _TzStrFactory",
        "Contains 7 functions: __init__, __call__, instance, __init__, __call__, __init__, __call__",
        "Imports: datetime.timedelta, weakref, collections.OrderedDict, six.moves._thread"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: DeprecatedTzFormatWarning",
        "Contains 0 functions: ",
        "Imports: tz.*, tz.__doc__"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: rebuild, _run_zic, _print_on_nosuchfile",
        "Imports: logging, os, tempfile, shutil, json, subprocess.check_call, subprocess.check_output, tarfile.TarFile, dateutil.zoneinfo.METADATA_FN, dateutil.zoneinfo.ZONEFILENAME"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: tzfile, ZoneInfoFile",
        "Contains 7 functions: getzoneinfofile_stream, get_zonefile_instance, gettz, gettz_db_metadata, __reduce__, __init__, get",
        "Imports: warnings, json, tarfile.TarFile, pkgutil.get_data, io.BytesIO, dateutil.tz.tzfile"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\afmLib.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: error, AFM",
        "Contains 24 functions: readlines, writelines, __init__, read, parsechar, parsekernpair, parseattr, parsecomposite, write, has_kernpair, kernpairs, has_char, chars, comments, addComment, addComposite, __getattr__, __setattr__, __delattr__, __getitem__, __setitem__, __delitem__, __repr__, myKey",
        "Imports: re, EasyDialogs, time"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\agl.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AGLError",
        "Contains 6 functions: _builddicts, toUnicode, _glyphComponentToUnicode, _zapfDingbatsToUnicode, _uniToUnicode, _uToUnicode",
        "Imports: fontTools.misc.textTools.tostr, re, re"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, typing.TYPE_CHECKING, typing.Iterable, typing.Optional, typing.TypeVar, typing.Union, collections.abc.Callable, collections.abc.Sequence, fontTools.misc.filesystem._base.FS, os.PathLike, xml.etree.ElementTree.Element, fontTools.ufoLib.UFOFormatVersion, fontTools.ufoLib.glifLib.GLIFFormatVersion, lxml.etree._Element"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: FontBuilder",
        "Contains 35 functions: buildCmapSubTable, addFvar, __init__, save, _initTableWithValues, _updateTableWithValues, setupHead, updateHead, setupGlyphOrder, setupCharacterMap, setupNameTable, setupOS2, setupCFF, setupCFF2, setupCFF2Regions, setupGlyf, setupFvar, setupAvar, setupGvar, setupGVAR, calcGlyphBounds, setupHorizontalMetrics, setupVerticalMetrics, setupMetrics, setupHorizontalHeader, setupVerticalHeader, setupVerticalOrigins, setupPost, setupMaxp, setupDummyDSIG, addOpenTypeFeatures, addFeatureVariations, setupCOLR, setupCPAL, setupStat",
        "Imports: ttLib.TTFont, ttLib.newTable, ttLib.tables._c_m_a_p.cmap_classes, ttLib.tables._g_l_y_f.flagCubic, ttLib.tables.O_S_2f_2.Panose, misc.timeTools.timestampNow, struct, collections.OrderedDict, ttLib.tables._f_v_a_r.Axis, ttLib.tables._f_v_a_r.NamedInstance, cffLib.CFFFontSet, cffLib.TopDictIndex, cffLib.TopDict, cffLib.CharStrings, cffLib.GlobalSubrsIndex, cffLib.PrivateDict, cffLib.CFFFontSet, cffLib.TopDictIndex, cffLib.TopDict, cffLib.CharStrings, cffLib.GlobalSubrsIndex, cffLib.PrivateDict, cffLib.FDArrayIndex, cffLib.FontDict, varLib.builder.buildVarRegionList, varLib.builder.buildVarData, varLib.builder.buildVarStore, cffLib.VarStoreData, varLib._add_avar, feaLib.builder.addOpenTypeFeaturesFromString, varLib.featureVars, fontTools.colorLib.builder.buildCOLR, fontTools.colorLib.builder.buildCPAL, otlLib.builder.buildStatTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\help.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: main",
        "Imports: pkgutil, sys, fontTools, importlib, os, pathlib.Path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\tfmLib.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TFMException, TFM",
        "Contains 22 functions: __init__, __init__, __repr__, _read, char_info, width_index, noneexistent, height_index, depth_index, italic_index, tag, remainder, width, height, depth, italic, exten, lig_step, lig_kern_command, kern, param, read_fixed",
        "Imports: types.SimpleNamespace, fontTools.misc.sstruct.calcsize, fontTools.misc.sstruct.unpack, fontTools.misc.sstruct.unpack2, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Options",
        "Contains 8 functions: ttList, ttDump, ttCompile, guessFileType, parseOptions, process, main, __init__",
        "Imports: fontTools.ttLib.OPTIMIZE_FONT_SPEED, fontTools.ttLib.TTFont, fontTools.ttLib.TTLibError, fontTools.misc.macCreatorType.getMacCreatorAndType, fontTools.unicode.setUnicodeData, fontTools.misc.textTools.Tag, fontTools.misc.textTools.tostr, fontTools.misc.timeTools.timestampSinceEpoch, fontTools.misc.loggingTools.Timer, fontTools.misc.cliTools.makeOutputFileName, os, sys, getopt, re, logging, fontTools.configLogger, fontTools.ttLib.sfnt, fontTools.ttLib.sfnt.calcChecksum, fontTools.version"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicode.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: _UnicodeCustom, _UnicodeBuiltin",
        "Contains 5 functions: _makeunicodes, setUnicodeData, __init__, __getitem__, __getitem__",
        "Imports: unicodedata2, unicodedata"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: logging, fontTools.misc.loggingTools.configLogger"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: main",
        "Imports: sys, runpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: _convertCFF2ToCFF, convertCFF2ToCFF, main",
        "Imports: fontTools.ttLib.TTFont, fontTools.ttLib.newTable, fontTools.misc.cliTools.makeOutputFileName, fontTools.misc.psCharStrings.T2StackUseExtractor, fontTools.cffLib.TopDictIndex, fontTools.cffLib.buildOrder, fontTools.cffLib.buildDefaults, fontTools.cffLib.topDictOperators, fontTools.cffLib.privateDictOperators, fontTools.cffLib.FDSelect, transforms.desubroutinizeCharString, specializer.specializeProgram, width.optimizeWidths, collections.defaultdict, logging, argparse, fontTools.configLogger, os, sys, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _NominalWidthUsedError",
        "Contains 5 functions: _convertCFFToCFF2, convertCFFToCFF2, main, __add__, __radd__",
        "Imports: fontTools.ttLib.TTFont, fontTools.ttLib.newTable, fontTools.misc.cliTools.makeOutputFileName, fontTools.misc.psCharStrings.T2WidthExtractor, fontTools.cffLib.TopDictIndex, fontTools.cffLib.FDArrayIndex, fontTools.cffLib.FontDict, fontTools.cffLib.buildOrder, fontTools.cffLib.topDictOperators, fontTools.cffLib.privateDictOperators, fontTools.cffLib.topDictOperators2, fontTools.cffLib.privateDictOperators2, io.BytesIO, logging, argparse, fontTools.configLogger, os, sys, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _GeneralizerDecombinerCommandsMap",
        "Contains 30 functions: stringToProgram, programToString, programToCommands, _flattenBlendArgs, commandsToProgram, _everyN, _convertBlendOpToArgs, generalizeCommands, generalizeProgram, _categorizeVector, _mergeCategories, _negateCategory, _convertToBlendCmds, _addArgs, _argsStackUse, specializeCommands, specializeProgram, rmoveto, hmoveto, vmoveto, rlineto, hlineto, vlineto, rrcurveto, hhcurveto, vvcurveto, hvcurveto, vhcurveto, rcurveline, rlinecurve",
        "Imports: fontTools.cffLib.maxStackLimit, sys, argparse, doctest, fontTools.ttLib.TTFont, fontTools.misc.cliTools.makeOutputFileName"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\transforms.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: StopHintCountEvent, _DesubroutinizingT2Decompiler, _MarkingT2Decompiler, _DehintingT2Decompiler, Hints",
        "Contains 32 functions: _uniq_sort, desubroutinizeCharString, desubroutinize, _cs_subset_subroutines, _cs_drop_hints, remove_hints, _pd_delete_empty_subrs, remove_unused_subroutines, __init__, execute, op_callsubr, op_callgsubr, stop_hint_count, op_hintmask, processSubr, __init__, op_callsubr, op_callgsubr, __init__, execute, op_callsubr, op_callgsubr, op_hstem, op_vstem, op_hstemhm, op_vstemhm, op_hintmask, op_cntrmask, processHintmask, processHint, processSubr, __init__",
        "Imports: fontTools.misc.psCharStrings.SimpleT2Decompiler, fontTools.misc.psCharStrings.T2WidthExtractor, fontTools.misc.psCharStrings.calcSubrBias"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: missingdict",
        "Contains 7 functions: cumSum, byteCost, optimizeWidthsBruteforce, optimizeWidths, main, __init__, __missing__",
        "Imports: fontTools.ttLib.TTFont, collections.defaultdict, operator.add, functools.reduce, argparse, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 47 classes: CFFFontSet, CFFWriter, IndexCompiler, IndexedStringsCompiler, TopDictIndexCompiler, FDArrayIndexCompiler, GlobalSubrsCompiler, SubrsCompiler, CharStringsCompiler, Index, GlobalSubrsIndex, SubrsIndex, TopDictIndex, FDArrayIndex, VarStoreData, FDSelect, CharStrings, SimpleConverter, ASCIIConverter, Latin1Converter, NumberConverter, ArrayConverter, TableConverter, PrivateDictConverter, SubrsConverter, CharStringsConverter, CharsetConverter, CharsetCompiler, EncodingCompiler, EncodingConverter, FDArrayConverter, FDSelectConverter, VarStoreConverter, FDSelectCompiler, VarStoreCompiler, ROSConverter, TopDictDecompiler, PrivateDictDecompiler, DictCompiler, TopDictCompiler, FontDictCompiler, PrivateDictCompiler, BaseDict, TopDict, FontDict, PrivateDict, IndexedStrings",
        "Contains 216 functions: calcOffSize, readCard8, readCard16, readCard32, writeCard8, writeCard16, writeCard32, packCard8, packCard16, packCard32, buildOperatorDict, buildOpcodeDict, buildOrder, buildDefaults, buildConverters, parseNum, parseBlendList, getStdCharSet, getCIDfromName, getSIDfromName, packCharset0, packCharset, parseCharset0, parseCharset, readSID, parseEncodingSupplement, parseEncoding0, parseEncoding1, packEncoding0, packEncoding1, packFDSelect0, packFDSelect3, packFDSelect4, addConverters, encodeNumber, decompile, __len__, keys, values, __getitem__, compile, toXML, fromXML, convertCFFToCFF2, convertCFF2ToCFF, desubroutinize, remove_hints, remove_unused_subroutines, __init__, add, toFile, __init__, getItems, getOffsets, getDataLength, toFile, getItems, getItems, getChildren, getOffsets, getDataLength, toFile, getItems, getChildren, toFile, setPos, getItems, setPos, getItems, setPos, __init__, __len__, __getitem__, __setitem__, produceItem, append, getCompiler, clear, __init__, produceItem, toXML, fromXML, getItemAndSelector, __init__, produceItem, toXML, toXML, produceItem, fromXML, __init__, decompile, compile, writeXML, xmlRead, __len__, getNumRegions, __init__, __len__, __getitem__, __setitem__, append, __init__, keys, values, has_key, __len__, __getitem__, __setitem__, getItemAndSelector, toXML, fromXML, read, _read, write, xmlWrite, xmlRead, _read, write, xmlWrite, xmlRead, _read, write, xmlWrite, xmlRead, xmlWrite, xmlRead, xmlWrite, xmlRead, xmlWrite, xmlRead, getClass, _read, write, getClass, _read, write, _read, write, xmlRead, _read, write, xmlWrite, xmlRead, __init__, setPos, getDataLength, toFile, __init__, setPos, getDataLength, toFile, _read, write, xmlWrite, xmlRead, _read, write, xmlRead, _read, write, xmlWrite, xmlRead, _read, write, xmlWrite, xmlRead, __init__, setPos, getDataLength, toFile, __init__, setPos, getDataLength, toFile, xmlWrite, xmlRead, __init__, setPos, getDataLength, compile, toFile, arg_number, arg_SID, arg_array, arg_delta, arg_delta_blend, getChildren, __init__, getChildren, setPos, getChildren, __init__, decompile, postDecompile, getCompiler, __getattr__, toXML, fromXML, __init__, getGlyphOrder, postDecompile, toXML, decompileAllCharStrings, recalcFontBBox, __init__, setCFF2, __init__, in_cff2, getNumRegions, __init__, getCompiler, __len__, __getitem__, getSID, getStrings, buildStringMapping",
        "Imports: fontTools.misc.sstruct, fontTools.misc.psCharStrings, fontTools.misc.arrayTools.unionRect, fontTools.misc.arrayTools.intRect, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.textTools.safeEval, fontTools.ttLib.TTFont, fontTools.ttLib.tables.otBase.OTTableWriter, fontTools.ttLib.tables.otBase.OTTableReader, fontTools.ttLib.tables.otTables, io.BytesIO, struct, logging, re, CFFToCFF2._convertCFFToCFF2, CFF2ToCFF._convertCFF2ToCFF, transforms.desubroutinize, transforms.remove_hints, transforms.remove_unused_subroutines, array.array"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: ColorPaletteType, LayerReuseCache, LayerListBuilder",
        "Contains 31 functions: _beforeBuildPaintRadialGradient, _defaultColorStop, _defaultVarColorStop, _defaultColorLine, _defaultVarColorLine, _defaultPaintSolid, _buildPaintCallbacks, populateCOLRv0, buildCOLR, buildClipList, buildClipBox, buildPaletteLabels, buildCPAL, _is_colrv0_layer, _split_color_glyphs_by_version, _reuse_ranges, buildBaseGlyphPaintRecord, _format_glyph_errors, buildColrV1, _missing_, __init__, _paint_tuple, _as_tuple, try_reuse, add, __init__, _beforeBuildPaintColrLayers, buildPaint, build, _tuple_safe, listToColrLayers",
        "Imports: collections, copy, enum, functools.partial, math.ceil, math.log, typing.Any, typing.Dict, typing.Generator, typing.Iterable, typing.List, typing.Mapping, typing.Optional, typing.Sequence, typing.Tuple, typing.Type, typing.TypeVar, typing.Union, fontTools.misc.arrayTools.intRect, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.treeTools.build_n_ary_tree, fontTools.ttLib.tables.C_O_L_R_, fontTools.ttLib.tables.C_P_A_L_, fontTools.ttLib.tables._n_a_m_e, fontTools.ttLib.tables.otTables, fontTools.ttLib.tables.otTables.ExtendMode, fontTools.ttLib.tables.otTables.CompositeMode, errors.ColorLibError, geometry.round_start_circle_stable_containment, table_builder.BuildCallback, table_builder.TableBuilder"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\errors.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ColorLibError",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\geometry.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Circle",
        "Contains 11 functions: _vector_between, _round_point, _unit_vector, _rounding_offset, round_start_circle_stable_containment, __init__, __repr__, round, inside, concentric, move",
        "Imports: math.copysign, math.cos, math.hypot, math.isclose, math.pi, fontTools.misc.roundTools.otRound"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: BuildCallback, TableBuilder, TableUnbuilder",
        "Contains 8 functions: _assignable, _isNonStrSequence, _split_format, __init__, _convert, build, __init__, unbuild",
        "Imports: collections, enum, fontTools.ttLib.tables.otBase.BaseTable, fontTools.ttLib.tables.otBase.FormatSwitchingBaseTable, fontTools.ttLib.tables.otBase.UInt8FormatSwitchingBaseTable, fontTools.ttLib.tables.otConverters.ComputedInt, fontTools.ttLib.tables.otConverters.SimpleValue, fontTools.ttLib.tables.otConverters.Struct, fontTools.ttLib.tables.otConverters.Short, fontTools.ttLib.tables.otConverters.UInt8, fontTools.ttLib.tables.otConverters.UShort, fontTools.ttLib.tables.otConverters.IntValue, fontTools.ttLib.tables.otConverters.FloatValue, fontTools.ttLib.tables.otConverters.OptionalValue, fontTools.misc.roundTools.otRound"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\unbuilder.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: LayerListUnbuilder",
        "Contains 5 functions: unbuildColrV1, _flatten_layers, __init__, unbuildPaint, _unbuildPaintColrLayers",
        "Imports: fontTools.ttLib.tables.otTables, table_builder.TableUnbuilder, pprint.pprint, sys, fontTools.ttLib.TTFont"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\config\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Config",
        "Contains 0 functions: ",
        "Imports: textwrap.dedent, fontTools.misc.configTools.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\benchmark.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 7 functions: generate_curve, setup_curve_to_quadratic, setup_curves_to_quadratic, run_benchmark, main, wrapper, wrapped",
        "Imports: cu2qu.*, random, timeit"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 6 functions: _cpu_count, open_ufo, _font_to_quadratic, _samepath, _copytree, _main",
        "Imports: os, argparse, logging, shutil, multiprocessing, contextlib.closing, functools.partial, fontTools, ufo.font_to_quadratic, ufo.fonts_to_quadratic, ufoLib2, defcon"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cu2qu.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 15 functions: dot, _complex_div_by_real, calc_cubic_points, calc_cubic_parameters, split_cubic_into_n_iter, _split_cubic_into_n_gen, split_cubic_into_two, split_cubic_into_three, cubic_approx_control, calc_intersect, cubic_farthest_fit_inside, cubic_approx_quadratic, cubic_approx_spline, curve_to_quadratic, curves_to_quadratic",
        "Imports: math, errors.Error, errors.ApproxNotFoundError, cython, fontTools.misc.cython"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\errors.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: Error, ApproxNotFoundError, UnequalZipLengthsError, IncompatibleGlyphsError, IncompatibleSegmentNumberError, IncompatibleSegmentTypesError, IncompatibleFontsError",
        "Contains 8 functions: __init__, __init__, __repr__, __str__, __init__, __str__, __init__, __str__",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: GetSegmentsPen",
        "Contains 18 functions: zip, _get_segments, _set_segments, _segments_to_quadratic, _glyphs_to_quadratic, glyphs_to_quadratic, fonts_to_quadratic, glyph_to_quadratic, font_to_quadratic, __init__, _add_segment, moveTo, lineTo, qCurveTo, curveTo, closePath, endPath, addComponent",
        "Imports: logging, fontTools.pens.basePen.AbstractPen, fontTools.pens.pointPen.PointToSegmentPen, fontTools.pens.reverseContourPen.ReverseContourPen, .curves_to_quadratic, errors.UnequalZipLengthsError, errors.IncompatibleSegmentNumberError, errors.IncompatibleSegmentTypesError, errors.IncompatibleGlyphsError, errors.IncompatibleFontsError"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: cu2qu.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, cli._main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 9 functions: defaultMakeInstanceFilename, splitInterpolable, splitVariableFonts, convert5to4, _extractSubSpace, _conditionSetFrom, _subsetRulesBasedOnConditions, _filterLocation, maybeExpandDesignLocation",
        "Imports: __future__.annotations, itertools, logging, math, typing.Any, typing.Callable, typing.Dict, typing.Iterator, typing.List, typing.Tuple, typing.cast, fontTools.designspaceLib.AxisDescriptor, fontTools.designspaceLib.AxisMappingDescriptor, fontTools.designspaceLib.DesignSpaceDocument, fontTools.designspaceLib.DiscreteAxisDescriptor, fontTools.designspaceLib.InstanceDescriptor, fontTools.designspaceLib.RuleDescriptor, fontTools.designspaceLib.SimpleLocationDict, fontTools.designspaceLib.SourceDescriptor, fontTools.designspaceLib.VariableFontDescriptor, fontTools.designspaceLib.statNames.StatNames, fontTools.designspaceLib.statNames.getStatNames, fontTools.designspaceLib.types.ConditionSet, fontTools.designspaceLib.types.Range, fontTools.designspaceLib.types.Region, fontTools.designspaceLib.types.getVFUserRegion, fontTools.designspaceLib.types.locationInRegion, fontTools.designspaceLib.types.regionInRegion, fontTools.designspaceLib.types.userRegionToDesignRegion"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: StatNames",
        "Contains 4 functions: getStatNames, _getSortedAxisLabels, _getAxisLabelsForUserLocation, _getRibbiStyle",
        "Imports: __future__.annotations, dataclasses.dataclass, typing.Dict, typing.Literal, typing.Optional, typing.Tuple, typing.Union, logging, fontTools.designspaceLib.AxisDescriptor, fontTools.designspaceLib.AxisLabelDescriptor, fontTools.designspaceLib.DesignSpaceDocument, fontTools.designspaceLib.DiscreteAxisDescriptor, fontTools.designspaceLib.SimpleLocationDict, fontTools.designspaceLib.SourceDescriptor"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Range",
        "Contains 8 functions: clamp, locationInRegion, regionInRegion, userRegionToDesignRegion, getVFUserRegion, __post_init__, __contains__, intersection",
        "Imports: __future__.annotations, dataclasses.dataclass, typing.Dict, typing.List, typing.Optional, typing.Union, typing.cast, fontTools.designspaceLib.AxisDescriptor, fontTools.designspaceLib.DesignSpaceDocument, fontTools.designspaceLib.DesignSpaceDocumentError, fontTools.designspaceLib.RangeAxisSubsetDescriptor, fontTools.designspaceLib.SimpleLocationDict, fontTools.designspaceLib.ValueAxisSubsetDescriptor, fontTools.designspaceLib.VariableFontDescriptor"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 18 classes: DesignSpaceDocumentError, AsDictMixin, SimpleDescriptor, SourceDescriptor, RuleDescriptor, AxisMappingDescriptor, InstanceDescriptor, AbstractAxisDescriptor, AxisDescriptor, DiscreteAxisDescriptor, AxisLabelDescriptor, LocationLabelDescriptor, VariableFontDescriptor, RangeAxisSubsetDescriptor, ValueAxisSubsetDescriptor, BaseDocWriter, BaseDocReader, DesignSpaceDocument",
        "Contains 136 functions: posix, posixpath_property, evaluateRule, evaluateConditions, processRules, tagForAxisName, main, getter, setter, __init__, __str__, asdict, compare, __repr__, __init__, location, location, setFamilyName, getFamilyName, getFullDesignLocation, __init__, __init__, __init__, location, location, setStyleName, getStyleName, setFamilyName, getFamilyName, setStyleMapStyleName, getStyleMapStyleName, setStyleMapFamilyName, getStyleMapFamilyName, clearLocation, getLocationLabelDescriptor, getFullDesignLocation, getFullUserLocation, __init__, __init__, serialize, map_forward, map_backward, __init__, map_forward, map_backward, __init__, getFormat, defaultName, __init__, defaultName, getFullUserLocation, __init__, __init__, __init__, getAxisDecriptor, getAxisMappingDescriptor, getSourceDescriptor, getInstanceDescriptor, getRuleDescriptor, __init__, write, _getEffectiveFormatTuple, _makeLocationElement, intOrFloat, _addRule, _addAxis, _addAxisMapping, _addAxisLabel, _addLabelNames, _addLocationLabel, _addLocationElement, _addInstance, _addSource, _addVariableFont, _addLib, _writeGlyphElement, __init__, fromstring, read, readRules, _readConditionElements, readAxes, readAxisLabel, readLabels, readVariableFonts, readAxisSubset, readSources, locationFromElement, readLocationElement, readInstances, _readSingleInstanceElement, readLibElement, readInfoElement, readGlyphElement, readLib, __init__, fromfile, fromstring, tostring, read, write, _posixRelativePath, updatePaths, addSource, addSourceDescriptor, addInstance, addInstanceDescriptor, addAxis, addAxisDescriptor, addAxisMapping, addAxisMappingDescriptor, addRule, addRuleDescriptor, addVariableFont, addVariableFontDescriptor, addLocationLabel, addLocationLabelDescriptor, newDefaultLocation, labelForUserLocation, updateFilenameFromPath, newAxisDescriptor, newSourceDescriptor, newInstanceDescriptor, getAxisOrder, getAxis, getAxisByTag, getLocationLabel, map_forward, map_backward, findDefault, normalizeLocation, normalize, loadSourceFonts, formatTuple, getVariableFonts, deepcopyExceptFonts",
        "Imports: __future__.annotations, collections, copy, itertools, math, os, posixpath, io.BytesIO, io.StringIO, textwrap.indent, typing.Any, typing.Dict, typing.List, typing.MutableMapping, typing.Optional, typing.Tuple, typing.Union, typing.cast, fontTools.misc.etree, fontTools.misc.plistlib, fontTools.misc.loggingTools.LogMixin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, argparse.ArgumentParser, fontTools.varLib.models.piecewiseLinearMap, fontTools.varLib.models.piecewiseLinearMap, fontTools.varLib.models.normalizeValue, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, fontTools.designspaceLib.main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\encodings\\codecs.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ExtendCodec",
        "Contains 6 functions: search_function, __init__, _map, encode, decode, error",
        "Imports: codecs, encodings"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\encodings\\MacRoman.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\encodings\\StandardEncoding.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\encodings\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py": {
      "entityType": "file",
      "observations": [
        "Contains 68 classes: Element, Statement, Expression, Comment, NullGlyph, GlyphName, GlyphClass, GlyphClassName, MarkClassName, AnonymousBlock, Block, FeatureFile, FeatureBlock, NestedBlock, LookupBlock, TableBlock, GlyphClassDefinition, GlyphClassDefStatement, MarkClass, MarkClassDefinition, AlternateSubstStatement, Anchor, AnchorDefinition, AttachStatement, ChainContextPosStatement, ChainContextSubstStatement, CursivePosStatement, FeatureReferenceStatement, IgnorePosStatement, IgnoreSubstStatement, IncludeStatement, LanguageStatement, LanguageSystemStatement, FontRevisionStatement, LigatureCaretByIndexStatement, LigatureCaretByPosStatement, LigatureSubstStatement, LookupFlagStatement, LookupReferenceStatement, MarkBasePosStatement, MarkLigPosStatement, MarkMarkPosStatement, MultipleSubstStatement, PairPosStatement, ReverseChainSingleSubstStatement, SingleSubstStatement, ScriptStatement, SinglePosStatement, SubtableStatement, ValueRecord, ValueRecordDefinition, NameRecord, FeatureNameStatement, STATNameStatement, SizeParameters, CVParametersNameStatement, CharacterStatement, BaseAxis, OS2Field, HheaField, VheaField, STATDesignAxisStatement, ElidedFallbackName, ElidedFallbackNameID, STATAxisValueStatement, AxisValueLocationStatement, ConditionsetStatement, VariationBlock",
        "Contains 202 functions: deviceToString, asFea, simplify_name_attributes, __init__, build, asFea, __str__, __init__, asFea, __init__, glyphSet, asFea, __init__, glyphSet, asFea, __init__, glyphSet, asFea, extend, append, add_range, add_cid_range, add_class, __init__, glyphSet, asFea, __init__, glyphSet, asFea, __init__, asFea, __init__, build, asFea, __init__, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, asFea, __init__, glyphSet, asFea, __init__, build, asFea, __init__, addDefinition, glyphSet, asFea, __init__, glyphSet, asFea, __init__, build, asFea, __init__, asFea, __init__, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, __eq__, __ne__, __hash__, asFea, __bool__, __init__, asFea, __init__, build, asFea, build, asFea, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, build, asFea, __init__, asFea, __init__, build, asFea, __init__, build, asFea, escape, intarr2str",
        "Imports: weakref, fontTools.feaLib.error.FeatureLibError, fontTools.feaLib.location.FeatureLibLocation, fontTools.misc.encodingTools.getEncoding, fontTools.misc.textTools.byteord, fontTools.misc.textTools.tobytes, collections.OrderedDict, itertools"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Builder",
        "Contains 91 functions: addOpenTypeFeatures, addOpenTypeFeaturesFromString, __init__, build, get_chained_lookup_, add_lookup_to_feature_, get_lookup_, build_feature_aalt_, build_head, build_hhea, build_vhea, get_user_name_id, buildFeatureParams, build_name, build_OS_2, setElidedFallbackName, addDesignAxis, addAxisValueRecord, build_STAT, build_codepages_, buildBASE, buildBASECoord, buildBASEAxis, buildGDEF, buildGDEFGlyphClassDef_, buildGDEFMarkAttachClassDef_, buildGDEFMarkGlyphSetsDef_, buildDebg, buildLookups_, makeTable, makeFeatureVariations, any_feature_variations, get_lookup_name_, add_language_system, get_default_language_systems_, start_feature, end_feature, start_lookup_block, end_lookup_block, add_lookup_call, set_font_revision, set_language, getMarkAttachClass_, getMarkFilterSet_, set_lookup_flag, set_script, find_lookup_builders_, add_attach_points, add_feature_reference, add_featureName, add_cv_parameter, add_to_cv_num_named_params, add_cv_character, set_base_axis, set_size_parameters, add_any_subst_, add_single_subst, add_multiple_subst, add_alternate_subst, add_ligature_subst, add_chain_context_subst, add_single_subst_chained_, add_multi_subst_chained_, add_ligature_subst_chained_, add_reverse_chain_single_subst, add_single_pos, add_class_pair_pos, add_specific_pair_pos, add_cursive_pos, add_mark_base_pos, add_mark_lig_pos, add_mark_mark_pos, add_chain_context_pos, add_single_pos_chained_, add_marks_, add_subtable_break, setGlyphClass_, add_glyphClassDef, add_ligatureCaretByIndex_, makeLigCaret, add_ligatureCaretByPos_, add_name_record, add_os2_field, add_hhea_field, add_vhea_field, add_conditionset, makeVariablePos, makeAnchorPos, makeOpenTypeAnchor, makeOpenTypeValueRecord, checkattr",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.Tag, fontTools.misc.textTools.tostr, fontTools.misc.textTools.binary2num, fontTools.misc.textTools.safeEval, fontTools.feaLib.error.FeatureLibError, fontTools.feaLib.lookupDebugInfo.LookupDebugInfo, fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_INFO_KEY, fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_ENV_VAR, fontTools.feaLib.parser.Parser, fontTools.feaLib.ast.FeatureFile, fontTools.feaLib.variableScalar.VariableScalar, fontTools.otlLib.builder, fontTools.otlLib.maxContextCalc.maxCtxFont, fontTools.ttLib.newTable, fontTools.ttLib.getTableModule, fontTools.ttLib.tables.otBase, fontTools.ttLib.tables.otTables, fontTools.otlLib.builder.AlternateSubstBuilder, fontTools.otlLib.builder.ChainContextPosBuilder, fontTools.otlLib.builder.ChainContextSubstBuilder, fontTools.otlLib.builder.LigatureSubstBuilder, fontTools.otlLib.builder.MultipleSubstBuilder, fontTools.otlLib.builder.CursivePosBuilder, fontTools.otlLib.builder.MarkBasePosBuilder, fontTools.otlLib.builder.MarkLigPosBuilder, fontTools.otlLib.builder.MarkMarkPosBuilder, fontTools.otlLib.builder.ReverseChainSingleSubstBuilder, fontTools.otlLib.builder.SingleSubstBuilder, fontTools.otlLib.builder.ClassPairPosSubtableBuilder, fontTools.otlLib.builder.PairPosBuilder, fontTools.otlLib.builder.SinglePosBuilder, fontTools.otlLib.builder.ChainContextualRule, fontTools.otlLib.builder.AnySubstBuilder, fontTools.otlLib.error.OpenTypeLibError, fontTools.varLib.errors.VarLibError, fontTools.varLib.varStore.OnlineVarStoreBuilder, fontTools.varLib.builder.buildVarDevTable, fontTools.varLib.featureVars.addFeatureVariationsRaw, fontTools.varLib.models.normalizeValue, fontTools.varLib.models.piecewiseLinearMap, collections.defaultdict, copy, itertools, io.StringIO, logging, warnings, os"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\error.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FeatureLibError, IncludedFeaNotFound",
        "Contains 3 functions: __init__, __str__, __str__",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lexer.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Lexer, IncludingLexer, NonIncludingLexer",
        "Contains 16 functions: __init__, __iter__, next, __next__, location_, next_, scan_over_, scan_until_, scan_anonymous_block, __init__, __iter__, next, __next__, make_lexer_, scan_anonymous_block, __next__",
        "Imports: fontTools.feaLib.error.FeatureLibError, fontTools.feaLib.error.IncludedFeaNotFound, fontTools.feaLib.location.FeatureLibLocation, re, os, cython, fontTools.misc.cython"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\location.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: FeatureLibLocation",
        "Contains 1 functions: __str__",
        "Imports: typing.NamedTuple"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lookupDebugInfo.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: LookupDebugInfo",
        "Contains 0 functions: ",
        "Imports: typing.NamedTuple"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Parser, SymbolTable",
        "Contains 103 functions: __init__, parse, parse_anchor_, parse_anchor_marks_, parse_anchordef_, parse_anonymous_, parse_attach_, parse_enumerate_, parse_GlyphClassDef_, parse_glyphclass_definition_, split_glyph_range_, parse_glyphclass_, parse_glyph_pattern_, parse_ignore_glyph_pattern_, parse_ignore_context_, parse_ignore_, parse_include_, parse_language_, parse_ligatureCaretByIndex_, parse_ligatureCaretByPos_, parse_lookup_, parse_lookupflag_, parse_markClass_, parse_position_, parse_position_cursive_, parse_position_base_, parse_position_ligature_, parse_position_mark_, parse_script_, parse_substitute_, parse_subtable_, parse_size_parameters_, parse_size_menuname_, parse_table_, parse_table_GDEF_, parse_table_head_, parse_table_hhea_, parse_table_vhea_, parse_table_name_, parse_name_, parse_stat_name_, parse_nameid_, unescape_string_, unescape_unichr_, unescape_byte_, find_previous, parse_table_BASE_, parse_table_OS_2_, parse_STAT_ElidedFallbackName, parse_STAT_design_axis, parse_STAT_axis_value_, parse_STAT_location, parse_table_STAT_, parse_base_tag_list_, parse_base_script_list_, parse_base_script_record_, parse_base_minmax_, parse_device_, is_next_value_, parse_valuerecord_, parse_valuerecord_definition_, parse_languagesystem_, parse_feature_block_, parse_feature_reference_, parse_featureNames_, parse_cvParameters_, parse_cvNameIDs_, parse_cvCharacter_, parse_FontRevision_, parse_conditionset_, parse_block_, is_cur_keyword_, expect_class_name_, expect_cid_, expect_filename_, expect_glyph_, check_glyph_name_in_glyph_set, expect_markClass_reference_, expect_tag_, expect_script_tag_, expect_language_tag_, expect_symbol_, expect_keyword_, expect_name_, expect_number_, expect_variable_scalar_, expect_master_, expect_any_number_, expect_float_, expect_integer_or_float_, expect_decipoint_, expect_stat_flags, expect_stat_values_, expect_string_, advance_lexer_, reverse_string_, make_cid_range_, make_glyph_range_, __init__, enter_scope, exit_scope, define, resolve",
        "Imports: fontTools.feaLib.error.FeatureLibError, fontTools.feaLib.lexer.Lexer, fontTools.feaLib.lexer.IncludingLexer, fontTools.feaLib.lexer.NonIncludingLexer, fontTools.feaLib.variableScalar.VariableScalar, fontTools.misc.encodingTools.getEncoding, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.feaLib.ast, logging, os, re, fontTools.misc.loggingTools.deprecateArgument"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\variableScalar.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: VariableScalar",
        "Contains 14 functions: Location, __init__, __repr__, does_vary, axes_dict, _normalized_location, fix_location, add_value, fix_all_locations, default, value_at_location, model, get_deltas_and_supports, add_to_variation_store",
        "Imports: fontTools.varLib.models.VariationModel, fontTools.varLib.models.normalizeValue, fontTools.varLib.models.piecewiseLinearMap"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: main",
        "Imports: fontTools.ttLib.TTFont, fontTools.feaLib.builder.addOpenTypeFeatures, fontTools.feaLib.builder.Builder, fontTools.feaLib.error.FeatureLibError, fontTools.configLogger, fontTools.misc.cliTools.makeOutputFileName, sys, argparse, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\base.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: add_method, mergeObjects, merge, wrapper",
        "Imports: fontTools.ttLib.tables.DefaultTable.DefaultTable, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\cmap.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _CmapUnicodePlatEncodings",
        "Contains 5 functions: computeMegaGlyphOrder, _glyphsAreSame, computeMegaUvs, computeMegaCmap, renameCFFCharStrings",
        "Imports: fontTools.merge.unicode.is_Default_Ignorable, fontTools.pens.recordingPen.DecomposingRecordingPen, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ContextHelper",
        "Contains 23 functions: mergeLookupLists, mergeFeatures, mergeFeatureLists, mergeLangSyses, mergeScripts, mergeScriptRecords, merge, mapLookups, __merge_classify_context, mapLookups, mapLookups, mapLookups, mapLookups, mapMarkFilteringSets, mapMarkFilteringSets, mapLookups, mapLookups, mapFeatures, mapFeatures, mapFeatures, layoutPreMerge, layoutPostMerge, __init__",
        "Imports: fontTools.ttLib, fontTools.ttLib.tables.DefaultTable.DefaultTable, fontTools.ttLib.tables.otTables, fontTools.merge.base.add_method, fontTools.merge.base.mergeObjects, fontTools.merge.util.*, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\options.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Options, UnknownOptionError",
        "Contains 3 functions: __init__, set, parse_opts",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: mergeOs2FsType, merge, merge, merge, merge",
        "Imports: fontTools.ttLib, fontTools.cffLib, fontTools.misc.psCharStrings.T2WidthExtractor, fontTools.ttLib.tables.DefaultTable.DefaultTable, fontTools.merge.base.add_method, fontTools.merge.base.mergeObjects, fontTools.merge.cmap.computeMegaCmap, fontTools.merge.util.*, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\unicode.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: is_Default_Ignorable",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\util.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: AttendanceRecordingIdentityDict, GregariousIdentityDict, NonhashableDict",
        "Contains 21 functions: equal, first, recalculate, current_time, bitwise_and, bitwise_or, avg_int, onlyExisting, sumLists, sumDicts, mergeBits, wrapper, wrapper, __init__, __getitem__, __init__, __getitem__, __init__, __getitem__, __setitem__, __delitem__",
        "Imports: fontTools.misc.timeTools.timestampNow, fontTools.ttLib.tables.DefaultTable.DefaultTable, functools.reduce, operator, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Merger",
        "Contains 7 functions: main, __init__, _openFonts, merge, mergeObjects, _preMerge, _postMerge",
        "Imports: fontTools.ttLib, fontTools.merge.base, fontTools.merge.cmap.computeMegaGlyphOrder, fontTools.merge.cmap.computeMegaCmap, fontTools.merge.cmap.renameCFFCharStrings, fontTools.merge.layout.layoutPreMerge, fontTools.merge.layout.layoutPostMerge, fontTools.merge.options.Options, fontTools.merge.tables, fontTools.misc.loggingTools.Timer, functools.reduce, sys, logging, fontTools.configLogger"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, fontTools.merge.main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\arrayTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Vector",
        "Contains 20 functions: calcBounds, calcIntBounds, updateBounds, pointInRect, pointsInRect, vectorLength, asInt16, normRect, scaleRect, offsetRect, insetRect, sectRect, unionRect, rectCenter, rectArea, intRect, quantizeRect, pairwise, _test, __init__",
        "Imports: fontTools.misc.roundTools.otRound, fontTools.misc.vector.Vector, math, warnings, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 52 functions: calcCubicArcLength, _split_cubic_into_two, _calcCubicArcLengthCRecurse, calcCubicArcLengthC, _dot, _intSecAtan, calcQuadraticArcLength, calcQuadraticArcLengthC, approximateQuadraticArcLength, approximateQuadraticArcLengthC, calcQuadraticBounds, approximateCubicArcLength, approximateCubicArcLengthC, calcCubicBounds, splitLine, splitQuadratic, splitCubic, splitQuadraticAtT, splitCubicAtT, splitCubicAtTC, splitCubicIntoTwoAtTC, _splitQuadraticAtT, _splitCubicAtT, _splitCubicAtTC, solveQuadratic, solveCubic, calcQuadraticParameters, calcCubicParameters, calcCubicParametersC, calcQuadraticPoints, calcCubicPoints, calcCubicPointsC, linePointAtT, quadraticPointAtT, cubicPointAtT, cubicPointAtTC, segmentPointAtT, _line_t_of_pt, _both_points_are_on_same_side_of_origin, lineLineIntersections, _alignment_transformation, _curve_line_intersections_t, curveLineIntersections, _curve_bounds, _split_segment_at_t, _curve_curve_intersections_t, _is_linelike, curveCurveIntersections, segmentSegmentIntersections, _segmentrepr, printSegments, midpoint",
        "Imports: fontTools.misc.arrayTools.calcBounds, fontTools.misc.arrayTools.sectRect, fontTools.misc.arrayTools.rectArea, fontTools.misc.transform.Identity, math, collections.namedtuple, math.sqrt, math.acos, math.cos, math.pi, cython, sys, doctest, fontTools.misc.cython"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\classifyTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Classifier",
        "Contains 8 functions: classify, __init__, add, update, _process, getThings, getMapping, getClasses",
        "Imports: sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\cliTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: makeOutputFileName",
        "Imports: os, re"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: ConfigError, ConfigAlreadyRegisteredError, ConfigValueParsingError, ConfigValueValidationError, ConfigUnknownOptionError, Option, Options, AbstractConfig",
        "Contains 26 functions: __init__, __init__, __init__, __init__, parse_optional_bool, validate_optional_bool, __init__, register, register_option, is_registered, __getitem__, __iter__, __len__, __repr__, register_option, __init__, _resolve_option, set, get, copy, __getitem__, __setitem__, __delitem__, __iter__, __len__, __repr__",
        "Imports: __future__.annotations, logging, dataclasses.dataclass, typing.Any, typing.Callable, typing.ClassVar, typing.Dict, typing.Iterable, typing.Mapping, typing.MutableMapping, typing.Optional, typing.Set, typing.Union"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\cython.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: _empty_decorator",
        "Imports: types.SimpleNamespace"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\dictTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: hashdict",
        "Contains 11 functions: __key, __repr__, __hash__, __setitem__, __delitem__, clear, pop, popitem, setdefault, update, __add__",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\eexec.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 6 functions: _decryptChar, _encryptChar, decrypt, encrypt, hexString, deHexString",
        "Imports: fontTools.misc.textTools.bytechr, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.byteord, binascii, binascii, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\encodingTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: getEncoding",
        "Imports: fontTools.encodings.codecs"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\enumTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: StrEnum",
        "Contains 1 functions: __str__",
        "Imports: __future__.annotations, enum.Enum, enum.StrEnum"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Element, ElementTree",
        "Contains 15 functions: SubElement, _iterwalk, iterwalk, tostring, _tounicode, _get_writer, _namespaces, _serialize_xml, _raise_serialization_error, _escape_cdata, _escape_attrib, _indent, __init__, write, add_qname",
        "Imports: fontTools.misc.textTools.tostr, lxml.etree.*, io, re, contextlib, xml.etree.ElementTree._namespace_map, xml.etree.cElementTree.*, xml.etree.ElementTree.XML, xml.etree.ElementTree.Element, xml.etree.ElementTree.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filenames.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: NameTranslationError",
        "Contains 3 functions: userNameToFileName, handleClash1, handleClash2",
        "Imports: doctest, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\fixedTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 9 functions: fixedToFloat, floatToFixed, floatToFixedToFloat, fixedToStr, strToFixed, strToFixedToFloat, floatToFixedToStr, ensureVersionIsLong, versionToFixed",
        "Imports: roundTools.otRound, roundTools.nearestMultipleShortestRepr, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\intTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: bit_indices, bit_count",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\iterTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: batched",
        "Imports: itertools.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\lazyTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: LazyDict, LazyList",
        "Contains 5 functions: __init__, __getitem__, __getitem__, __add__, __radd__",
        "Imports: collections.UserDict, collections.UserList"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: LevelFormatter, Timer, ChannelsFilter, CapturingLogHandler, LogMixin",
        "Contains 28 functions: configLogger, _resetExistingLoggers, deprecateArgument, deprecateFunction, __init__, format, __init__, reset, time, split, formatTime, __enter__, __exit__, __call__, __float__, __int__, __str__, __init__, filter, __init__, __enter__, __exit__, emit, assertRegex, log, decorator, wrapper, wrapper",
        "Imports: sys, logging, timeit, functools.wraps, collections.abc.Mapping, collections.abc.Callable, warnings, logging.PercentStyle, doctest, re"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macCreatorType.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: _reverseString, getMacCreatorAndType, setMacCreatorAndType",
        "Imports: fontTools.misc.textTools.Tag, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.strjoin, xattr, fontTools.misc.textTools.pad"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macRes.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: ResourceError, ResourceReader, Resource",
        "Contains 23 functions: __init__, openResourceFork, openDataFork, _readFile, _read, _readHeaderAndMap, _readTypeList, _readReferenceList, __getitem__, __delitem__, __setitem__, __len__, __iter__, keys, types, countResources, getIndices, getNames, getIndResource, getNamedResource, close, __init__, decompile",
        "Imports: io.BytesIO, struct, fontTools.misc.sstruct, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.tostr, collections.OrderedDict, collections.abc.MutableMapping"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py": {
      "entityType": "file",
      "observations": [
        "Contains 9 classes: CharStringCompileError, SimpleT2Decompiler, T2StackUseExtractor, T2WidthExtractor, T2OutlineExtractor, T1OutlineExtractor, T2CharString, T1CharString, DictDecompiler",
        "Contains 174 functions: read_operator, read_byte, read_smallInt1, read_smallInt2, read_shortInt, read_longInt, read_fixed1616, read_reserved, read_realNumber, buildOperatorDict, getIntEncoder, encodeFixed, encodeFloat, calcSubrBias, encodeInt, __init__, reset, execute, pop, popall, push, op_return, op_endchar, op_ignore, op_callsubr, op_callgsubr, op_hstem, op_vstem, op_hstemhm, op_vstemhm, op_hintmask, countHints, op_and, op_or, op_not, op_store, op_abs, op_add, op_sub, op_div, op_load, op_neg, op_eq, op_drop, op_put, op_get, op_ifelse, op_random, op_mul, op_sqrt, op_dup, op_exch, op_index, op_roll, op_blend, op_vsindex, execute, __init__, reset, popallWidth, countHints, op_rmoveto, op_hmoveto, op_vmoveto, op_endchar, __init__, reset, execute, _nextPoint, rMoveTo, rLineTo, rCurveTo, closePath, endPath, op_rmoveto, op_hmoveto, op_vmoveto, op_endchar, op_rlineto, op_hlineto, op_vlineto, op_rrcurveto, op_rcurveline, op_rlinecurve, op_vvcurveto, op_hhcurveto, op_vhcurveto, op_hvcurveto, op_hflex, op_flex, op_hflex1, op_flex1, op_and, op_or, op_not, op_store, op_abs, op_add, op_sub, op_div, op_load, op_neg, op_eq, op_drop, op_put, op_get, op_ifelse, op_random, op_mul, op_sqrt, op_dup, op_exch, op_index, op_roll, alternatingLineto, vcurveto, hcurveto, __init__, reset, endPath, popallWidth, exch, op_rmoveto, op_hmoveto, op_vmoveto, op_closepath, op_setcurrentpoint, op_endchar, op_hsbw, op_sbw, op_callsubr, op_callothersubr, op_pop, doFlex, op_dotsection, op_hstem3, op_seac, op_vstem3, __init__, getNumRegions, __repr__, getIntEncoder, getFixedEncoder, decompile, draw, calcBounds, compile, needsDecompilation, setProgram, setBytecode, getToken, getBytes, handle_operator, toXML, fromXML, __init__, getIntEncoder, getFixedEncoder, decompile, draw, __init__, getDict, decompile, pop, popall, handle_operator, arg_number, arg_blend_number, arg_SID, arg_array, arg_blendList, arg_delta, pushToStack, encodeFixed",
        "Imports: fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.strjoin, fontTools.pens.boundsPen.BoundsPen, struct, logging, fontTools.encodings.StandardEncoding.StandardEncoding, fontTools.misc.textTools.num2binary, fontTools.misc.textTools.binary2num, fontTools.misc.textTools.readHex, fontTools.encodings.StandardEncoding.StandardEncoding"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: PSTokenError, PSError, PSTokenizer, PSInterpreter",
        "Contains 26 functions: unpack_item, suckfont, __init__, read, close, getnexttoken, skipwhite, starteexec, stopeexec, __init__, fillsystemdict, suckoperators, interpret, handle_object, call_procedure, resolve_name, do_token, do_comment, do_literal, do_string, do_hexstring, do_special, push, pop, do_makearray, close",
        "Imports: fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.eexec, psOperators.PSOperators, psOperators.ps_StandardEncoding, psOperators.ps_array, psOperators.ps_boolean, psOperators.ps_dict, psOperators.ps_integer, psOperators.ps_literal, psOperators.ps_mark, psOperators.ps_name, psOperators.ps_operator, psOperators.ps_procedure, psOperators.ps_procmark, psOperators.ps_real, psOperators.ps_string, re, collections.abc.Callable, string.whitespace, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psOperators.py": {
      "entityType": "file",
      "observations": [
        "Contains 17 classes: ps_object, ps_operator, ps_procedure, ps_name, ps_literal, ps_array, ps_font, ps_file, ps_dict, ps_mark, ps_procmark, ps_null, ps_boolean, ps_string, ps_integer, ps_real, PSOperators",
        "Contains 73 functions: _type1_item_repr, _type1_Encoding_repr, _type1_CharString_repr, __init__, __repr__, __init__, __repr__, __repr__, __str__, __str__, __str__, __str__, __repr__, __str__, __repr__, __str__, __repr__, __init__, __init__, __init__, __str__, __str__, __str__, __str__, ps_def, ps_bind, proc_bind, ps_exch, ps_dup, ps_exec, ps_count, ps_eq, ps_ne, ps_cvx, ps_matrix, ps_string, ps_type, ps_store, ps_where, ps_systemdict, ps_userdict, ps_currentdict, ps_currentfile, ps_eexec, ps_closefile, ps_cleartomark, ps_readstring, ps_known, ps_if, ps_ifelse, ps_readonly, ps_executeonly, ps_noaccess, ps_not, ps_print, ps_anchorsearch, ps_array, ps_astore, ps_load, ps_put, ps_get, ps_getinterval, ps_putinterval, ps_cvn, ps_index, ps_for, ps_forall, ps_definefont, ps_findfont, ps_pop, ps_dict, ps_begin, ps_end",
        "Imports: fontTools.encodings.StandardEncoding.StandardEncoding"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Py23Error",
        "Contains 2 functions: xrange, round2",
        "Imports: decimal, math, warnings, contextlib.redirect_stderr, contextlib.redirect_stdout, io.BytesIO, io.StringIO, types.SimpleNamespace, textTools.Tag, textTools.bytechr, textTools.byteord, textTools.bytesjoin, textTools.strjoin, textTools.tobytes, textTools.tostr"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\roundTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: noRound, otRound, maybeRound, roundFunc, nearestMultipleShortestRepr",
        "Imports: math, functools, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\sstruct.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Error, foo",
        "Contains 6 functions: pack, unpack, unpack2, calcsize, getformat, _test",
        "Imports: fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, struct, re"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\symfont.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: _BezierFuncsLazy, GreenPen",
        "Contains 12 functions: green, printGreenPen, __init__, __missing__, _getGreenBezierFuncs, __init__, _moveTo, _closePath, _endPath, _lineTo, _qCurveToOne, _curveToOne",
        "Imports: fontTools.pens.basePen.BasePen, functools.partial, itertools.count, sympy, sys, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: FakeFont, TestXMLReader_, MockFont, TestCase, DataFilesHandler, AllocatingDict",
        "Contains 33 functions: parseXML, parseXmlInto, makeXMLWriter, getXML, stripVariableItemsFromTTX, __init__, __contains__, __getitem__, __setitem__, get, getGlyphID, getGlyphIDMany, getGlyphName, getGlyphNameMany, getGlyphOrder, getReverseGlyphMap, getGlyphNames, __init__, startElement_, endElement_, addCharacterData_, __init__, getGlyphID, getReverseGlyphMap, getGlyphName, getGlyphOrder, __init__, setUp, tearDown, getpath, temp_dir, temp_font, __missing__",
        "Imports: collections.abc.Iterable, io.BytesIO, os, re, shutil, sys, tempfile, unittest.TestCase, fontTools.config.Config, fontTools.misc.textTools.tobytes, fontTools.misc.xmlWriter.XMLWriter, xml.parsers.expat.ParserCreate"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\textTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Tag",
        "Contains 19 functions: readHex, deHexStr, hexStr, num2binary, binary2num, caselessSort, pad, tostr, tobytes, bytechr, byteord, strjoin, bytesjoin, transcode, __new__, __ne__, __eq__, __hash__, tobytes",
        "Imports: __future__.annotations, ast, string, doctest, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\timeTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: asctime, timestampToString, timestampFromString, timestampNow, timestampSinceEpoch",
        "Imports: os, time, datetime.datetime, datetime.timezone, calendar, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\transform.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Transform, DecomposedTransform",
        "Contains 21 functions: _normSinCos, Offset, Scale, transformPoint, transformPoints, transformVector, transformVectors, translate, scale, rotate, skew, transform, reverseTransform, inverse, toPS, toDecomposed, __bool__, __repr__, __bool__, fromTransform, toTransform",
        "Imports: __future__.annotations, math, typing.NamedTuple, dataclasses.dataclass, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\treeTools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: build_n_ary_tree",
        "Imports: math.ceil, math.log"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\vector.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Vector",
        "Contains 27 functions: _operator_rsub, _operator_rtruediv, __new__, __repr__, _vectorOp, _scalarOp, _unaryOp, __add__, __sub__, __rsub__, __mul__, __truediv__, __rtruediv__, __pos__, __neg__, __round__, __eq__, __ne__, __bool__, __abs__, length, normalized, dot, toInt, values, values, isclose",
        "Imports: numbers.Number, math, operator, warnings"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\visitor.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Visitor",
        "Contains 12 functions: _register, register, register_attr, register_attrs, _visitorsFor, visitObject, visitAttr, visitList, visitDict, visitLeaf, visit, wrapper",
        "Imports: enum, weakref"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: TTXParseError, XMLReader, ProgressPrinter",
        "Contains 11 functions: __init__, read, close, _parseFile, _startElementHandler, _characterDataHandler, _endElementHandler, __init__, set, increment, setLabel",
        "Imports: fontTools.ttLib, fontTools.misc.textTools.safeEval, fontTools.ttLib.tables.DefaultTable.DefaultTable, sys, os, logging, xml.parsers.expat.ParserCreate, fontTools.misc.loggingTools.deprecateArgument"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: XMLWriter",
        "Contains 23 functions: escape, escapeattr, escape8bit, hexStr, __init__, __enter__, __exit__, close, write, writecdata, write8bit, write_noindent, _writeraw, newline, comment, simpletag, begintag, endtag, dumphex, indent, dedent, stringifyattrs, escapechar",
        "Imports: fontTools.misc.textTools.byteord, fontTools.misc.textTools.strjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, sys, os, string, logging, itertools"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: FS",
        "Contains 26 functions: open, exists, isdir, isfile, listdir, makedir, makedirs, getinfo, remove, removedir, removetree, movedir, getsyspath, close, isclosed, __enter__, __exit__, check, opendir, scandir, walk, readbytes, writebytes, create, copy, copydir",
        "Imports: __future__.annotations, typing, abc.ABC, abc.abstractmethod, _copy.copy_dir, _copy.copy_file, _errors.DestinationExists, _errors.DirectoryExpected, _errors.FileExpected, _errors.FilesystemClosed, _errors.NoSysPath, _errors.ResourceNotFound, _path.dirname, _walk.BoundWalker, typing.IO, typing.Any, typing.Collection, typing.Iterator, typing.Self, typing.Type, _info.Info, _subfs.SubFS, _subfs.SubFS"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: copy_file, copy_structure, copy_dir, copy_fs",
        "Imports: __future__.annotations, typing, _errors.IllegalDestination, _path.combine, _path.frombase, _path.isbase, _tools.copy_file_data, _base.FS"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_errors.py": {
      "entityType": "file",
      "observations": [
        "Contains 14 classes: FSError, CreateFailed, FilesystemClosed, MissingInfoNamespace, NoSysPath, OperationFailed, IllegalDestination, ResourceError, ResourceNotFound, DirectoryExpected, DirectoryNotEmpty, FileExpected, DestinationExists, ResourceReadOnly",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_info.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Info",
        "Contains 13 functions: epoch_to_datetime, __init__, get, name, is_dir, is_file, accessed, modified, size, type, created, metadata_changed, __str__",
        "Imports: __future__.annotations, typing, datetime.datetime, datetime.timezone, _errors.MissingInfoNamespace, collections.abc.Mapping, typing.Any"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: OSFS",
        "Contains 18 functions: __init__, _abs, open, exists, isdir, isfile, listdir, _mkdir, makedir, makedirs, getinfo, remove, removedir, removetree, movedir, getsyspath, __repr__, __str__",
        "Imports: __future__.annotations, errno, platform, shutil, stat, typing, os.PathLike, pathlib.Path, _base.FS, _errors.CreateFailed, _errors.DirectoryExpected, _errors.DirectoryNotEmpty, _errors.FileExpected, _errors.IllegalDestination, _errors.ResourceError, _errors.ResourceNotFound, _info.Info, _path.isbase, collections.abc.Collection, typing.IO, typing.Any, _subfs.SubFS"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_path.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 10 functions: combine, split, dirname, basename, forcedir, abspath, isbase, frombase, relpath, normpath",
        "Imports: os, platform"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: SubFS, ClosingSubFS",
        "Contains 21 functions: __init__, delegate_fs, _full, open, exists, isdir, isfile, listdir, makedir, makedirs, getinfo, remove, removedir, removetree, movedir, getsyspath, readbytes, writebytes, __repr__, __str__, close",
        "Imports: __future__.annotations, typing, pathlib.PurePosixPath, _base.FS, _errors.DirectoryExpected, _errors.ResourceNotFound, collections.abc.Collection, typing.IO, typing.Any, _info.Info"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tempfs.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TempFS",
        "Contains 3 functions: __init__, close, clean",
        "Imports: __future__.annotations, shutil, tempfile, _errors.OperationFailed, _osfs.OSFS"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: remove_empty, copy_file_data",
        "Imports: __future__.annotations, typing, pathlib.PurePosixPath, _errors.DirectoryNotEmpty, typing.IO, _base.FS"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: BoundWalker",
        "Contains 5 functions: __init__, _iter_walk, _filter, files, dirs",
        "Imports: __future__.annotations, typing, collections.deque, collections.abc.Collection, collections.abc.Iterator, _path.combine, typing.Callable, _base.FS, _info.Info"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: ZipFS, ReadZipFS, WriteZipFS",
        "Contains 25 functions: __new__, __init__, __repr__, __str__, _path_to_zip_name, _directory, close, getinfo, exists, isdir, isfile, listdir, makedir, makedirs, remove, removedir, removetree, movedir, readbytes, open, __init__, __repr__, __str__, close, __init__",
        "Imports: __future__.annotations, io, os, shutil, stat, typing, zipfile, datetime.datetime, _base.FS, _errors.FileExpected, _errors.ResourceNotFound, _errors.ResourceReadOnly, _info.Info, _path.dirname, _path.forcedir, _path.normpath, _path.relpath, _tempfs.TempFS, collections.abc.Collection, typing.IO, typing.Any, _subfs.SubFS"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, fs.base, fs.copy, fs.errors, fs.info, fs.osfs, fs.path, fs.subfs, fs.tempfs, fs.tools, fs.walk, fs.zipfs, ._base, ._copy, ._errors, ._info, ._osfs, ._path, ._subfs, ._tempfs, ._tools, ._walk, ._zipfs"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Data, PlistTarget",
        "Contains 43 functions: _date_from_string, _date_to_string, _encode_base64, start_dict, end_dict, end_key, start_array, end_array, end_true, end_false, end_integer, end_real, end_string, end_data, end_date, _string_element, _bool_element, _integer_element, _real_element, _dict_element, _array_element, _date_element, _data_element, _string_or_data_element, _make_element, totree, fromtree, load, loads, dump, dumps, __init__, fromBase64, asBase64, __eq__, __repr__, __init__, start, end, data, close, add_object, get_data",
        "Imports: collections.abc, re, typing.Any, typing.Callable, typing.Dict, typing.List, typing.Mapping, typing.MutableMapping, typing.Optional, typing.Sequence, typing.Type, typing.Union, typing.IO, warnings, io.BytesIO, datetime.datetime, base64.b64encode, base64.b64decode, numbers.Integral, types.SimpleNamespace, functools.singledispatch, fontTools.misc.etree, fontTools.misc.textTools.tostr"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 11 classes: MtiLibError, ReferenceNotFoundError, FeatureNotFoundError, LookupNotFoundError, DeferredMapping, MarkHelper, MarkToBaseHelper, MarkToMarkHelper, MarkToLigatureHelper, ContextHelper, Tokenizer",
        "Contains 78 functions: makeGlyph, makeGlyphs, mapLookup, mapFeature, setReference, parseScriptList, parseFeatureList, parseLookupFlags, parseSingleSubst, parseMultiple, parseAlternate, parseLigature, parseSinglePos, parsePair, parseKernset, makeAnchor, parseCursive, makeMarkRecords, makeBaseRecords, makeLigatureRecords, parseMarkToSomething, parseMarkToBase, parseMarkToMark, parseMarkToLigature, stripSplitComma, intSplitComma, parseLookupRecords, makeClassDef, parseClassDef, makeCoverage, parseCoverage, bucketizeRules, parseContext, parseContextSubst, parseContextPos, parseChainedSubst, parseChainedPos, parseReverseChainedSubst, parseLookup, parseGSUBGPOS, parseGSUB, parseGPOS, parseAttachList, parseCaretList, makeMarkFilteringSets, parseMarkFilteringSets, parseGDEF, parseCmap, parseCmapId, parseTable, build, main, __init__, addDeferredMapping, applyDeferredMappings, __init__, __init__, __init__, __iter__, _next_line, _next_nonempty, _next_buffered, __next__, next, peek, peeks, between, until, expect, expectendswith, SetRuleData, ChainSetRuleData, SetContextData, SetChainContextData, SetRuleData, ChainSetRuleData, SetRuleData, ChainSetRuleData",
        "Imports: fontTools.ttLib, fontTools.ttLib.tables._c_m_a_p.cmap_classes, fontTools.ttLib.tables.otTables, fontTools.ttLib.tables.otBase.ValueRecord, fontTools.ttLib.tables.otBase.valueRecordFormatDict, fontTools.otlLib.builder, contextlib.contextmanager, fontTools.ttLib.newTable, fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_ENV_VAR, fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_INFO_KEY, operator.setitem, os, logging, sys, fontTools.configLogger, fontTools.misc.testTools.MockFont, argparse, sys, fontTools.misc.xmlWriter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, fontTools.mtiLib.main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py": {
      "entityType": "file",
      "observations": [
        "Contains 20 classes: LookupBuilder, AlternateSubstBuilder, ChainContextualRule, ChainContextualRuleset, ChainContextualBuilder, ChainContextPosBuilder, ChainContextSubstBuilder, LigatureSubstBuilder, MultipleSubstBuilder, CursivePosBuilder, MarkBasePosBuilder, MarkLigPosBuilder, MarkMarkPosBuilder, ReverseChainSingleSubstBuilder, AnySubstBuilder, SingleSubstBuilder, ClassPairPosSubtableBuilder, PairPosBuilder, SinglePosBuilder, ClassDefBuilder",
        "Contains 170 functions: buildCoverage, buildLookup, buildSingleSubstSubtable, buildMultipleSubstSubtable, buildAlternateSubstSubtable, buildLigatureSubstSubtable, buildAnchor, buildBaseArray, buildBaseRecord, buildComponentRecord, buildCursivePosSubtable, buildDevice, buildLigatureArray, buildLigatureAttach, buildMarkArray, buildMarkBasePos, buildMarkBasePosSubtable, buildMarkLigPos, buildMarkLigPosSubtable, buildMarkRecord, buildMark2Record, _getValueFormat, buildPairPosClassesSubtable, buildPairPosGlyphs, buildPairPosGlyphsSubtable, buildSinglePos, buildSinglePosSubtable, _getSinglePosTableKey, _getSinglePosValueKey, _makeDeviceTuple, _getSinglePosValueSize, buildValue, buildAttachList, buildAttachPoint, buildCaretValueForCoord, buildCaretValueForPoint, buildLigCaretList, buildLigGlyph, buildMarkGlyphSetsDef, buildStatTable, _buildAxisRecords, _buildAxisValuesFormat4, _addName, buildMathTable, _buildMathConstants, _buildMathGlyphInfo, _buildMathVariants, _buildMathGlyphConstruction, _mathValueRecord, __init__, equals, promote_lookup_type, inferGlyphClasses, getAlternateGlyphs, buildLookup_, buildMarkClasses_, setBacktrackCoverage_, setLookAheadCoverage_, setInputCoverage_, setCoverage_, build_subst_subtables, add_subtable_break, can_add_mapping, __init__, equals, build, getAlternateGlyphs, add_subtable_break, is_subtable_break, __init__, addRule, hasPrefixOrSuffix, hasAnyGlyphClasses, format2ClassDefs, _classBuilderForContext, equals, rulesets, getCompiledSize_, build, buildFormat1Subtable, buildFormat2Subtable, buildFormat3Subtable, buildLookupList, add_subtable_break, newSubtable_, ruleSetAttr_, ruleAttr_, newRuleSet_, newRule_, attachSubtableWithCount_, newLookupRecord_, __init__, find_chainable_single_pos, __init__, getAlternateGlyphs, find_chainable_subst, find_chainable_ligature_subst, __init__, equals, build, getAlternateGlyphs, add_subtable_break, __init__, equals, build, getAlternateGlyphs, add_subtable_break, __init__, equals, add_attachment, build, add_subtable_break, __init__, get_subtables_, equals, inferGlyphClasses, build, add_subtable_break, __init__, get_subtables_, equals, inferGlyphClasses, build, add_subtable_break, __init__, get_subtables_, equals, inferGlyphClasses, build, add_subtable_break, __init__, equals, build, add_subtable_break, __init__, _add_to_single_subst, _add_to_multiple_subst, _add_to_ligature_subst, can_add_mapping, promote_lookup_type, equals, build, getAlternateGlyphs, add_subtable_break, __init__, equals, build, getAlternateGlyphs, add_subtable_break, __init__, addPair, addSubtableBreak, subtables, flush_, __init__, addClassPair, addGlyphPair, add_subtable_break, equals, build, __init__, add_pos, can_add, equals, build, __init__, canAdd, add, classes, build",
        "Imports: __future__.annotations, collections.namedtuple, collections.OrderedDict, itertools, typing.Dict, typing.Union, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.roundTools.otRound, fontTools.ttLib, fontTools.ttLib.tables.otTables, fontTools.ttLib.tables.otBase.ValueRecord, fontTools.ttLib.tables.otBase.valueRecordFormatDict, fontTools.ttLib.tables.otBase.OTLOffsetOverflowError, fontTools.ttLib.tables.otBase.OTTableWriter, fontTools.ttLib.ttFont.TTFont, fontTools.feaLib.ast.STATNameStatement, fontTools.otlLib.optimize.gpos._compression_level_from_env, fontTools.otlLib.optimize.gpos.compact_lookup, fontTools.otlLib.error.OpenTypeLibError, fontTools.misc.loggingTools.deprecateFunction, functools.reduce, logging, copy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\error.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: OpenTypeLibError",
        "Contains 2 functions: __init__, __str__",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\maxContextCalc.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: maxCtxFont, maxCtxSubtable, maxCtxContextualSubtable, maxCtxContextualRule",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Cluster",
        "Contains 19 functions: _compression_level_from_env, compact, compact_lookup, compact_ext_lookup, compact_pair_pos, compact_class_pairs, is_really_zero, _getClassRanges, _classDef_bytes, cluster_pairs_by_class2_coverage_custom_cost, indices, column_indices, width, cost, coverage_bytes, classDef1_bytes, classDef2_bytes, make_cluster, merge",
        "Imports: logging, os, collections.defaultdict, collections.namedtuple, dataclasses.dataclass, functools.cached_property, functools.reduce, itertools.chain, math.log2, typing.DefaultDict, typing.Dict, typing.Iterable, typing.List, typing.Sequence, typing.Tuple, fontTools.config.OPTIONS, fontTools.misc.intTools.bit_count, fontTools.misc.intTools.bit_indices, fontTools.ttLib.TTFont, fontTools.ttLib.tables.otBase, fontTools.ttLib.tables.otTables, fontTools.otlLib.builder.buildPairPosClassesSubtable, warnings"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: main",
        "Imports: argparse.RawTextHelpFormatter, fontTools.otlLib.optimize.gpos.COMPRESSION_LEVEL, fontTools.otlLib.optimize.gpos.compact, fontTools.ttLib.TTFont, argparse.ArgumentParser, fontTools.configLogger, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, fontTools.otlLib.optimize.main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\areaPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AreaPen",
        "Contains 7 functions: __init__, _moveTo, _lineTo, _qCurveToOne, _curveToOne, _closePath, _endPath",
        "Imports: fontTools.pens.basePen.BasePen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\basePen.py": {
      "entityType": "file",
      "observations": [
        "Contains 9 classes: PenError, OpenContourError, AbstractPen, NullPen, LoggingPen, MissingComponentError, DecomposingPen, BasePen, _TestPen",
        "Contains 39 functions: decomposeSuperBezierSegment, decomposeQuadraticSegment, moveTo, lineTo, curveTo, qCurveTo, closePath, endPath, addComponent, addVarComponent, moveTo, lineTo, curveTo, qCurveTo, closePath, endPath, addComponent, addVarComponent, __init__, addComponent, addVarComponent, __init__, _moveTo, _lineTo, _curveToOne, _closePath, _endPath, _qCurveToOne, _getCurrentPoint, closePath, endPath, moveTo, lineTo, curveTo, qCurveTo, _moveTo, _lineTo, _curveToOne, _closePath",
        "Imports: typing.Tuple, typing.Dict, fontTools.misc.loggingTools.LogMixin, fontTools.misc.transform.DecomposedTransform, fontTools.misc.transform.Identity, fontTools.pens.transformPen.TransformPen, fontTools.pens.reverseContourPen.ReverseContourPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\boundsPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: ControlBoundsPen, BoundsPen",
        "Contains 9 functions: __init__, init, _moveTo, _addMoveTo, _lineTo, _curveToOne, _qCurveToOne, _curveToOne, _qCurveToOne",
        "Imports: fontTools.misc.arrayTools.updateBounds, fontTools.misc.arrayTools.pointInRect, fontTools.misc.arrayTools.unionRect, fontTools.misc.bezierTools.calcCubicBounds, fontTools.misc.bezierTools.calcQuadraticBounds, fontTools.pens.basePen.BasePen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cairoPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: CairoPen",
        "Contains 5 functions: __init__, _moveTo, _lineTo, _curveToOne, _closePath",
        "Imports: fontTools.pens.basePen.BasePen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cocoaPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: CocoaPen",
        "Contains 5 functions: __init__, _moveTo, _lineTo, _curveToOne, _closePath",
        "Imports: fontTools.pens.basePen.BasePen, AppKit.NSBezierPath"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Cu2QuPen, Cu2QuPointPen, Cu2QuMultiPen",
        "Contains 20 functions: __init__, _convert_curve, curveTo, __init__, _flushContour, _split_super_bezier_segments, _drawPoints, addComponent, __init__, _check_contour_is_open, _check_contour_is_closed, _add_moveTo, moveTo, lineTo, qCurveTo, _curves_to_quadratic, curveTo, closePath, endPath, addComponent",
        "Imports: operator, fontTools.cu2qu.curve_to_quadratic, fontTools.cu2qu.curves_to_quadratic, fontTools.pens.basePen.decomposeSuperBezierSegment, fontTools.pens.filterPen.FilterPen, fontTools.pens.reverseContourPen.ReverseContourPen, fontTools.pens.pointPen.BasePointToSegmentPen, fontTools.pens.pointPen.ReverseContourPointPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\explicitClosingLinePen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ExplicitClosingLinePen",
        "Contains 1 functions: filterContour",
        "Imports: fontTools.pens.filterPen.ContourFilterPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\filterPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 11 classes: _PassThruComponentsMixin, FilterPen, ContourFilterPen, FilterPointPen, _DecomposingFilterMixinBase, _DecomposingFilterPenMixin, _DecomposingFilterPointPenMixin, DecomposingFilterPen, DecomposingFilterPointPen, ContourFilterPointPen, OnCurveFirstPointPen",
        "Contains 27 functions: addComponent, __init__, moveTo, lineTo, curveTo, qCurveTo, closePath, endPath, __init__, closePath, endPath, _flushContour, filterContour, __init__, beginPath, endPath, addPoint, addComponent, __init__, __init__, __init__, beginPath, endPath, _flushContour, filterContour, addPoint, filterContour",
        "Imports: __future__.annotations, fontTools.pens.basePen.AbstractPen, fontTools.pens.basePen.DecomposingPen, fontTools.pens.pointPen.AbstractPointPen, fontTools.pens.pointPen.DecomposingPointPen, fontTools.pens.pointPen.ReverseFlipped, fontTools.pens.recordingPen.RecordingPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: FreeTypePen",
        "Contains 12 functions: __init__, outline, buffer, array, show, image, bbox, cbox, _moveTo, _lineTo, _curveToOne, _qCurveToOne",
        "Imports: os, ctypes, platform, subprocess, collections, math, freetype, freetype.raw.FT_Outline_Get_Bitmap, freetype.raw.FT_Outline_Get_BBox, freetype.raw.FT_Outline_Get_CBox, freetype.ft_types.FT_Pos, freetype.ft_structs.FT_Vector, freetype.ft_structs.FT_BBox, freetype.ft_structs.FT_Bitmap, freetype.ft_structs.FT_Outline, freetype.ft_enums.FT_OUTLINE_NONE, freetype.ft_enums.FT_OUTLINE_EVEN_ODD_FILL, freetype.ft_enums.FT_PIXEL_MODE_GRAY, freetype.ft_enums.FT_CURVE_TAG_ON, freetype.ft_enums.FT_CURVE_TAG_CONIC, freetype.ft_enums.FT_CURVE_TAG_CUBIC, freetype.ft_errors.FT_Exception, fontTools.pens.basePen.BasePen, fontTools.pens.basePen.PenError, fontTools.misc.roundTools.otRound, fontTools.misc.transform.Transform, numpy, matplotlib.pyplot, PIL.Image"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\hashPointPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: HashPointPen",
        "Contains 6 functions: __init__, hash, beginPath, endPath, addPoint, addComponent",
        "Imports: hashlib, fontTools.pens.basePen.MissingComponentError, fontTools.pens.pointPen.AbstractPointPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\momentsPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MomentsPen",
        "Contains 7 functions: __init__, _moveTo, _closePath, _endPath, _lineTo, _qCurveToOne, _curveToOne",
        "Imports: fontTools.pens.basePen.BasePen, fontTools.pens.basePen.OpenContourError, cython, fontTools.misc.symfont.x, fontTools.misc.symfont.y, fontTools.misc.symfont.printGreenPen, fontTools.misc.cython"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\perimeterPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: PerimeterPen",
        "Contains 11 functions: _distance, __init__, _moveTo, _closePath, _lineTo, _addQuadraticExact, _addQuadraticQuadrature, _qCurveToOne, _addCubicRecursive, _addCubicQuadrature, _curveToOne",
        "Imports: fontTools.pens.basePen.BasePen, fontTools.misc.bezierTools.approximateQuadraticArcLengthC, fontTools.misc.bezierTools.calcQuadraticArcLengthC, fontTools.misc.bezierTools.approximateCubicArcLengthC, fontTools.misc.bezierTools.calcCubicArcLengthC, math"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointInsidePen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: PointInsidePen",
        "Contains 11 functions: __init__, setTestPoint, getWinding, getResult, _addIntersection, _moveTo, _lineTo, _curveToOne, _qCurveToOne_unfinished, _closePath, _endPath",
        "Imports: fontTools.pens.basePen.BasePen, fontTools.misc.bezierTools.solveQuadratic, fontTools.misc.bezierTools.solveCubic"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: ReverseFlipped, AbstractPointPen, BasePointToSegmentPen, PointToSegmentPen, SegmentToPointPen, GuessSmoothPointPen, ReverseContourPointPen, DecomposingPointPen",
        "Contains 37 functions: beginPath, endPath, addPoint, addComponent, addVarComponent, __init__, beginPath, _flushContour, endPath, addPoint, __init__, _flushContour, addComponent, __init__, _flushContour, moveTo, lineTo, curveTo, qCurveTo, closePath, endPath, addComponent, __init__, _flushContour, beginPath, endPath, addPoint, addComponent, addVarComponent, __init__, _flushContour, beginPath, endPath, addPoint, addComponent, __init__, addComponent",
        "Imports: __future__.annotations, math, typing.Any, typing.Dict, typing.List, typing.Optional, typing.Tuple, fontTools.misc.enumTools.StrEnum, fontTools.misc.loggingTools.LogMixin, fontTools.misc.transform.DecomposedTransform, fontTools.misc.transform.Identity, fontTools.pens.basePen.AbstractPen, fontTools.pens.basePen.MissingComponentError, fontTools.pens.basePen.PenError, fontTools.pens.transformPen.TransformPointPen, fontTools.pens.filterPen.OnCurveFirstPointPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\qtPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: QtPen",
        "Contains 6 functions: __init__, _moveTo, _lineTo, _curveToOne, _qCurveToOne, _closePath",
        "Imports: fontTools.pens.basePen.BasePen, PyQt5.QtGui.QPainterPath"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\qu2cuPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Qu2CuPen",
        "Contains 3 functions: __init__, _quadratics_to_curve, filterContour",
        "Imports: fontTools.qu2cu.quadratic_to_curves, fontTools.pens.filterPen.ContourFilterPen, fontTools.pens.reverseContourPen.ReverseContourPen, math"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\quartzPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: QuartzPen",
        "Contains 6 functions: __init__, _moveTo, _lineTo, _curveToOne, _qCurveToOne, _closePath",
        "Imports: fontTools.pens.basePen.BasePen, Quartz.CoreGraphics.CGPathCreateMutable, Quartz.CoreGraphics.CGPathMoveToPoint, Quartz.CoreGraphics.CGPathAddLineToPoint, Quartz.CoreGraphics.CGPathAddCurveToPoint, Quartz.CoreGraphics.CGPathAddQuadCurveToPoint, Quartz.CoreGraphics.CGPathCloseSubpath"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\recordingPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: RecordingPen, DecomposingRecordingPen, RecordingPointPen, DecomposingRecordingPointPen",
        "Contains 19 functions: replayRecording, lerpRecordings, __init__, moveTo, lineTo, qCurveTo, curveTo, closePath, endPath, addComponent, addVarComponent, replay, __init__, beginPath, endPath, addPoint, addComponent, addVarComponent, replay",
        "Imports: fontTools.pens.basePen.AbstractPen, fontTools.pens.basePen.DecomposingPen, fontTools.pens.pointPen.AbstractPointPen, fontTools.pens.pointPen.DecomposingPointPen, pprint.pprint"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ReportLabPen",
        "Contains 5 functions: __init__, _moveTo, _lineTo, _curveToOne, _closePath",
        "Imports: fontTools.pens.basePen.BasePen, reportlab.graphics.shapes.Path, sys, fontTools.ttLib.TTFont, reportlab.lib.colors, reportlab.graphics.renderPM, reportlab.graphics.shapes.Group, reportlab.graphics.shapes.Drawing, reportlab.graphics.shapes.scale"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reverseContourPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ReverseContourPen",
        "Contains 3 functions: reversedContour, __init__, filterContour",
        "Imports: fontTools.misc.arrayTools.pairwise, fontTools.pens.filterPen.ContourFilterPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\roundingPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: RoundingPen, RoundingPointPen",
        "Contains 9 functions: __init__, moveTo, lineTo, curveTo, qCurveTo, addComponent, __init__, addPoint, addComponent",
        "Imports: fontTools.misc.roundTools.noRound, fontTools.misc.roundTools.otRound, fontTools.misc.transform.Transform, fontTools.pens.filterPen.FilterPen, fontTools.pens.filterPen.FilterPointPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: StatisticsBase, StatisticsPen, StatisticsControlPen",
        "Contains 16 functions: _test, main, __init__, _zero, _update, __init__, _closePath, _update, __init__, _moveTo, _lineTo, _qCurveToOne, _curveToOne, _closePath, _endPath, _update",
        "Imports: math.sqrt, math.degrees, math.atan, fontTools.pens.basePen.BasePen, fontTools.pens.basePen.OpenContourError, fontTools.pens.momentsPen.MomentsPen, fontTools.pens.transformPen.TransformPen, fontTools.misc.transform.Scale, argparse, fontTools.ttLib.TTFont, sys, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\svgPathPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SVGPathPen",
        "Contains 11 functions: pointToString, main, __init__, _handleAnchor, _moveTo, _lineTo, _curveToOne, _qCurveToOne, _closePath, _endPath, getCommands",
        "Imports: typing.Callable, fontTools.pens.basePen.BasePen, fontTools.ttLib.TTFont, argparse, sys, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: T2CharStringPen",
        "Contains 8 functions: __init__, _p, _moveTo, _lineTo, _curveToOne, _closePath, _endPath, getCharString",
        "Imports: __future__.annotations, typing.Any, typing.Dict, typing.List, typing.Tuple, fontTools.cffLib.specializer.commandsToProgram, fontTools.cffLib.specializer.specializeCommands, fontTools.misc.psCharStrings.T2CharString, fontTools.misc.roundTools.otRound, fontTools.misc.roundTools.roundFunc, fontTools.pens.basePen.BasePen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\teePen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TeePen",
        "Contains 8 functions: __init__, moveTo, lineTo, qCurveTo, curveTo, closePath, endPath, addComponent",
        "Imports: fontTools.pens.basePen.AbstractPen, fontTools.pens.basePen._TestPen"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\transformPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TransformPen, TransformPointPen",
        "Contains 12 functions: __init__, moveTo, lineTo, curveTo, qCurveTo, _transformPoints, closePath, endPath, addComponent, __init__, addPoint, addComponent",
        "Imports: fontTools.pens.filterPen.FilterPen, fontTools.pens.filterPen.FilterPointPen, fontTools.pens.basePen._TestPen, fontTools.misc.transform.Transform, fontTools.misc.transform.Transform"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: _TTGlyphBasePen, TTGlyphPen, TTGlyphPointPen",
        "Contains 22 functions: __init__, _decompose, _isClosed, init, addComponent, _buildComponents, glyph, __init__, _addPoint, _popPoint, _isClosed, lineTo, moveTo, curveTo, qCurveTo, closePath, endPath, init, _isClosed, beginPath, endPath, addPoint",
        "Imports: array.array, typing.Any, typing.Callable, typing.Dict, typing.Optional, typing.Tuple, fontTools.misc.fixedTools.MAX_F2DOT14, fontTools.misc.fixedTools.floatToFixedToFloat, fontTools.misc.loggingTools.LogMixin, fontTools.pens.pointPen.AbstractPointPen, fontTools.misc.roundTools.otRound, fontTools.pens.basePen.LoggingPen, fontTools.pens.basePen.PenError, fontTools.pens.transformPen.TransformPen, fontTools.pens.transformPen.TransformPointPen, fontTools.ttLib.tables.ttProgram, fontTools.ttLib.tables._g_l_y_f.flagOnCurve, fontTools.ttLib.tables._g_l_y_f.flagCubic, fontTools.ttLib.tables._g_l_y_f.Glyph, fontTools.ttLib.tables._g_l_y_f.GlyphComponent, fontTools.ttLib.tables._g_l_y_f.GlyphCoordinates, fontTools.ttLib.tables._g_l_y_f.dropImpliedOnCurvePoints, math"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\wxPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: WxPen",
        "Contains 6 functions: __init__, _moveTo, _lineTo, _curveToOne, _qCurveToOne, _closePath",
        "Imports: fontTools.pens.basePen.BasePen, wx"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\benchmark.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 6 functions: generate_curves, setup_quadratic_to_curves, run_benchmark, main, wrapper, wrapped",
        "Imports: qu2cu.*, fontTools.cu2qu.curve_to_quadratic, random, timeit"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: _font_to_cubic, _main",
        "Imports: os, argparse, logging, fontTools.misc.cliTools.makeOutputFileName, fontTools.ttLib.TTFont, fontTools.pens.qu2cuPen.Qu2CuPen, fontTools.pens.ttGlyphPen.TTGlyphPen, fontTools"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 7 functions: cubic_farthest_fit_inside, elevate_quadratic, merge_curves, add_implicit_on_curves, quadratic_to_curves, spline_to_curves, main",
        "Imports: fontTools.misc.bezierTools.splitCubicAtTC, collections.namedtuple, math, typing.List, typing.Tuple, typing.Union, cython, fontTools.cu2qu.benchmark.generate_curve, fontTools.cu2qu.curve_to_quadratic, fontTools.misc.cython"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: qu2cu.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, cli._main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _ClosureGlyphsT2Decompiler",
        "Contains 10 functions: closure_glyphs, _empty_charstring, prune_pre_subset, subset_glyphs, prune_post_subset, desubroutinize, remove_hints, remove_unused_subroutines, __init__, op_endchar",
        "Imports: fontTools.misc.psCharStrings, fontTools.ttLib, fontTools.pens.basePen.NullPen, fontTools.misc.roundTools.otRound, fontTools.misc.loggingTools.deprecateFunction, fontTools.subset.util._add_method, fontTools.subset.util._uniq_sort, fontTools.encodings.StandardEncoding.StandardEncoding"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 11 functions: xpath, group_elements_by_id, parse_css_declarations, iter_referenced_ids, closure_element_ids, subset_elements, remap_glyph_ids, href_local_target, update_glyph_href_links, ranges, subset_glyphs",
        "Imports: __future__.annotations, re, functools.lru_cache, itertools.chain, itertools.count, typing.Dict, typing.Iterable, typing.Iterator, typing.List, typing.Optional, typing.Set, typing.Tuple, fontTools.ttLib, fontTools.subset.util._add_method, fontTools.ttLib.tables.S_V_G_.SVGDocument, lxml.etree"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\util.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: _add_method, _uniq_sort, wrapper",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: Options, Subsetter, ContextHelper, OptionError, UnknownOptionError, SubsettingError, MissingGlyphsSubsettingError, MissingUnicodesSubsettingError",
        "Contains 179 functions: _log_glyphs, _dict_subset, _list_subset, intersect, intersect_glyphs, subset, remap, intersect, intersect_class, subset, remap, closure_glyphs, subset_glyphs, closure_glyphs, subset_glyphs, closure_glyphs, subset_glyphs, closure_glyphs, subset_glyphs, closure_glyphs, subset_glyphs, is_hinting, prune_hints, subset_glyphs, prune_post_subset, subset_glyphs, prune_post_subset, subset_glyphs, prune_hints, prune_post_subset, subset_glyphs, prune_post_subset, subset_glyphs, prune_post_subset, subset_glyphs, prune_post_subset, subset_lookups, collect_lookups, prune_post_subset, may_have_non_1to1, may_have_non_1to1, __subset_classify_context, closure_glyphs, subset_glyphs, subset_lookups, collect_lookups, closure_glyphs, may_have_non_1to1, subset_glyphs, prune_post_subset, subset_lookups, collect_lookups, closure_glyphs, subset_glyphs, prune_post_subset, subset_lookups, collect_lookups, may_have_non_1to1, subset_glyphs, prune_post_subset, subset_lookups, neuter_lookups, closure_lookups, subset_lookups, subset_lookups, collect_lookups, subset_features, subset_lookups, subset_lookups, collect_lookups, subset_features, prune_features, subset_features, prune_features, subset_features, prune_features, collect_features, subset_features, prune_features, collect_features, subset_features, prune_features, collect_features, subset_glyphs, subset_glyphs, subset_glyphs, closure_glyphs, subset_glyphs, retain_empty_scripts, subset_lookups, neuter_lookups, prune_lookups, subset_feature_tags, subset_script_tags, prune_features, remap_duplicate_features, prune_pre_subset, remove_redundant_langsys, prune_post_subset, subset_glyphs, _pruneGDEF, prune_post_subset, prune_pre_subset, subset_glyphs, subset_glyphs, subset_glyphs, subset_glyphs, subset_glyphs, closure_glyphs, subset_glyphs, subset_glyphs, prune_pre_subset, subset_glyphs, _remap_index_map, subset_glyphs, subset_glyphs, subset_glyphs, subset_glyphs, prune_pre_subset, subset_glyphs, subset_glyphs, _paint_glyph_names, closure_glyphs, subset_glyphs, prune_post_subset, closure_glyphs, closure_glyphs, subset_glyphs, closure_glyphs, prune_post_subset, closure_glyphs, subset_glyphs, subset_glyphs, subset_glyphs, subset_glyphs, subset_glyphs, subset_glyphs, remapComponentsFast, closure_glyphs, prune_pre_subset, subset_glyphs, prune_post_subset, closure_glyphs, prune_pre_subset, subset_glyphs, prune_pre_subset, prune_pre_subset, prune_post_subset, _remap_select_name_ids, prune_post_subset, load_font, save_font, parse_unicodes, parse_gids, parse_glyphs, usage, main, callback, collect_colors_by_index, __init__, set, parse_opts, __init__, populate, _prune_pre_subset, _closure_glyphs, _subset_glyphs, _prune_post_subset, _sort_tables, subset, __init__, SetRuleData, ChainSetRuleData, SetContextData, SetChainContextData, SetRuleData, ChainSetRuleData, SetRuleData, ChainSetRuleData",
        "Imports: __future__.annotations, fontTools.config, fontTools.misc.roundTools.otRound, fontTools.ttLib, fontTools.ttLib.tables.otTables, fontTools.ttLib.tables.otBase.USE_HARFBUZZ_REPACKER, fontTools.otlLib.maxContextCalc.maxCtxFont, fontTools.pens.basePen.NullPen, fontTools.misc.loggingTools.Timer, fontTools.misc.cliTools.makeOutputFileName, fontTools.subset.util._add_method, fontTools.subset.util._uniq_sort, fontTools.subset.cff.*, fontTools.subset.svg.*, fontTools.varLib.varStore, fontTools.varLib.multiVarStore, fontTools.ttLib.tables._n_a_m_e.NameRecordVisitor, fontTools.ttLib.tables._n_a_m_e.makeName, fontTools.unicodedata.mirrored, sys, struct, array, logging, collections.Counter, collections.defaultdict, functools.reduce, types.MethodType, fontTools.colorLib.unbuilder.unbuildColrV1, fontTools.colorLib.builder.buildColrV1, fontTools.colorLib.builder.populateCOLRv0, re, os.path.splitext, fontTools.configLogger, fontTools.ttLib.sfnt, os"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, fontTools.subset.main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: path.SVGPath, path.parse_path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: EllipticalArc",
        "Contains 5 functions: _map_point, __init__, _parametrize, _decompose_to_cubic_curves, draw",
        "Imports: fontTools.misc.transform.Identity, fontTools.misc.transform.Scale, math.atan2, math.ceil, math.cos, math.fabs, math.isfinite, math.pi, math.radians, math.sin, math.sqrt, math.tan"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\parser.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: _tokenize_path, _tokenize_arc_arguments, parse_path",
        "Imports: arc.EllipticalArc, re"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\shapes.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: PathBuilder",
        "Contains 30 functions: _prefer_non_zero, _ntos, _strip_xml_ns, _transform, __init__, _start_path, _end_path, _add, _move, M, m, _arc, A, a, _vhline, H, h, V, v, _line, L, l, _parse_line, _parse_rect, _parse_path, _parse_polygon, _parse_polyline, _parse_circle, _parse_ellipse, add_path_from_element",
        "Imports: re"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SVGPath",
        "Contains 3 functions: __init__, fromstring, draw",
        "Imports: fontTools.pens.transformPen.TransformPen, fontTools.misc.etree, fontTools.misc.textTools.tostr, parser.parse_path, shapes.PathBuilder"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: T1Error, T1Font",
        "Contains 25 functions: read, write, readLWFN, readPFB, readOther, writeLWFN, writePFB, writeOther, isHex, decryptType1, findEncryptedChunks, deHexString, assertType1, longToString, stringToLong, __init__, saveAs, getData, getGlyphSet, __getitem__, parse, createData, encode_eexec, _make_lines, _tobytes",
        "Imports: fontTools, fontTools.misc.eexec, fontTools.misc.macCreatorType.getMacCreatorAndType, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.tobytes, fontTools.misc.psOperators._type1_pre_eexec_order, fontTools.misc.psOperators._type1_fontinfo_order, fontTools.misc.psOperators._type1_post_eexec_order, fontTools.encodings.StandardEncoding.StandardEncoding, os, re, fontTools.misc.macRes.ResourceReader, Carbon.Res, fontTools.misc.psLib, fontTools.misc.psCharStrings, Res"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\macUtils.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SFNTResourceReader",
        "Contains 3 functions: getSFNTResIndices, openTTFonts, __init__",
        "Imports: io.BytesIO, fontTools.misc.macRes.ResourceReader, fontTools.misc.macRes.ResourceError, fontTools.ttLib, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: RemoveOverlapsError",
        "Contains 15 functions: skPathFromGlyph, skPathFromGlyphComponent, componentsOverlap, ttfGlyphFromSkPath, _charString_from_SkPath, _round_path, _simplify, _same_path, removeTTGlyphOverlaps, _remove_glyf_overlaps, _remove_charstring_overlaps, _remove_cff_overlaps, removeOverlaps, main, _get_nth_component_path",
        "Imports: itertools, logging, typing.Callable, typing.Iterable, typing.Optional, typing.Mapping, fontTools.cffLib.CFFFontSet, fontTools.ttLib.ttFont, fontTools.ttLib.tables._g_l_y_f, fontTools.ttLib.tables._h_m_t_x, fontTools.misc.psCharStrings.T2CharString, fontTools.misc.roundTools.otRound, fontTools.misc.roundTools.noRound, fontTools.pens.ttGlyphPen.TTGlyphPen, fontTools.pens.t2CharStringPen.T2CharStringPen, pathops, argparse"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: ReorderRule, ReorderCoverage, ReorderList",
        "Contains 8 functions: _sort_by_gid, _get_dotted_attr, _bfs_base_table, _traverse_ot_data, reorderGlyphs, apply, apply, apply",
        "Imports: fontTools.ttLib, fontTools.ttLib.tables.otBase, fontTools.ttLib.tables.otTables, abc.ABC, abc.abstractmethod, dataclasses.dataclass, collections.deque, typing.Optional, typing.Any, typing.Callable, typing.Deque, typing.Iterable, typing.List, typing.Tuple"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\scaleUpem.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ScalerVisitor",
        "Contains 17 functions: visit, visit, visit, visit, visit, visit, visit, _cff_scale, visit, visit, _setup_scale_paint, visit, visit, scale_upem, main, __init__, scale",
        "Imports: fontTools.ttLib.ttVisitor.TTVisitor, fontTools.ttLib, fontTools.ttLib.tables.otBase, fontTools.ttLib.tables.otTables, fontTools.cffLib.VarStoreData, fontTools.cffLib.specializer, fontTools.varLib.builder, fontTools.varLib.multiVarStore.OnlineMultiVarStoreBuilder, fontTools.misc.vector.Vector, fontTools.misc.fixedTools.otRound, fontTools.misc.iterTools.batched, fontTools.ttLib.TTFont, fontTools.misc.cliTools.makeOutputFileName, argparse, sys, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\sfnt.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: SFNTReader, SFNTWriter, DirectoryEntry, SFNTDirectoryEntry, WOFFDirectoryEntry, WOFFFlavorData",
        "Contains 36 functions: compress, calcChecksum, readTTCHeader, writeTTCHeader, __new__, __init__, has_key, keys, __getitem__, __delitem__, close, __getstate__, __setstate__, __new__, __init__, setEntry, __setitem__, __getitem__, close, _calcMasterChecksum, writeMasterChecksum, reordersTables, __init__, fromFile, fromString, toString, __repr__, loadData, saveData, decodeData, encodeData, __init__, decodeData, encodeData, __init__, _decompress",
        "Imports: io.BytesIO, types.SimpleNamespace, fontTools.misc.textTools.Tag, fontTools.misc.sstruct, fontTools.ttLib.TTLibError, fontTools.ttLib.TTLibFileIsCollectionError, struct, collections.OrderedDict, logging, sys, doctest, zlib.compress, zopfli.zlib.compress, zlib, zlib, fontTools.ttLib.getSearchRange, fontTools.ttLib.getSearchRange, fontTools.ttLib.woff2.WOFF2Reader, fontTools.ttLib.woff2.WOFF2Writer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\standardGlyphOrder.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\ttCollection.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TTCollection",
        "Contains 11 functions: __init__, __enter__, __exit__, close, save, saveXML, __getitem__, __setitem__, __delitem__, __len__, __iter__",
        "Imports: fontTools.ttLib.ttFont.TTFont, fontTools.ttLib.sfnt.readTTCHeader, fontTools.ttLib.sfnt.writeTTCHeader, io.BytesIO, struct, logging, fontTools.misc.xmlWriter, fontTools.version"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\ttFont.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TTFont, GlyphOrder",
        "Contains 57 functions: getTableModule, registerCustomTableClass, unregisterCustomTableClass, getCustomTableClass, getTableClass, getClassTag, newTable, _escapechar, tagToIdentifier, identifierToTag, tagToXML, xmlToTag, sortedTagList, reorderFontTables, maxPowerOfTwo, getSearchRange, __init__, __enter__, __exit__, close, save, _save, saveXML, _saveXML, _tableToXML, importXML, isLoaded, has_key, keys, ensureDecompiled, __len__, __getitem__, _readTable, __setitem__, __delitem__, get, setGlyphOrder, getGlyphOrder, _getGlyphNamesFromCmap, _makeGlyphName, getGlyphNames, getGlyphNames2, getGlyphName, getGlyphNameMany, getGlyphID, getGlyphIDMany, getReverseGlyphMap, _buildReverseGlyphOrderDict, _writeTable, getTableData, getGlyphSet, normalizeLocation, getBestCmap, reorderGlyphs, __init__, toXML, fromXML",
        "Imports: fontTools.config.Config, fontTools.misc.xmlWriter, fontTools.misc.configTools.AbstractConfig, fontTools.misc.textTools.Tag, fontTools.misc.textTools.byteord, fontTools.misc.textTools.tostr, fontTools.misc.loggingTools.deprecateArgument, fontTools.ttLib.TTLibError, fontTools.ttLib.ttGlyphSet._TTGlyph, fontTools.ttLib.ttGlyphSet._TTGlyphSetCFF, fontTools.ttLib.ttGlyphSet._TTGlyphSetGlyf, fontTools.ttLib.ttGlyphSet._TTGlyphSetVARC, fontTools.ttLib.sfnt.SFNTReader, fontTools.ttLib.sfnt.SFNTWriter, io.BytesIO, io.StringIO, io.UnsupportedOperation, os, logging, traceback, .tables, importlib, re, re, re, tables.DefaultTable.DefaultTable, fontTools.misc.xmlReader, fontTools.agl, fontTools.misc.textTools, fontTools.varLib.models.normalizeLocation, reorderGlyphs.reorderGlyphs, tables.DefaultTable.DefaultTable, fontTools.version, .macUtils, tables.DefaultTable.DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\ttGlyphSet.py": {
      "entityType": "file",
      "observations": [
        "Contains 10 classes: _TTGlyphSet, _TTGlyphSetGlyf, _TTGlyphSetCFF, _TTGlyphSetVARC, _TTGlyph, _TTGlyphGlyf, _TTGlyphCFF, _TTGlyphVARC, LerpGlyphSet, LerpGlyph",
        "Contains 35 functions: _evaluateCondition, _setCoordinates, __init__, pushLocation, pushDepth, __contains__, __iter__, __len__, has_key, __init__, __getitem__, __init__, __getitem__, setLocation, pushLocation, __init__, __getitem__, __init__, draw, drawPoints, draw, drawPoints, _getGlyphAndOffset, _getGlyphInstance, draw, _draw, draw, drawPoints, __init__, __getitem__, __contains__, __iter__, __len__, __init__, draw",
        "Imports: abc.ABC, abc.abstractmethod, collections.abc.Mapping, contextlib.contextmanager, copy.copy, copy.deepcopy, types.SimpleNamespace, fontTools.misc.vector.Vector, fontTools.misc.fixedTools.otRound, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.loggingTools.deprecateFunction, fontTools.misc.transform.Transform, fontTools.misc.transform.DecomposedTransform, fontTools.pens.transformPen.TransformPen, fontTools.pens.transformPen.TransformPointPen, fontTools.pens.recordingPen.DecomposingRecordingPen, fontTools.pens.recordingPen.lerpRecordings, fontTools.pens.recordingPen.replayRecording, fontTools.pens.pointPen.SegmentToPointPen, fontTools.varLib.iup.iup_delta, fontTools.ttLib.tables._g_l_y_f.GlyphCoordinates, fontTools.varLib.models.supportScalar, fontTools.ttLib.tables.otTables.VarComponentFlags, fontTools.ttLib.tables.otTables.NO_VARIATION_INDEX, fontTools.varLib.multiVarStore.MultiVarStoreInstancer, fontTools.varLib.varStore.VarStoreInstancer, fontTools.varLib.varStore.VarStoreInstancer, fontTools.varLib.varStore.VarStoreInstancer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\ttVisitor.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TTVisitor",
        "Contains 3 functions: visit, visitAttr, visit",
        "Imports: fontTools.misc.visitor.Visitor, fontTools.ttLib.TTFont"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\woff2.py": {
      "entityType": "file",
      "observations": [
        "Contains 10 classes: WOFF2Reader, WOFF2Writer, WOFF2DirectoryEntry, WOFF2LocaTable, WOFF2GlyfTable, WOFF2HmtxTable, WOFF2FlavorData, _HelpAction, _NoGlyfTransformAction, _HmtxTransformAction",
        "Contains 69 functions: getKnownTagIndex, unpackBase128, base128Size, packBase128, unpack255UShort, pack255UShort, compress, decompress, main, __init__, __getitem__, reconstructTable, _reconstructGlyf, _reconstructLoca, _reconstructHmtx, _decompileTable, __init__, __setitem__, close, _normaliseGlyfAndLoca, _setHeadTransformFlag, _decompileTable, _compileTable, _calcSFNTChecksumsLengthsAndOffsets, _transformTables, transformTable, _calcMasterChecksum, writeMasterChecksum, _calcTotalSize, _calcFlavorDataOffsetsAndSize, _getVersion, _packTableDirectory, _writeFlavorData, reordersTables, fromFile, fromString, toString, transformVersion, transformVersion, transformed, transformed, __init__, compile, __init__, reconstruct, transform, _decodeGlyph, _decodeComponents, _decodeCoordinates, _decodeOverlapSimpleFlag, _decodeInstructions, _decodeBBox, _decodeTriplets, _encodeGlyph, _encodeComponents, _encodeCoordinates, _encodeOverlapSimpleFlag, _encodeInstructions, _encodeBBox, _encodeTriplets, __init__, reconstruct, transform, __init__, _decompress, withSign, __call__, __call__, __call__",
        "Imports: io.BytesIO, sys, array, struct, collections.OrderedDict, fontTools.misc.sstruct, fontTools.misc.arrayTools.calcIntBounds, fontTools.misc.textTools.Tag, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.pad, fontTools.ttLib.TTFont, fontTools.ttLib.TTLibError, fontTools.ttLib.getTableModule, fontTools.ttLib.getTableClass, fontTools.ttLib.getSearchRange, fontTools.ttLib.sfnt.SFNTReader, fontTools.ttLib.sfnt.SFNTWriter, fontTools.ttLib.sfnt.DirectoryEntry, fontTools.ttLib.sfnt.WOFFFlavorData, fontTools.ttLib.sfnt.sfntDirectoryFormat, fontTools.ttLib.sfnt.sfntDirectorySize, fontTools.ttLib.sfnt.SFNTDirectoryEntry, fontTools.ttLib.sfnt.sfntDirectoryEntrySize, fontTools.ttLib.sfnt.calcChecksum, fontTools.ttLib.tables.ttProgram, fontTools.ttLib.tables._g_l_y_f, logging, argparse, fontTools.configLogger, fontTools.ttx.makeOutputFileName, brotlicffi, brotli"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TTLibError, TTLibFileIsCollectionError",
        "Contains 1 functions: debugmsg",
        "Imports: fontTools.config.OPTIONS, fontTools.misc.loggingTools.deprecateFunction, logging, fontTools.ttLib.ttFont.*, fontTools.ttLib.ttCollection.TTCollection, time"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: main",
        "Imports: sys, fontTools.ttLib.OPTIMIZE_FONT_SPEED, fontTools.ttLib.TTLibError, fontTools.ttLib.TTLibFileIsCollectionError, fontTools.ttLib.ttFont.*, fontTools.ttLib.ttCollection.TTCollection, fontTools.configLogger, argparse"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\asciiTable.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: asciiTable",
        "Contains 2 functions: toXML, fromXML",
        "Imports: fontTools.misc.textTools.strjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, .DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\BitmapGlyphMetrics.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: BitmapGlyphMetrics, BigGlyphMetrics, SmallGlyphMetrics",
        "Contains 2 functions: toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\B_A_S_E_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_B_A_S_E_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\C_B_D_T_.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: table_C_B_D_T_, ColorBitmapGlyph, cbdt_bitmap_format_17, cbdt_bitmap_format_18, cbdt_bitmap_format_19",
        "Contains 8 functions: _removeUnsupportedForColor, getImageFormatClass, decompile, compile, decompile, compile, decompile, compile",
        "Imports: fontTools.misc.textTools.bytesjoin, fontTools.misc.sstruct, .E_B_D_T_, BitmapGlyphMetrics.BigGlyphMetrics, BitmapGlyphMetrics.bigGlyphMetricsFormat, BitmapGlyphMetrics.SmallGlyphMetrics, BitmapGlyphMetrics.smallGlyphMetricsFormat, E_B_D_T_.BitmapGlyph, E_B_D_T_.BitmapPlusSmallMetricsMixin, E_B_D_T_.BitmapPlusBigMetricsMixin, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\C_B_L_C_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_C_B_L_C_",
        "Contains 0 functions: ",
        "Imports: .E_B_L_C_"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\C_F_F_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_C_F_F_",
        "Contains 8 functions: __init__, decompile, compile, haveGlyphNames, getGlyphOrder, setGlyphOrder, toXML, fromXML",
        "Imports: io.BytesIO, fontTools.cffLib, .DefaultTable, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\C_F_F__2.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_C_F_F__2",
        "Contains 2 functions: decompile, compile",
        "Imports: io.BytesIO, fontTools.ttLib.tables.C_F_F_.table_C_F_F_"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\C_O_L_R_.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: table_C_O_L_R_, LayerRecord",
        "Contains 12 functions: _decompileColorLayersV0, _toOTTable, decompile, compile, toXML, fromXML, __getitem__, __setitem__, __delitem__, __init__, toXML, fromXML",
        "Imports: fontTools.misc.textTools.safeEval, .DefaultTable, .otTables, fontTools.colorLib.builder.populateCOLRv0, otBase.OTTableReader, .otTables, otBase.OTTableWriter, .otTables"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\C_P_A_L_.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: table_C_P_A_L_, Color",
        "Contains 17 functions: __init__, decompile, _decompileUInt16Array, _decompileUInt32Array, compile, _compilePalette, _compileColorRecords, _compilePaletteTypes, _compilePaletteLabels, _compilePaletteEntryLabels, toXML, fromXML, hex, __repr__, toXML, fromHex, fromRGBA",
        "Imports: fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, .DefaultTable, array, collections.namedtuple, struct, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\DefaultTable.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: DefaultTable",
        "Contains 8 functions: __init__, decompile, compile, toXML, fromXML, __repr__, __eq__, __ne__",
        "Imports: fontTools.misc.textTools.Tag, fontTools.ttLib.getClassTag, fontTools.misc.textTools.readHex, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\D_S_I_G_.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: table_D_S_I_G_, SignatureRecord",
        "Contains 8 functions: b64encode, decompile, compile, toXML, fromXML, __repr__, toXML, fromXML",
        "Imports: fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.strjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.textTools.safeEval, fontTools.misc.sstruct, .DefaultTable, base64"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\D__e_b_g.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_D__e_b_g",
        "Contains 5 functions: __init__, decompile, compile, toXML, fromXML",
        "Imports: json, textwrap.indent, .DefaultTable, fontTools.misc.textTools.tostr"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\E_B_D_T_.py": {
      "entityType": "file",
      "observations": [
        "Contains 15 classes: table_E_B_D_T_, EbdtComponent, BitmapGlyph, BitAlignedBitmapMixin, ByteAlignedBitmapMixin, ebdt_bitmap_format_1, ebdt_bitmap_format_2, ebdt_bitmap_format_5, ebdt_bitmap_format_6, ebdt_bitmap_format_7, ComponentBitmapGlyph, ebdt_bitmap_format_8, ebdt_bitmap_format_9, memodict, BitmapPlusMetricsMixin",
        "Contains 55 functions: _data2binary, _binary2data, _memoize, _reverseBytes, _writeRawImageData, _readRawImageData, _writeRowImageData, _readRowImageData, _writeBitwiseImageData, _readBitwiseImageData, _writeExtFileImageData, _readExtFileImageData, _createBitmapPlusMetricsMixin, getImageFormatClass, decompile, compile, toXML, fromXML, toXML, fromXML, __init__, __getattr__, ensureDecompiled, getFormat, toXML, fromXML, writeMetrics, readMetrics, writeData, readData, _getBitRange, getRow, setRows, _getByteRange, getRow, setRows, decompile, compile, decompile, compile, decompile, compile, decompile, compile, decompile, compile, toXML, fromXML, decompile, compile, decompile, compile, __missing__, writeMetrics, readMetrics",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.strjoin, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.readHex, fontTools.misc.textTools.hexStr, fontTools.misc.textTools.deHexStr, BitmapGlyphMetrics.BigGlyphMetrics, BitmapGlyphMetrics.bigGlyphMetricsFormat, BitmapGlyphMetrics.SmallGlyphMetrics, BitmapGlyphMetrics.smallGlyphMetricsFormat, .DefaultTable, itertools, os, struct, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\E_B_L_C_.py": {
      "entityType": "file",
      "observations": [
        "Contains 12 classes: table_E_B_L_C_, Strike, BitmapSizeTable, SbitLineMetrics, EblcIndexSubTable, FixedSizeIndexSubTableMixin, eblc_index_sub_table_1, eblc_index_sub_table_2, eblc_index_sub_table_3, eblc_index_sub_table_4, eblc_index_sub_table_5, OffsetArrayIndexSubTableMixin",
        "Contains 36 functions: _createOffsetArrayIndexSubTableMixin, getIndexFormatClass, decompile, compile, toXML, fromXML, __init__, toXML, fromXML, _getXMLMetricNames, toXML, fromXML, toXML, fromXML, __init__, __getattr__, ensureDecompiled, compile, toXML, fromXML, writeMetrics, readMetrics, padBitmapData, removeSkipGlyphs, writeMetrics, readMetrics, padBitmapData, decompile, compile, decompile, compile, decompile, compile, isValidLocation, decompile, compile",
        "Imports: fontTools.misc.sstruct, .DefaultTable, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, BitmapGlyphMetrics.BigGlyphMetrics, BitmapGlyphMetrics.bigGlyphMetricsFormat, BitmapGlyphMetrics.SmallGlyphMetrics, BitmapGlyphMetrics.smallGlyphMetricsFormat, struct, itertools, collections.deque, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\F_F_T_M_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_F_F_T_M_",
        "Contains 4 functions: decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, fontTools.misc.timeTools.timestampFromString, fontTools.misc.timeTools.timestampToString, .DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: table_F__e_a_t, Feature",
        "Contains 5 functions: __init__, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.textTools.safeEval, .DefaultTable, .grUtils, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\grUtils.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 7 functions: decompress, compress, _entries, entries, bininfo, num2tag, tag2num",
        "Imports: struct, warnings, lz4, lz4.block"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G_D_E_F_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_G_D_E_F_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G_M_A_P_.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: GMAPRecord, table_G_M_A_P_",
        "Contains 9 functions: __init__, toXML, fromXML, compile, __repr__, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.textTools.safeEval, .DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G_P_K_G_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_G_P_K_G_",
        "Contains 4 functions: decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.readHex, .DefaultTable, sys, array"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G_P_O_S_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_G_P_O_S_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G_S_U_B_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_G_S_U_B_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G_V_A_R_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_G_V_A_R_",
        "Contains 0 functions: ",
        "Imports: _g_v_a_r.table__g_v_a_r"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G__l_a_t.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: _Object, _Dict, table_G__l_a_t",
        "Contains 9 functions: __init__, decompile, decompileAttributes12, decompileAttributes3, compile, compileAttributes12, compileAttributes3, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.textTools.safeEval, functools.partial, .DefaultTable, .grUtils, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G__l_o_c.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_G__l_o_c",
        "Contains 9 functions: __init__, decompile, compile, set, toXML, fromXML, __getitem__, __len__, __iter__",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, .DefaultTable, array, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\H_V_A_R_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_H_V_A_R_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\J_S_T_F_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_J_S_T_F_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\L_T_S_H_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_L_T_S_H_",
        "Contains 4 functions: decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.textTools.safeEval, .DefaultTable, struct, array"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\M_A_T_H_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_M_A_T_H_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\M_E_T_A_.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: table_M_E_T_A_, GlyphRecord, StringRecord",
        "Contains 16 functions: getLabelString, mapXMLToUTF8, mapUTF8toXML, decompile, compile, toXML, fromXML, __init__, toXML, fromXML, compile, __repr__, toXML, fromXML, compile, __repr__",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.byteord, fontTools.misc.textTools.safeEval, .DefaultTable, pdb, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\M_V_A_R_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_M_V_A_R_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otBase.py": {
      "entityType": "file",
      "observations": [
        "Contains 14 classes: OverflowErrorRecord, OTLOffsetOverflowError, RepackerState, BaseTTXConverter, OTTableReader, OffsetToWriter, OTTableWriter, CountReference, BaseTable, FormatSwitchingBaseTable, UInt8FormatSwitchingBaseTable, ValueRecordFactory, ValueRecord, SubTableEntry",
        "Contains 128 functions: packUInt8, packUShort, packULong, packUInt24, getFormatSwitchingBaseTableClass, getVariableAttrs, _buildDict, __init__, __repr__, __init__, __str__, decompile, compile, tryPackingHarfbuzz, tryPackingFontTools, tryResolveOverflow, toXML, fromXML, ensureDecompiled, __init__, advance, seek, copy, getSubReader, readValue, readArray, readInt8, readInt8Array, readShort, readShortArray, readLong, readLongArray, readUInt8, readUInt8Array, readUShort, readUShortArray, readULong, readULongArray, readUInt24, readUInt24Array, readTag, readData, __setitem__, __getitem__, __contains__, __init__, __eq__, __hash__, __init__, __setitem__, __getitem__, __delitem__, getDataLength, getData, getDataForHarfbuzz, __hash__, __ne__, __eq__, _doneWriting, _gatherTables, _gatherGraphForHarfbuzz, getAllDataUsingHarfbuzz, getAllData, getSubWriter, writeValue, writeArray, writeInt8, writeInt8Array, writeShort, writeShortArray, writeLong, writeLongArray, writeUInt8, writeUInt8Array, writeUShort, writeUShortArray, writeULong, writeULongArray, writeUInt24, writeUInt24Array, writeTag, writeSubTable, writeCountReference, writeStruct, writeData, getOverflowErrorRecord, __init__, setValue, getValue, getCountData, __getattr__, ensureDecompiled, __getstate__, getRecordSize, getConverters, getConverterByName, populateDefaults, decompile, compile, readFormat, writeFormat, toXML, toXML2, fromXML, __ne__, __eq__, iterSubTables, getVariableAttrs, getRecordSize, getConverters, getConverterByName, readFormat, writeFormat, toXML, getVariableAttrs, readFormat, writeFormat, __init__, __len__, readValueRecord, writeValueRecord, __init__, getFormat, getEffectiveFormat, toXML, fromXML, __ne__, __eq__",
        "Imports: fontTools.config.OPTIONS, fontTools.misc.textTools.Tag, fontTools.misc.textTools.bytesjoin, DefaultTable.DefaultTable, enum.IntEnum, sys, array, struct, logging, functools.lru_cache, typing.Iterator, typing.NamedTuple, typing.Optional, typing.Tuple, uharfbuzz, .otTables, otTables.fixLookupOverFlows, .otTables, .otTables, otTables.fixLookupOverFlows, otTables.fixSubTableOverFlows, .otTables"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otConverters.py": {
      "entityType": "file",
      "observations": [
        "Contains 57 classes: BaseConverter, SimpleValue, OptionalValue, IntValue, Long, ULong, Flags32, VarIndex, Short, UShort, Int8, UInt8, UInt24, ComputedInt, ComputedUInt8, ComputedUShort, ComputedULong, Tag, GlyphID, GlyphID32, NameID, STATFlags, FloatValue, DeciPoints, BaseFixedValue, Fixed, F2Dot14, Angle, BiasedAngle, Version, Char64, Struct, StructWithLength, Table, LTable, Table24, SubStruct, SubTable, ExtSubTable, FeatureParams, ValueFormat, ValueRecord, AATLookup, AATLookupWithDataOffset, MorxSubtableConverter, STXHeader, CIDGlyphMap, GlyphCIDMap, DeltaValue, VarIdxMapValue, VarDataValue, TupleValues, CFF2Index, LookupFlag, _UInt8Enum, ExtendMode, CompositeMode",
        "Contains 185 functions: buildConverters, __init__, readArray, getRecordSize, read, writeArray, write, xmlRead, xmlWrite, getVarIndexOffset, toString, fromString, xmlWrite, xmlRead, xmlWrite, xmlRead, fromString, read, readArray, write, writeArray, read, readArray, write, writeArray, toString, read, readArray, write, writeArray, read, readArray, write, writeArray, read, readArray, write, writeArray, read, readArray, write, writeArray, read, write, xmlWrite, read, write, readArray, read, writeArray, write, xmlWrite, xmlWrite, fromString, read, write, read, write, fromInt, toInt, fromString, toString, fromInt, toInt, fromString, toString, read, write, fromString, toString, fromFloat, read, write, getRecordSize, read, write, xmlWrite, xmlRead, __repr__, read, write, readOffset, writeNullOffset, read, write, readOffset, writeNullOffset, readOffset, writeNullOffset, getConverter, xmlWrite, getConverter, xmlWrite, write, getConverter, __init__, read, write, getRecordSize, read, write, xmlWrite, xmlRead, __init__, read, write, writeBinSearchHeader, buildFormat0, writeFormat0, buildFormat2, writeFormat2, buildFormat6, writeFormat6, buildFormat8, writeFormat8, readFormat0, readFormat2, readFormat4, readFormat6, readFormat8, xmlRead, xmlWrite, read, write, xmlRead, xmlWrite, __init__, _setTextDirectionFromCoverageFlags, read, xmlWrite, xmlRead, write, __init__, read, _readTransition, _readLigatures, _countPerGlyphLookups, _readPerGlyphLookups, write, _compileStates, _compilePerGlyphLookups, _compileLigComponents, _compileLigatures, xmlWrite, _xmlWriteLigatures, xmlRead, _xmlReadState, _xmlReadLigComponents, _xmlReadLigatures, read, write, xmlRead, xmlWrite, read, write, xmlRead, xmlWrite, read, write, xmlWrite, xmlRead, read, write, read, write, xmlWrite, xmlRead, read, write, xmlRead, xmlWrite, __init__, read, write, xmlRead, xmlWrite, xmlWrite, read, fromString, toString, getReadArray, get_read_item, get_read_item, read_item, read_item",
        "Imports: fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.fixedTools.ensureVersionIsLong, fontTools.misc.fixedTools.versionToFixed, fontTools.ttLib.tables.TupleVariation.TupleVariation, fontTools.misc.roundTools.nearestMultipleShortestRepr, fontTools.misc.roundTools.otRound, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.textTools.pad, fontTools.misc.textTools.safeEval, fontTools.misc.lazyTools.LazyList, fontTools.ttLib.OPTIMIZE_FONT_SPEED, fontTools.ttLib.getSearchRange, otBase.CountReference, otBase.FormatSwitchingBaseTable, otBase.OTTableReader, otBase.OTTableWriter, otBase.ValueRecordFactory, otTables.lookupTypes, otTables.VarCompositeGlyph, otTables.AATStateTable, otTables.AATState, otTables.AATAction, otTables.ContextualMorphAction, otTables.LigatureMorphAction, otTables.InsertionMorphAction, otTables.MorxSubtable, otTables.ExtendMode, otTables.CompositeMode, otTables.NO_VARIATION_INDEX, itertools.zip_longest, itertools.accumulate, functools.partial, types.SimpleNamespace, re, struct, typing.Optional, logging, otBase.ValueRecord"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otData.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py": {
      "entityType": "file",
      "observations": [
        "Contains 35 classes: VarComponentFlags, VarComponent, VarCompositeGlyph, AATStateTable, AATState, AATAction, RearrangementMorphAction, ContextualMorphAction, LigAction, LigatureMorphAction, InsertionMorphAction, FeatureParams, FeatureParamsSize, FeatureParamsStylisticSet, FeatureParamsCharacterVariants, Coverage, DeltaSetIndexMap, VarIdxMap, VarRegionList, SingleSubst, MultipleSubst, ClassDef, AlternateSubst, LigatureSubst, COLR, LookupList, BaseGlyphRecordArray, BaseGlyphList, ClipBoxFormat, ClipBox, ClipList, ExtendMode, CompositeMode, PaintFormat, Paint",
        "Contains 135 functions: _read_uint32var, _write_uint32var, fixLookupOverFlows, splitMultipleSubst, splitAlternateSubst, splitLigatureSubst, splitPairPos, splitMarkBasePos, fixSubTableOverFlows, _buildClasses, _getGlyphsFromCoverageTable, __init__, populateDefaults, decompile, compile, toXML, fromXML, applyTransformDeltas, __eq__, __ne__, __init__, decompile, compile, toXML, fromXML, __init__, __init__, compileActions, _writeFlagsToXML, _setFlag, __init__, compile, decompile, toXML, fromXML, __init__, compile, decompile, toXML, fromXML, __init__, __init__, compile, decompile, compileActions, compileLigActions, _decompileLigActions, fromXML, toXML, __init__, compile, decompile, _decompileInsertionAction, toXML, fromXML, compileActions, compile, toXML, populateDefaults, postRead, preWrite, toXML2, fromXML, populateDefaults, postRead, getEntryFormat, preWrite, toXML2, fromXML, __getitem__, populateDefaults, postRead, preWrite, toXML2, fromXML, __getitem__, preWrite, populateDefaults, postRead, preWrite, toXML2, fromXML, populateDefaults, postRead, preWrite, toXML2, fromXML, makeSequence_, populateDefaults, postRead, _getClassRanges, preWrite, toXML2, fromXML, populateDefaults, postRead, preWrite, toXML2, fromXML, populateDefaults, postRead, _getLigatureSortKey, preWrite, toXML2, fromXML, decompile, preWrite, computeClipBoxes, table, toXML2, preWrite, preWrite, is_variable, as_variable, as_tuple, __repr__, populateDefaults, postRead, groups, preWrite, toXML, fromXML, is_variable, as_variable, getFormatName, toXML, iterPaintSubTables, getChildren, traverse, getTransform, computeClipBox, read_transform_component, write_transform_component, write, read_transform_component_delta",
        "Imports: copy, enum.IntEnum, functools.reduce, math.radians, itertools, collections.defaultdict, collections.namedtuple, fontTools.ttLib.OPTIMIZE_FONT_SPEED, fontTools.ttLib.tables.TupleVariation.TupleVariation, fontTools.ttLib.tables.otTraverse.dfs_base_table, fontTools.misc.arrayTools.quantizeRect, fontTools.misc.roundTools.otRound, fontTools.misc.transform.Transform, fontTools.misc.transform.Identity, fontTools.misc.transform.DecomposedTransform, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.pad, fontTools.misc.textTools.safeEval, fontTools.misc.vector.Vector, fontTools.pens.boundsPen.ControlBoundsPen, fontTools.pens.transformPen.TransformPen, otBase.BaseTable, otBase.FormatSwitchingBaseTable, otBase.ValueRecord, otBase.CountReference, otBase.getFormatSwitchingBaseTableClass, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.feaLib.lookupDebugInfo.LookupDebugInfo, fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_INFO_KEY, logging, struct, array, sys, enum.IntFlag, typing.TYPE_CHECKING, typing.Iterator, typing.List, typing.Optional, typing.Set, fontTools.ttLib.ttGlyphSet._TTGlyphSet, re, otData.otData, otConverters.buildConverters, fontTools.ttLib.TTLibError"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTraverse.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SubTablePath",
        "Contains 6 functions: dfs_base_table, bfs_base_table, _traverse_ot_data, __str__, predicate, iter_subtables_fn",
        "Imports: collections.deque, typing.Callable, typing.Deque, typing.Iterable, typing.List, typing.Optional, typing.Tuple, otBase.BaseTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\O_S_2f_2.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Panose, table_O_S_2f_2",
        "Contains 24 functions: _getUnicodeRanges, intersectUnicodeRanges, calcCodePageRanges, __init__, toXML, fromXML, decompile, compile, toXML, fromXML, updateFirstAndLastCharIndex, usMaxContex, usMaxContex, fsFirstCharIndex, fsFirstCharIndex, fsLastCharIndex, fsLastCharIndex, getUnicodeRanges, setUnicodeRanges, recalcUnicodeRanges, getCodePageRanges, setCodePageRanges, recalcCodePageRanges, recalcAvgCharWidth",
        "Imports: fontTools.misc.sstruct, fontTools.misc.roundTools.otRound, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.num2binary, fontTools.misc.textTools.binary2num, fontTools.ttLib.tables.DefaultTable, bisect, logging, doctest, sys, fontTools.ttLib, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\sbixGlyph.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Glyph",
        "Contains 6 functions: __init__, is_reference_type, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.readHex, fontTools.misc.textTools.safeEval, struct, fontTools.ttLib, fontTools.ttLib, fontTools.ttLib, fontTools.ttLib, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\sbixStrike.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Strike",
        "Contains 5 functions: __init__, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, sbixGlyph.Glyph, struct, fontTools.ttLib, fontTools.ttLib, fontTools.ttLib, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\S_I_N_G_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_S_I_N_G_",
        "Contains 6 functions: decompile, decompileUniqueName, compile, compilecompileUniqueName, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.textTools.safeEval, .DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\S_T_A_T_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_S_T_A_T_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\S_V_G_.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: table_S_V_G_, DocumentIndexEntry, SVGDocument",
        "Contains 8 functions: decompile, compile, toXML, fromXML, __init__, __repr__, __getitem__, __len__",
        "Imports: fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.strjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.sstruct, .DefaultTable, collections.abc.Sequence, dataclasses.dataclass, dataclasses.astuple, io.BytesIO, struct, logging, gzip, gzip"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\S__i_l_f.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: _Object, table_S__i_l_f, Silf, Classes, Pass",
        "Contains 28 functions: disassemble, assemble, writecode, readcode, writesimple, getSimple, content_string, wrapline, __init__, decompile, compile, toXML, fromXML, __init__, decompile, compile, toXML, fromXML, __init__, decompile, compile, toXML, fromXML, __init__, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.safeEval, .DefaultTable, .grUtils, array.array, functools.reduce, struct, re, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\S__i_l_l.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_S__i_l_l",
        "Contains 5 functions: __init__, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.textTools.safeEval, .DefaultTable, .grUtils, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\ttProgram.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: tt_instructions_error, Program",
        "Contains 18 functions: bitRepr, _makeDict, _skipWhite, _test, __init__, __str__, __init__, fromBytecode, fromAssembly, getBytecode, getAssembly, toXML, fromXML, _assemble, _disassemble, __bool__, __eq__, __ne__",
        "Imports: __future__.annotations, fontTools.misc.textTools.num2binary, fontTools.misc.textTools.binary2num, fontTools.misc.textTools.readHex, fontTools.misc.textTools.strjoin, array, io.StringIO, typing.List, re, logging, sys, doctest, traceback"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\TupleVariation.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TupleVariation",
        "Contains 35 functions: decompileSharedTuples, compileSharedTuples, compileTupleVariationStore, decompileTupleVariationStore, decompileTupleVariation_, inferRegion_, __init__, __repr__, __eq__, getUsedPoints, hasImpact, toXML, fromXML, compile, compileCoord, compileIntermediateCoord, decompileCoord_, compilePoints, decompilePoints_, compileDeltas, compileDeltaValues_, encodeDeltaRunAsZeroes_, encodeDeltaRunAsBytes_, encodeDeltaRunAsWords_, encodeDeltaRunAsLongs_, decompileDeltas_, getTupleSize_, getCoordWidth, scaleDeltas, roundDeltas, calcInferredDeltas, optimize, __imul__, __iadd__, key",
        "Imports: fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.fixedTools.otRound, fontTools.misc.textTools.safeEval, array, collections.Counter, collections.defaultdict, io, logging, struct, sys, fontTools.varLib.iup.iup_delta, fontTools.varLib.iup.iup_delta_optimize"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I_B_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I_B_",
        "Contains 0 functions: ",
        "Imports: T_S_I_V_.table_T_S_I_V_"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I_C_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I_C_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I_D_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I_D_",
        "Contains 0 functions: ",
        "Imports: T_S_I_V_.table_T_S_I_V_"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I_J_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I_J_",
        "Contains 0 functions: ",
        "Imports: T_S_I_V_.table_T_S_I_V_"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I_P_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I_P_",
        "Contains 0 functions: ",
        "Imports: T_S_I_V_.table_T_S_I_V_"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I_S_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I_S_",
        "Contains 0 functions: ",
        "Imports: T_S_I_V_.table_T_S_I_V_"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I_V_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I_V_",
        "Contains 2 functions: toXML, fromXML",
        "Imports: fontTools.misc.textTools.strjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, .asciiTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I__0.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I__0",
        "Contains 5 functions: fixlongs, decompile, compile, set, toXML",
        "Imports: logging, struct, .DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I__1.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I__1",
        "Contains 4 functions: decompile, compile, toXML, fromXML",
        "Imports: .DefaultTable, fontTools.misc.loggingTools.LogMixin, fontTools.misc.textTools.strjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I__2.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I__2",
        "Contains 0 functions: ",
        "Imports: fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I__3.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I__3",
        "Contains 0 functions: ",
        "Imports: fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_S_I__5.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_S_I__5",
        "Contains 4 functions: decompile, compile, toXML, fromXML",
        "Imports: array, logging, sys, fontTools.misc.textTools.safeEval, .DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\T_T_F_A_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_T_T_F_A_",
        "Contains 0 functions: ",
        "Imports: .asciiTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\V_A_R_C_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_V_A_R_C_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\V_D_M_X_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_V_D_M_X_",
        "Contains 5 functions: decompile, _getOffsets, compile, toXML, fromXML",
        "Imports: .DefaultTable, fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, struct, fontTools.ttLib, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\V_O_R_G_.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: table_V_O_R_G_, VOriginRecord",
        "Contains 10 functions: decompile, compile, toXML, fromXML, __getitem__, __setitem__, __delitem__, __init__, toXML, fromXML",
        "Imports: fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, .DefaultTable, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\V_V_A_R_.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table_V_V_A_R_",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_a_n_k_r.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__a_n_k_r",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_a_v_a_r.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__a_v_a_r",
        "Contains 6 functions: __init__, compile, decompile, toXML, fromXML, renormalizeLocation",
        "Imports: fontTools.misc.sstruct, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, fontTools.misc.roundTools.otRound, fontTools.varLib.models.piecewiseLinearMap, fontTools.varLib.varStore.VarStoreInstancer, fontTools.varLib.varStore.NO_VARIATION_INDEX, fontTools.ttLib.TTLibError, .DefaultTable, .otTables, struct, logging, otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_b_s_l_n.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__b_s_l_n",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_c_i_d_g.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__c_i_d_g",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_c_m_a_p.py": {
      "entityType": "file",
      "observations": [
        "Contains 12 classes: table__c_m_a_p, CmapSubtable, cmap_format_0, SubHeader, cmap_format_2, cmap_format_4, cmap_format_6, cmap_format_12_or_13, cmap_format_12, cmap_format_13, cmap_format_14, cmap_format_unknown",
        "Contains 61 functions: _make_map, splitRange, cvtToUVS, cvtFromUVS, getcmap, getBestCmap, buildReversed, buildReversedMin, decompile, ensureDecompiled, compile, toXML, fromXML, getSubtableClass, newSubtable, __init__, ensureDecompiled, __getattr__, decompileHeader, toXML, getEncoding, isUnicode, isSymbol, _writeCodes, __lt__, decompile, compile, fromXML, __init__, setIDDelta, decompile, compile, fromXML, decompile, compile, fromXML, decompile, compile, fromXML, __init__, decompileHeader, decompile, compile, toXML, fromXML, __init__, _computeGIDs, _IsInSameRun, __init__, _computeGIDs, _IsInSameRun, decompileHeader, decompile, toXML, fromXML, compile, toXML, fromXML, decompileHeader, decompile, compile",
        "Imports: fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.readHex, fontTools.misc.encodingTools.getEncoding, fontTools.ttLib.getSearchRange, fontTools.unicode.Unicode, .DefaultTable, sys, struct, array, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_c_v_a_r.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__c_v_a_r",
        "Contains 5 functions: __init__, compile, decompile, fromXML, toXML",
        "Imports: .DefaultTable, fontTools.misc.sstruct, fontTools.misc.textTools.bytesjoin, fontTools.ttLib.tables.TupleVariation.compileTupleVariationStore, fontTools.ttLib.tables.TupleVariation.decompileTupleVariationStore, fontTools.ttLib.tables.TupleVariation.TupleVariation"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_c_v_t.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__c_v_t",
        "Contains 8 functions: decompile, compile, toXML, fromXML, __len__, __getitem__, __setitem__, __delitem__",
        "Imports: fontTools.misc.textTools.safeEval, .DefaultTable, sys, array"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_f_e_a_t.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__f_e_a_t",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_f_p_g_m.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__f_p_g_m",
        "Contains 5 functions: decompile, compile, toXML, fromXML, __bool__",
        "Imports: .DefaultTable, .ttProgram, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_f_v_a_r.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: table__f_v_a_r, Axis, NamedInstance",
        "Contains 16 functions: __init__, compile, decompile, toXML, fromXML, getAxes, __init__, compile, decompile, toXML, fromXML, __init__, compile, decompile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.textTools.Tag, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, fontTools.ttLib.TTLibError, .DefaultTable, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_g_a_s_p.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__g_a_s_p",
        "Contains 4 functions: decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.textTools.safeEval, .DefaultTable, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_g_c_i_d.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__g_c_i_d",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_g_l_y_f.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: table__g_l_y_f, Glyph, GlyphComponent, GlyphCoordinates",
        "Contains 101 functions: flagBest, flagFits, flagSupports, flagEncodeCoord, flagEncodeCoords, _is_mid_point, dropImpliedOnCurvePoints, decompile, ensureDecompiled, compile, toXML, fromXML, setGlyphOrder, getGlyphName, _buildReverseGlyphOrderDict, getGlyphID, removeHinting, keys, has_key, get, __getitem__, __setitem__, __delitem__, __len__, _getPhantomPoints, _getCoordinatesAndControls, _setCoordinates, _synthesizeVMetrics, getPhantomPoints, getCoordinatesAndControls, setCoordinates, __init__, compact, expand, compile, toXML, fromXML, getCompositeMaxpValues, getMaxpValues, decompileComponents, decompileCoordinates, decompileCoordinatesRaw, compileComponents, compileCoordinates, compileDeltasGreedy, compileDeltasOptimal, compileDeltasForSpeed, recalcBounds, tryRecalcBoundsComposite, isComposite, getCoordinates, getComponentNames, trim, removeHinting, draw, drawPoints, __eq__, __ne__, __init__, getComponentInfo, decompile, compile, toXML, fromXML, __eq__, __ne__, _hasOnlyIntegerTranslate, __init__, array, zeros, copy, __len__, __getitem__, __setitem__, __delitem__, __repr__, append, extend, toInt, calcBounds, calcIntBounds, relativeToAbsolute, absoluteToRelative, translate, scale, transform, __eq__, __ne__, __pos__, __neg__, __round__, __add__, __sub__, __mul__, __truediv__, __rsub__, __iadd__, __isub__, __imul__, __itruediv__, __bool__",
        "Imports: collections.namedtuple, fontTools.misc.sstruct, fontTools.ttLib, fontTools.version, fontTools.misc.transform.DecomposedTransform, fontTools.misc.textTools.tostr, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.pad, fontTools.misc.arrayTools.updateBounds, fontTools.misc.arrayTools.pointInRect, fontTools.misc.bezierTools.calcQuadraticBounds, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.roundTools.noRound, fontTools.misc.roundTools.otRound, fontTools.misc.vector.Vector, numbers.Number, .DefaultTable, .ttProgram, sys, struct, array, logging, math, os, fontTools.misc.xmlWriter, fontTools.misc.filenames.userNameToFileName, fontTools.misc.loggingTools.deprecateFunction, enum.IntFlag, functools.partial, types.SimpleNamespace, typing.Set, doctest, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_g_v_a_r.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__g_v_a_r",
        "Contains 14 functions: compileGlyph_, decompileGlyph_, __init__, compile, compileGlyphs_, decompile, ensureDecompiled, decompileOffsets_, compileOffsets_, toXML, fromXML, getNumPoints_, get_read_item, read_item",
        "Imports: collections.deque, functools.partial, fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, fontTools.misc.lazyTools.LazyDict, fontTools.ttLib.OPTIMIZE_FONT_SPEED, fontTools.ttLib.tables.TupleVariation.TupleVariation, .DefaultTable, array, itertools, logging, struct, sys, fontTools.ttLib.tables.TupleVariation"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_h_d_m_x.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: _GlyphnamedList, table__h_d_m_x",
        "Contains 9 functions: __init__, __getitem__, __len__, __iter__, keys, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.strjoin, .DefaultTable, array, collections.abc.Mapping, fontTools.misc.textTools.safeEval"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_h_e_a_d.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__h_e_a_d",
        "Contains 4 functions: decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.num2binary, fontTools.misc.textTools.binary2num, fontTools.misc.timeTools.timestampFromString, fontTools.misc.timeTools.timestampToString, fontTools.misc.timeTools.timestampNow, fontTools.misc.timeTools.epoch_diff, fontTools.misc.arrayTools.intRect, fontTools.misc.arrayTools.unionRect, .DefaultTable, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_h_h_e_a.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__h_h_e_a",
        "Contains 9 functions: ascender, ascender, descender, descender, decompile, compile, recalc, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, fontTools.misc.fixedTools.ensureVersionIsLong, fontTools.misc.fixedTools.versionToFixed, .DefaultTable, math"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_h_m_t_x.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__h_m_t_x",
        "Contains 7 functions: decompile, compile, toXML, fromXML, __delitem__, __getitem__, __setitem__",
        "Imports: fontTools.misc.roundTools.otRound, fontTools.ttLib, fontTools.misc.textTools.safeEval, .DefaultTable, sys, struct, array, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_k_e_r_n.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: table__k_e_r_n, KernTable_format_0, KernTable_format_unkown",
        "Contains 18 functions: getkern, decompile, compile, toXML, fromXML, __init__, decompile, compile, toXML, fromXML, __getitem__, __setitem__, __delitem__, __init__, decompile, compile, toXML, fromXML",
        "Imports: fontTools.ttLib.getSearchRange, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.readHex, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, .DefaultTable, struct, sys, array, logging, fontTools.ttLib.TTLibError"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_l_c_a_r.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__l_c_a_r",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_l_o_c_a.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__l_o_c_a",
        "Contains 6 functions: decompile, compile, set, toXML, __getitem__, __len__",
        "Imports: .DefaultTable, sys, array, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_l_t_a_g.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__l_t_a_g",
        "Contains 6 functions: __init__, addTag, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.safeEval, .DefaultTable, struct"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_m_a_x_p.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__m_a_x_p",
        "Contains 6 functions: decompile, compile, recalc, testrepr, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, .DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_m_e_t_a.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__m_e_t_a",
        "Contains 5 functions: __init__, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.strjoin, fontTools.misc.textTools.readHex, fontTools.ttLib.TTLibError, .DefaultTable"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_m_o_r_t.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__m_o_r_t",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_m_o_r_x.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__m_o_r_x",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: table__n_a_m_e, NameRecord, NameRecordVisitor",
        "Contains 38 functions: makeName, _makeWindowsName, _makeMacName, visit, visit, visit, visit, visit, __init__, decompile, compile, toXML, fromXML, getName, getDebugName, getFirstDebugName, getBestFamilyName, getBestSubFamilyName, getBestFullName, setName, removeNames, removeUnusedNames, _findUnusedNameID, findMultilingualName, addMultilingualName, addName, getEncoding, encodingIsUnicodeCompatible, __str__, isUnicode, toUnicode, toBytes, toXML, fromXML, __lt__, __repr__, __init__, isascii",
        "Imports: __future__.annotations, fontTools.misc.sstruct, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.strjoin, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.textTools.safeEval, fontTools.misc.encodingTools.getEncoding, fontTools.ttLib.newTable, fontTools.ttLib.ttVisitor.TTVisitor, fontTools.ttLib, fontTools.ttLib.tables.otTables, fontTools.ttLib.tables.C_P_A_L_, .DefaultTable, struct, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_o_p_b_d.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__o_p_b_d",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_p_o_s_t.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__p_o_s_t",
        "Contains 14 functions: unpackPStrings, packPStrings, decompile, compile, getGlyphOrder, decode_format_1_0, decode_format_2_0, build_psNameMapping, decode_format_3_0, decode_format_4_0, encode_format_2_0, encode_format_4_0, toXML, fromXML",
        "Imports: fontTools.ttLib, fontTools.ttLib.standardGlyphOrder.standardGlyphOrder, fontTools.misc.sstruct, fontTools.misc.textTools.bytechr, fontTools.misc.textTools.byteord, fontTools.misc.textTools.tobytes, fontTools.misc.textTools.tostr, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.readHex, .DefaultTable, sys, struct, array, logging, fontTools.agl, fontTools.agl"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_p_r_e_p.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__p_r_e_p",
        "Contains 0 functions: ",
        "Imports: fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_p_r_o_p.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__p_r_o_p",
        "Contains 0 functions: ",
        "Imports: otBase.BaseTTXConverter"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_s_b_i_x.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: table__s_b_i_x, sbixStrikeOffset",
        "Contains 5 functions: __init__, decompile, compile, toXML, fromXML",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, fontTools.misc.textTools.num2binary, fontTools.misc.textTools.binary2num, .DefaultTable, sbixStrike.Strike, fontTools.ttLib, fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_t_r_a_k.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: table__t_r_a_k, TrackData, TrackTableEntry",
        "Contains 29 functions: compile, decompile, toXML, fromXML, __init__, compile, decompile, toXML, fromXML, sizes, __getitem__, __delitem__, __setitem__, __len__, __iter__, keys, __repr__, __init__, toXML, fromXML, __getitem__, __delitem__, __setitem__, __len__, __iter__, keys, __repr__, __eq__, __ne__",
        "Imports: fontTools.misc.sstruct, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.textTools.bytesjoin, fontTools.misc.textTools.safeEval, fontTools.ttLib.TTLibError, .DefaultTable, struct, collections.abc.MutableMapping"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_v_h_e_a.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__v_h_e_a",
        "Contains 7 functions: decompile, compile, recalc, toXML, fromXML, reserved0, reserved0",
        "Imports: fontTools.misc.sstruct, fontTools.misc.textTools.safeEval, fontTools.misc.fixedTools.ensureVersionIsLong, fontTools.misc.fixedTools.versionToFixed, .DefaultTable, math"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_v_m_t_x.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: table__v_m_t_x",
        "Contains 0 functions: ",
        "Imports: fontTools.ttLib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: _moduleFinderHint",
        "Imports: .B_A_S_E_, .C_B_D_T_, .C_B_L_C_, .C_F_F_, .C_F_F__2, .C_O_L_R_, .C_P_A_L_, .D_S_I_G_, .D__e_b_g, .E_B_D_T_, .E_B_L_C_, .F_F_T_M_, .F__e_a_t, .G_D_E_F_, .G_M_A_P_, .G_P_K_G_, .G_P_O_S_, .G_S_U_B_, .G_V_A_R_, .G__l_a_t, .G__l_o_c, .H_V_A_R_, .J_S_T_F_, .L_T_S_H_, .M_A_T_H_, .M_E_T_A_, .M_V_A_R_, .O_S_2f_2, .S_I_N_G_, .S_T_A_T_, .S_V_G_, .S__i_l_f, .S__i_l_l, .T_S_I_B_, .T_S_I_C_, .T_S_I_D_, .T_S_I_J_, .T_S_I_P_, .T_S_I_S_, .T_S_I_V_, .T_S_I__0, .T_S_I__1, .T_S_I__2, .T_S_I__3, .T_S_I__5, .T_T_F_A_, .V_A_R_C_, .V_D_M_X_, .V_O_R_G_, .V_V_A_R_, ._a_n_k_r, ._a_v_a_r, ._b_s_l_n, ._c_i_d_g, ._c_m_a_p, ._c_v_a_r, ._c_v_t, ._f_e_a_t, ._f_p_g_m, ._f_v_a_r, ._g_a_s_p, ._g_c_i_d, ._g_l_y_f, ._g_v_a_r, ._h_d_m_x, ._h_e_a_d, ._h_h_e_a, ._h_m_t_x, ._k_e_r_n, ._l_c_a_r, ._l_o_c_a, ._l_t_a_g, ._m_a_x_p, ._m_e_t_a, ._m_o_r_t, ._m_o_r_x, ._n_a_m_e, ._o_p_b_d, ._p_o_s_t, ._p_r_e_p, ._p_r_o_p, ._s_b_i_x, ._t_r_a_k, ._v_h_e_a, ._v_m_t_x, doctest, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\converters.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: convertUFO1OrUFO2KerningToUFO3Kerning, findKnownKerningGroups, makeUniqueGroupName, test",
        "Imports: __future__.annotations, typing.Mapping, typing.Any, collections.abc.Container, fontTools.annotations.KerningNested, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\errors.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: UFOLibError, UnsupportedUFOFormat, GlifLibError, UnsupportedGLIFFormat",
        "Contains 1 functions: _add_note",
        "Imports: __future__.annotations"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\etree.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: fontTools.misc.etree.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\filenames.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: NameTranslationError",
        "Contains 3 functions: userNameToFileName, handleClash1, handleClash2",
        "Imports: __future__.annotations, collections.abc.Iterable, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\glifLib.py": {
      "entityType": "file",
      "observations": [
        "Contains 9 classes: GLIFFormatVersion, Glyph, GlyphSet, _DoneParsing, _BaseParser, _FetchUnicodesParser, _FetchImageFileNameParser, _FetchComponentBasesParser, GLIFPointPen",
        "Contains 81 functions: glyphNameToFileName, readGlyphFromString, _writeGlyphToBytes, writeGlyphToString, _writeAdvance, _writeUnicodes, _writeNote, _writeImage, _writeGuidelines, _writeAnchorsFormat1, _writeAnchors, _writeLib, validateLayerInfoVersion3ValueForAttribute, validateLayerInfoVersion3Data, _glifTreeFromFile, _glifTreeFromString, _readGlyphFromTree, _readGlyphFromTreeFormat1, _readGlyphFromTreeFormat2, _readName, _readAdvance, _readNote, _readLib, _readImage, buildOutlineFormat1, _buildAnchorFormat1, _buildOutlineContourFormat1, _buildOutlinePointsFormat1, _buildOutlineComponentFormat1, buildOutlineFormat2, _buildOutlineContourFormat2, _buildOutlinePointsFormat2, _buildOutlineComponentFormat2, _validateAndMassagePointStructures, _relaxedSetattr, _number, _fetchUnicodes, _fetchImageFileName, _fetchComponentBases, default, supported_versions, __init__, draw, drawPoints, __init__, rebuildContents, getReverseContents, writeContents, readLayerInfo, writeLayerInfo, getGLIF, getGLIFModificationTime, readGlyph, writeGlyph, deleteGlyph, keys, has_key, __len__, __getitem__, getUnicodes, getComponentReferences, getImageReferences, close, __enter__, __exit__, __init__, parse, startElementHandler, endElementHandler, __init__, startElementHandler, __init__, startElementHandler, __init__, startElementHandler, endElementHandler, __init__, beginPath, endPath, addPoint, addComponent",
        "Imports: __future__.annotations, logging, collections.OrderedDict, typing.TYPE_CHECKING, typing.Any, typing.Optional, typing.Union, typing.cast, warnings.warn, fontTools.misc.filesystem, fontTools.misc.etree, fontTools.misc.plistlib, fontTools.misc.textTools.tobytes, fontTools.pens.pointPen.AbstractPointPen, fontTools.pens.pointPen.PointToSegmentPen, fontTools.ufoLib.UFOFormatVersion, fontTools.ufoLib._UFOBaseIO, fontTools.ufoLib.errors.GlifLibError, fontTools.ufoLib.filenames.userNameToFileName, fontTools.ufoLib.utils.BaseFormatVersion, fontTools.ufoLib.utils.normalizeFormatVersion, fontTools.ufoLib.utils.numberTypes, fontTools.ufoLib.validators.anchorsValidator, fontTools.ufoLib.validators.colorValidator, fontTools.ufoLib.validators.genericTypeValidator, fontTools.ufoLib.validators.glyphLibValidator, fontTools.ufoLib.validators.guidelinesValidator, fontTools.ufoLib.validators.identifierValidator, fontTools.ufoLib.validators.imageValidator, collections.abc.Callable, collections.abc.Iterable, collections.abc.Set, logging.Logger, fontTools.annotations.ElementType, fontTools.annotations.FormatVersion, fontTools.annotations.FormatVersions, fontTools.annotations.GLIFFormatVersionInput, fontTools.annotations.GlyphNameToFileNameFunc, fontTools.annotations.IntFloat, fontTools.annotations.PathOrFS, fontTools.annotations.UFOFormatVersionInput, fontTools.misc.filesystem._base.FS, doctest, xml.parsers.expat.ParserCreate, fontTools.ufoLib.errors.UnsupportedGLIFFormat, fontTools.ufoLib.errors.UnsupportedGLIFFormat, fontTools.ufoLib.errors.UnsupportedUFOFormat, fontTools.ufoLib.errors.UnsupportedGLIFFormat, fontTools.ufoLib.errors.UnsupportedGLIFFormat"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\kerning.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: lookupKerningValue",
        "Imports: __future__.annotations, typing.Optional, fontTools.annotations.KerningPair, fontTools.annotations.KerningDict, fontTools.annotations.KerningGroups, fontTools.annotations.IntFloat, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\plistlib.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: readPlist, writePlist, readPlistFromString, writePlistToString",
        "Imports: fontTools.misc.plistlib.dump, fontTools.misc.plistlib.dumps, fontTools.misc.plistlib.load, fontTools.misc.plistlib.loads, fontTools.misc.textTools.tobytes, fontTools.ufoLib.utils.deprecated"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\pointPen.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: fontTools.pens.pointPen.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\utils.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: BaseFormatVersion",
        "Contains 11 functions: deprecated, normalizeFormatVersion, deprecated_decorator, __new__, major, minor, _missing_, __str__, default, supported_versions, wrapper",
        "Imports: __future__.annotations, typing.Optional, typing.Type, typing.TypeVar, typing.Union, typing.cast, collections.abc.Callable, enum, functools, warnings, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\validators.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 46 functions: isDictEnough, genericTypeValidator, genericIntListValidator, genericNonNegativeIntValidator, genericNonNegativeNumberValidator, genericDictValidator, fontInfoStyleMapStyleNameValidator, fontInfoOpenTypeGaspRangeRecordsValidator, fontInfoOpenTypeHeadCreatedValidator, fontInfoOpenTypeNameRecordsValidator, fontInfoOpenTypeOS2WeightClassValidator, fontInfoOpenTypeOS2WidthClassValidator, fontInfoVersion2OpenTypeOS2PanoseValidator, fontInfoVersion3OpenTypeOS2PanoseValidator, fontInfoOpenTypeOS2FamilyClassValidator, fontInfoPostscriptBluesValidator, fontInfoPostscriptOtherBluesValidator, fontInfoPostscriptStemsValidator, fontInfoPostscriptWindowsCharacterSetValidator, fontInfoWOFFMetadataUniqueIDValidator, fontInfoWOFFMetadataVendorValidator, fontInfoWOFFMetadataCreditsValidator, fontInfoWOFFMetadataDescriptionValidator, fontInfoWOFFMetadataLicenseValidator, fontInfoWOFFMetadataTrademarkValidator, fontInfoWOFFMetadataCopyrightValidator, fontInfoWOFFMetadataLicenseeValidator, fontInfoWOFFMetadataTextValue, fontInfoWOFFMetadataExtensionsValidator, fontInfoWOFFMetadataExtensionValidator, fontInfoWOFFMetadataExtensionItemValidator, fontInfoWOFFMetadataExtensionNameValidator, fontInfoWOFFMetadataExtensionValueValidator, guidelinesValidator, guidelineValidator, anchorsValidator, anchorValidator, identifierValidator, colorValidator, imageValidator, pngValidator, layerContentsValidator, groupsValidator, kerningValidator, fontLibValidator, glyphLibValidator",
        "Imports: __future__.annotations, calendar, collections.abc.Mapping, collections.abc.Sequence, io.open, fontTools.misc.filesystem, typing.Any, typing.Type, typing.Optional, typing.Union, fontTools.annotations.IntFloat, fontTools.ufoLib.utils.numberTypes, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ufoLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: UFOFormatVersion, UFOFileStructure, _UFOBaseIO, UFOReader, UFOWriter",
        "Contains 76 functions: _sniffFileStructure, makeUFOPath, validateFontInfoVersion2ValueForAttribute, validateInfoVersion2Data, validateFontInfoVersion3ValueForAttribute, validateInfoVersion3Data, _flipDict, convertFontInfoValueForAttributeFromVersion1ToVersion2, convertFontInfoValueForAttributeFromVersion2ToVersion1, _convertFontInfoDataVersion1ToVersion2, _convertFontInfoDataVersion2ToVersion1, convertFontInfoValueForAttributeFromVersion2ToVersion3, convertFontInfoValueForAttributeFromVersion3ToVersion2, _convertFontInfoDataVersion3ToVersion2, _convertFontInfoDataVersion2ToVersion3, getFileModificationTime, _getPlist, _writePlist, __init__, _get_path, _get_formatVersion, formatVersionTuple, _get_fileStructure, _upConvertKerning, readBytesFromPath, getReadFileForPath, _readMetaInfo, readMetaInfo, _readGroups, readGroups, getKerningGroupConversionRenameMaps, _readInfo, readInfo, _readKerning, readKerning, readLib, readFeatures, _readLayerContents, getLayerNames, getDefaultLayerName, getGlyphSet, getCharacterMapping, getDataDirectoryListing, getImageDirectoryListing, readData, readImage, close, __enter__, __exit__, __init__, _get_fileCreator, copyFromReader, writeBytesToPath, getFileObjectForPath, removePath, setModificationTime, _writeMetaInfo, setKerningGroupConversionRenameMaps, writeGroups, writeInfo, writeKerning, writeLib, writeFeatures, writeLayerContents, _findDirectoryForLayerName, getGlyphSet, _getDefaultGlyphSet, _getGlyphSetFormatVersion3, renameGlyphSet, deleteGlyphSet, writeData, removeData, writeImage, removeImage, copyImageFromReader, close",
        "Imports: __future__.annotations, enum, logging, os, zipfile, collections.OrderedDict, copy.deepcopy, os.fsdecode, typing.IO, typing.TYPE_CHECKING, typing.Any, typing.Optional, typing.Union, typing.cast, fontTools.misc.filesystem, fontTools.misc.plistlib, fontTools.ufoLib.converters.convertUFO1OrUFO2KerningToUFO3Kerning, fontTools.ufoLib.errors.UFOLibError, fontTools.ufoLib.filenames.userNameToFileName, fontTools.ufoLib.utils.BaseFormatVersion, fontTools.ufoLib.utils.normalizeFormatVersion, fontTools.ufoLib.utils.numberTypes, fontTools.ufoLib.validators.*, logging.Logger, fontTools.annotations.GlyphNameToFileNameFunc, fontTools.annotations.K, fontTools.annotations.KerningDict, fontTools.annotations.KerningGroups, fontTools.annotations.KerningNested, fontTools.annotations.PathOrFS, fontTools.annotations.PathStr, fontTools.annotations.UFOFormatVersionInput, fontTools.annotations.V, fontTools.misc.filesystem._base.FS, fontTools.ufoLib.glifLib.GlyphSet, doctest, warnings, warnings, fontTools.ufoLib.glifLib.GlyphSet, fontTools.ufoLib.glifLib.GlyphSet, fontTools.ufoLib.glifLib.GlyphSet, fontTools.ufoLib.errors.UnsupportedUFOFormat, fontTools.ufoLib.errors.UnsupportedUFOFormat, fontTools.ufoLib.errors.UnsupportedUFOFormat, warnings"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicodedata\\Blocks.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicodedata\\Mirrored.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicodedata\\OTTags.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicodedata\\ScriptExtensions.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicodedata\\Scripts.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicodedata\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 12 functions: mirrored, script, script_extension, script_name, _normalize_property_name, script_code, script_horizontal_direction, script_horizontal_direction, script_horizontal_direction, block, ot_tags_from_script, ot_tag_to_script",
        "Imports: __future__.annotations, fontTools.misc.textTools.byteord, fontTools.misc.textTools.tostr, re, bisect.bisect_right, typing.Literal, typing.TypeVar, typing.overload, .Blocks, .Mirrored, .Scripts, .ScriptExtensions, .OTTags, unicodedata2.*, unicodedata.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\avarPlanner.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: main",
        "Imports: avar.plan.main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\builder.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 17 functions: buildVarRegionAxis, buildSparseVarRegionAxis, buildVarRegion, buildSparseVarRegion, buildVarRegionList, buildSparseVarRegionList, _reorderItem, VarData_calculateNumShorts, VarData_CalculateNumShorts, VarData_optimize, buildVarData, buildVarStore, buildMultiVarData, buildMultiVarStore, buildVarIdxMap, buildDeltaSetIndexMap, buildVarDevTable",
        "Imports: fontTools.ttLib, fontTools.ttLib.tables.otTables"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\cff.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: CFFToCFF2OutlineExtractor, MergeOutlineExtractor, CFF2CharStringMergePen",
        "Contains 35 functions: addCFFVarStore, convertCFFtoCFF2, conv_to_int, get_private, merge_PrivateDicts, _cff_or_cff2, getfd_map, merge_region_fonts, _get_cs, _add_new_vsindex, merge_charstrings, popallWidth, __init__, countHints, _hint_op, op_hstem, op_vstem, op_hstemhm, op_vstemhm, _get_hintmask, op_hintmask, op_cntrmask, __init__, add_point, add_hint, add_hintmask, _moveTo, _lineTo, _curveToOne, _closePath, _endPath, restart, getCommands, reorder_blend_args, getCharString",
        "Imports: collections.namedtuple, fontTools.cffLib.maxStackLimit, fontTools.cffLib.TopDictIndex, fontTools.cffLib.buildOrder, fontTools.cffLib.topDictOperators, fontTools.cffLib.topDictOperators2, fontTools.cffLib.privateDictOperators, fontTools.cffLib.privateDictOperators2, fontTools.cffLib.FDArrayIndex, fontTools.cffLib.FontDict, fontTools.cffLib.VarStoreData, io.BytesIO, fontTools.cffLib.specializer.specializeCommands, fontTools.cffLib.specializer.commandsToProgram, fontTools.ttLib.newTable, fontTools.varLib, fontTools.varLib.models.allEqual, fontTools.misc.loggingTools.deprecateFunction, fontTools.misc.roundTools.roundFunc, fontTools.misc.psCharStrings.T2CharString, fontTools.misc.psCharStrings.T2OutlineExtractor, fontTools.pens.t2CharStringPen.T2CharStringPen, functools.partial, errors.VarLibCFFDictMergeError, errors.VarLibCFFPointTypeMergeError, errors.VarLibCFFHintTypeMergeError, errors.VarLibMergeError, fontTools.cffLib.CFFToCFF2.convertCFFToCFF2"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\errors.py": {
      "entityType": "file",
      "observations": [
        "Contains 18 classes: VarLibError, VarLibValidationError, VarLibMergeError, ShouldBeConstant, FoundANone, NotANone, MismatchedTypes, LengthsDiffer, KeysDiffer, InconsistentGlyphOrder, InconsistentExtensions, UnsupportedFormat, InconsistentFormats, VarLibCFFMergeError, VarLibCFFDictMergeError, VarLibCFFPointTypeMergeError, VarLibCFFHintTypeMergeError, VariationModelError",
        "Contains 16 functions: __init__, reason, _master_name, offender, details, __str__, details, offender, details, offender, details, __init__, reason, __init__, __init__, __init__",
        "Imports: textwrap"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\featureVars.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ShifterVisitor",
        "Contains 22 functions: addFeatureVariations, _existingVariableFeatures, _checkSubstitutionGlyphsExist, overlayFeatureVariations, overlayBox, cleanupBox, addFeatureVariationsRaw, buildGSUB, makeSubstitutionsHashable, visit, visit, buildSubstitutionLookups, buildFeatureVariations, buildFeatureRecord, buildFeatureVariationRecord, buildFeatureTableSubstitutionRecord, buildConditionTable, findFeatureVariationRecord, sortFeatureList, remapFeatures, _remapLangSys, __init__",
        "Imports: fontTools.misc.dictTools.hashdict, fontTools.misc.intTools.bit_count, fontTools.ttLib.newTable, fontTools.ttLib.tables.otTables, fontTools.ttLib.ttVisitor.TTVisitor, fontTools.otlLib.builder.buildLookup, fontTools.otlLib.builder.buildSingleSubstSubtable, collections.OrderedDict, errors.VarLibError, errors.VarLibValidationError, doctest, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\hvar.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: _get_advance_metrics, add_HVAR, add_VVAR, main",
        "Imports: fontTools.misc.roundTools.noRound, fontTools.ttLib.TTFont, fontTools.ttLib.newTable, fontTools.ttLib.tables.otTables, fontTools.ttLib.tables.otBase.OTTableWriter, fontTools.varLib.HVAR_FIELDS, fontTools.varLib.VVAR_FIELDS, fontTools.varLib._add_VHVAR, fontTools.varLib.builder, fontTools.varLib.models, fontTools.varLib.varStore, fontTools.misc.fixedTools.fixedToFloat, fontTools.misc.cliTools.makeOutputFileName, functools.partial, logging, fontTools.configLogger, fontTools.designspaceLib.DesignSpaceDocument, argparse, sys, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatable.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Glyph",
        "Contains 10 functions: test_gen, test, recursivelyAddGlyph, ensure_parent_dir, main, __init__, _fill_in, _populate, draw, grand_parent",
        "Imports: interpolatableHelpers.*, interpolatableTestContourOrder.test_contour_order, interpolatableTestStartingPoint.test_starting_point, fontTools.pens.recordingPen.RecordingPen, fontTools.pens.recordingPen.DecomposingRecordingPen, fontTools.pens.recordingPen.lerpRecordings, fontTools.pens.transformPen.TransformPen, fontTools.pens.statisticsPen.StatisticsPen, fontTools.pens.statisticsPen.StatisticsControlPen, fontTools.pens.momentsPen.OpenContourError, fontTools.varLib.models.piecewiseLinearMap, fontTools.varLib.models.normalizeLocation, fontTools.misc.fixedTools.floatToFixedToStr, fontTools.misc.transform.Transform, collections.defaultdict, types.SimpleNamespace, functools.wraps, pprint.pformat, math.sqrt, math.atan2, math.pi, logging, os, argparse, sys, fontTools.configLogger, os.path.basename, sys, fontTools.designspaceLib.DesignSpaceDocument, fontTools.ufoLib.UFOReader, fontTools.ttLib.TTFont, interpolatablePlot.InterpolatablePS, interpolatablePlot.InterpolatablePDF, interpolatablePlot.InterpolatableSVG, base64, glyphsLib.GSFont, glyphsLib.to_designspace, json, fontTools.ttLib.TTFont"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatableHelpers.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: InterpolatableProblem, PerContourPen, PerContourOrComponentPen, SimpleRecordingPointPen",
        "Contains 28 functions: sort_problems, rot_list, vdiff_hypot2, vdiff_hypot2_complex, matching_cost, min_cost_perfect_bipartite_matching_scipy, min_cost_perfect_bipartite_matching_munkres, min_cost_perfect_bipartite_matching_bruteforce, contour_vector_from_stats, matching_for_vectors, points_characteristic_bits, points_complex_vector, add_isomorphisms, find_parents_and_order, transform_from_stats, __init__, _moveTo, _lineTo, _qCurveToOne, _curveToOne, _closePath, _endPath, _newItem, addComponent, __init__, beginPath, endPath, addPoint",
        "Imports: fontTools.ttLib.ttGlyphSet.LerpGlyphSet, fontTools.pens.basePen.AbstractPen, fontTools.pens.basePen.BasePen, fontTools.pens.basePen.DecomposingPen, fontTools.pens.pointPen.AbstractPointPen, fontTools.pens.pointPen.SegmentToPointPen, fontTools.pens.recordingPen.RecordingPen, fontTools.pens.recordingPen.DecomposingRecordingPen, fontTools.misc.transform.Transform, collections.defaultdict, collections.deque, math.sqrt, math.copysign, math.atan2, math.pi, enum.Enum, itertools, logging, scipy.optimize.linear_sum_assignment, munkres.Munkres, scipy.sparse.csgraph.minimum_spanning_tree"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatablePlot.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: OverridingDict, InterpolatablePlot, InterpolatablePostscriptLike, InterpolatablePS, InterpolatablePDF, InterpolatableSVG",
        "Contains 29 functions: __init__, __missing__, __init__, __enter__, __exit__, show_page, add_title_page, draw_legend, add_summary, _add_listing, add_table_of_contents, add_index, add_problems, add_problem, draw_label, draw_glyph, draw_dot, draw_circle, draw_arrow, draw_text, draw_cupcake, draw_emoticon, __exit__, show_page, __enter__, __enter__, __enter__, __exit__, show_page",
        "Imports: interpolatableHelpers.*, fontTools.ttLib.TTFont, fontTools.ttLib.ttGlyphSet.LerpGlyphSet, fontTools.pens.recordingPen.RecordingPen, fontTools.pens.recordingPen.DecomposingRecordingPen, fontTools.pens.recordingPen.RecordingPointPen, fontTools.pens.boundsPen.ControlBoundsPen, fontTools.pens.cairoPen.CairoPen, fontTools.pens.pointPen.SegmentToPointPen, fontTools.pens.pointPen.PointToSegmentPen, fontTools.pens.pointPen.ReverseContourPointPen, fontTools.varLib.interpolatableHelpers.PerContourOrComponentPen, fontTools.varLib.interpolatableHelpers.SimpleRecordingPointPen, itertools.cycle, functools.wraps, io.BytesIO, cairo, math, os, logging, hashlib, glyphsLib.GSFont"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatableTestContourOrder.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_contour_order",
        "Imports: interpolatableHelpers.*, logging"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatableTestStartingPoint.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_starting_point",
        "Imports: interpolatableHelpers.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolate_layout.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: interpolate_layout, main",
        "Imports: fontTools.ttLib.TTFont, fontTools.varLib.models, fontTools.varLib.VarLibError, fontTools.varLib.load_designspace, fontTools.varLib.load_masters, fontTools.varLib.merger.InstancerMerger, os.path, logging, copy.deepcopy, pprint.pformat, fontTools.configLogger, argparse, sys, sys, doctest, fontTools.designspaceLib.DesignSpaceDocument"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\iup.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 10 functions: iup_segment, iup_contour, iup_delta, can_iup_in_between, _iup_contour_bound_forced_set, _iup_contour_optimize_dp, _rot_list, _rot_set, iup_contour_optimize, iup_delta_optimize",
        "Imports: typing.Sequence, typing.Tuple, typing.Union, numbers.Integral, numbers.Real, cython, fontTools.misc.cython"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: Merger, AligningMerger, InstancerMerger, MutatorMerger, VariationMerger, COLRVariationMerger",
        "Contains 69 functions: merge, _SinglePosUpgradeToFormat2, _merge_GlyphOrders, merge, merge, _Lookup_SinglePos_get_effective_value, _Lookup_PairPos_get_effective_value_pair, merge, merge, _PairPosFormat1_merge, _ClassDef_invert, _ClassDef_merge_classify, _PairPosFormat2_align_matrices, _PairPosFormat2_merge, merge, _MarkBasePosFormat1_merge, merge, merge, _PairSet_flatten, _Lookup_PairPosFormat1_subtables_flatten, _Lookup_PairPosFormat2_subtables_flatten, _Lookup_PairPos_subtables_canonicalize, _Lookup_SinglePos_subtables_flatten, merge, merge, merge, merge, merge, merge, merge, merge, merge, buildVarDevTable, merge, merge, merge, merge, merge, merge, _flatten_layers, _merge_PaintColrLayers, merge, merge, merge, merge, __init__, merger, mergersFor, mergeObjects, mergeLists, mergeThings, mergeTables, __init__, __init__, __init__, setModel, mergeThings, __init__, mergeTables, checkFormatEnum, mergeSparseDict, mergeAttrs, storeMastersForAttr, storeVariationIndices, mergeVariableAttrs, convertSubTablesToVarType, expandPaintColrLayers, listToColrLayers, wrapper",
        "Imports: os, copy, enum, operator.ior, logging, fontTools.colorLib.builder.MAX_PAINT_COLR_LAYER_COUNT, fontTools.colorLib.builder.LayerReuseCache, fontTools.misc.classifyTools, fontTools.misc.roundTools.otRound, fontTools.misc.treeTools.build_n_ary_tree, fontTools.ttLib.tables.otTables, fontTools.ttLib.tables.otBase, fontTools.ttLib.tables.otConverters.BaseFixedValue, fontTools.ttLib.tables.otTraverse.dfs_base_table, fontTools.ttLib.tables.DefaultTable.DefaultTable, fontTools.varLib.builder, fontTools.varLib.models, fontTools.varLib.varStore, fontTools.varLib.models.nonNone, fontTools.varLib.models.allNone, fontTools.varLib.models.allEqual, fontTools.varLib.models.allEqualTo, fontTools.varLib.models.subList, fontTools.varLib.varStore.VarStoreInstancer, functools.reduce, fontTools.otlLib.builder.buildSinglePos, fontTools.otlLib.optimize.gpos._compression_level_from_env, fontTools.otlLib.optimize.gpos.compact_pair_pos, errors.ShouldBeConstant, errors.FoundANone, errors.MismatchedTypes, errors.NotANone, errors.LengthsDiffer, errors.KeysDiffer, errors.InconsistentGlyphOrder, errors.InconsistentExtensions, errors.InconsistentFormats, errors.UnsupportedFormat, errors.VarLibMergeError"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\models.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: VariationModel",
        "Contains 30 functions: nonNone, allNone, allEqualTo, allEqual, subList, normalizeValue, normalizeLocation, supportScalar, piecewiseLinearMap, main, __init__, getSubModel, computeAxisRanges, getMasterLocationsSortKeyFunc, reorderMasters, _computeMasterSupports, _locationsToRegions, _computeDeltaWeights, getDeltas, getDeltasAndSupports, getScalars, getMasterScalars, interpolateFromValuesAndScalars, interpolateFromDeltasAndScalars, interpolateFromDeltas, interpolateFromMasters, interpolateFromMastersAndScalars, getKey, sign, key",
        "Imports: fontTools.misc.roundTools.noRound, errors.VariationModelError, fontTools.configLogger, argparse, pprint.pprint, doctest, sys, fontTools.designspaceLib.DesignSpaceDocument"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\multiVarStore.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: OnlineMultiVarStoreBuilder, MultiVarStoreInstancer",
        "Contains 23 functions: _getLocationKey, MultiVarData_addItem, SparseVarRegion_get_support, MultiVarStore___bool__, MultiVarStore_subset_varidxes, MultiVarStore_prune_regions, MultiVarStore_get_supports, VARC_collect_varidxes, VARC_remap_varidxes, __init__, setModel, setSupports, finish, _add_MultiVarData, storeMasters, storeDeltas, __init__, setLocation, _clearCaches, _getScalar, interpolateFromDeltasAndScalars, __getitem__, interpolateFromDeltas",
        "Imports: fontTools.misc.roundTools.noRound, fontTools.misc.roundTools.otRound, fontTools.misc.intTools.bit_count, fontTools.misc.vector.Vector, fontTools.ttLib.tables.otTables, fontTools.varLib.models.supportScalar, fontTools.varLib.varStore, fontTools.varLib.builder.buildVarRegionList, fontTools.varLib.builder.buildSparseVarRegionList, fontTools.varLib.builder.buildSparseVarRegion, fontTools.varLib.builder.buildMultiVarStore, fontTools.varLib.builder.buildMultiVarData, fontTools.misc.iterTools.batched, functools.partial, collections.defaultdict, heapq.heappush, heapq.heappop"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\mutator.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: interpolate_cff2_PrivateDict, interpolate_cff2_charstrings, interpolate_cff2_metrics, instantiateVariableFont, main",
        "Imports: fontTools.misc.fixedTools.floatToFixedToFloat, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.loggingTools.deprecateFunction, fontTools.misc.roundTools.otRound, fontTools.pens.boundsPen.BoundsPen, fontTools.ttLib.TTFont, fontTools.ttLib.newTable, fontTools.ttLib.tables.ttProgram, fontTools.ttLib.tables._g_l_y_f.GlyphCoordinates, fontTools.ttLib.tables._g_l_y_f.flagOverlapSimple, fontTools.ttLib.tables._g_l_y_f.OVERLAP_COMPOUND, fontTools.varLib.models.supportScalar, fontTools.varLib.models.normalizeLocation, fontTools.varLib.models.piecewiseLinearMap, fontTools.varLib.merger.MutatorMerger, fontTools.varLib.varStore.VarStoreInstancer, fontTools.varLib.mvar.MVAR_ENTRIES, fontTools.varLib.iup.iup_delta, fontTools.subset.cff, os.path, logging, io.BytesIO, fontTools.configLogger, argparse, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\mvar.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\plot.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 10 functions: stops, _plotLocationsDots, plotLocations, _plotLocations2D, _plotLocations3D, plotDocument, _plotModelFromMasters2D, _plotModelFromMasters3D, plotModelFromMasters, main",
        "Imports: fontTools.varLib.models.VariationModel, fontTools.varLib.models.supportScalar, fontTools.designspaceLib.DesignSpaceDocument, matplotlib.pyplot, mpl_toolkits.mplot3d.axes3d, itertools.cycle, math, logging, sys, numpy, numpy, fontTools.configLogger, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\stat.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: buildVFStatTable, getStatAxes, getStatLocations, _labelToFlags, _axisLabelToStatLocation",
        "Imports: __future__.annotations, typing.Dict, typing.List, typing.Union, fontTools.otlLib.builder, fontTools.designspaceLib.AxisLabelDescriptor, fontTools.designspaceLib.DesignSpaceDocument, fontTools.designspaceLib.DesignSpaceDocumentError, fontTools.designspaceLib.LocationLabelDescriptor, fontTools.designspaceLib.types.Region, fontTools.designspaceLib.types.getVFUserRegion, fontTools.designspaceLib.types.locationInRegion, fontTools.ttLib.TTFont"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: OnlineVarStoreBuilder, VarStoreInstancer, _Encoding, _EncodingDict",
        "Contains 39 functions: _getLocationKey, VarData_addItem, VarRegion_get_support, VarStore___bool__, VarStore_subset_varidxes, VarStore_prune_regions, _visit, _Device_recordVarIdx, Object_collect_device_varidxes, _Device_mapVarIdx, Object_remap_device_varidxes, VarStore_optimize, main, __init__, setModel, setSupports, finish, _add_VarData, storeMasters, storeMastersMany, storeDeltas, storeDeltasMany, __init__, setLocation, _clearCaches, _getScalar, interpolateFromDeltasAndScalars, __getitem__, interpolateFromDeltas, __init__, append, extend, width_sort_key, _characteristic_overhead, _columns, gain_from_merging, __missing__, add_row, _row_characteristics",
        "Imports: fontTools.misc.roundTools.noRound, fontTools.misc.roundTools.otRound, fontTools.misc.intTools.bit_count, fontTools.ttLib.tables.otTables, fontTools.varLib.models.supportScalar, fontTools.varLib.builder.buildVarRegionList, fontTools.varLib.builder.buildVarStore, fontTools.varLib.builder.buildVarRegion, fontTools.varLib.builder.buildVarData, functools.partial, collections.defaultdict, heapq.heappush, heapq.heappop, argparse.ArgumentParser, fontTools.configLogger, fontTools.ttLib.TTFont, fontTools.ttLib.tables.otBase.OTTableWriter, sys, doctest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MasterFinder",
        "Contains 31 functions: _add_fvar, _add_avar, _add_stat, _add_gvar, _remove_TTHinting, _merge_TTHinting, _has_inconsistent_use_my_metrics_flag, _unset_inconsistent_use_my_metrics_flags, _add_HVAR, _add_VVAR, _add_VHVAR, _get_advance_metrics, _add_MVAR, _add_BASE, _merge_OTL, _add_GSUB_feature_variations, _add_CFF2, _add_COLR, load_designspace, set_default_weight_width_slant, drop_implied_oncurve_points, build_many, build, _open_font, load_masters, _feature_variations_tags, addGSUBFeatureVariations, main, normalize, __init__, __call__",
        "Imports: typing.List, fontTools.misc.vector.Vector, fontTools.misc.roundTools.noRound, fontTools.misc.roundTools.otRound, fontTools.misc.fixedTools.floatToFixed, fontTools.misc.textTools.Tag, fontTools.misc.textTools.tostr, fontTools.ttLib.TTFont, fontTools.ttLib.newTable, fontTools.ttLib.tables._f_v_a_r.Axis, fontTools.ttLib.tables._f_v_a_r.NamedInstance, fontTools.ttLib.tables._g_l_y_f.GlyphCoordinates, fontTools.ttLib.tables._g_l_y_f.dropImpliedOnCurvePoints, fontTools.ttLib.tables._g_l_y_f.USE_MY_METRICS, fontTools.ttLib.tables.ttProgram.Program, fontTools.ttLib.tables.TupleVariation.TupleVariation, fontTools.ttLib.tables.otTables, fontTools.ttLib.tables.otBase.OTTableWriter, fontTools.varLib.builder, fontTools.varLib.models, fontTools.varLib.varStore, fontTools.varLib.merger.VariationMerger, fontTools.varLib.merger.COLRVariationMerger, fontTools.varLib.mvar.MVAR_ENTRIES, fontTools.varLib.iup.iup_delta_optimize, fontTools.varLib.featureVars.addFeatureVariations, fontTools.designspaceLib.DesignSpaceDocument, fontTools.designspaceLib.InstanceDescriptor, fontTools.designspaceLib.split.splitInterpolable, fontTools.designspaceLib.split.splitVariableFonts, fontTools.varLib.stat.buildVFStatTable, fontTools.colorLib.builder.buildColrV1, fontTools.colorLib.unbuilder.unbuildColrV1, functools.partial, collections.OrderedDict, collections.defaultdict, collections.namedtuple, os.path, logging, copy.deepcopy, pprint.pformat, re.fullmatch, errors.VarLibError, errors.VarLibValidationError, otlLib.builder.buildStatTable, cff.merge_region_fonts, fontTools.ttx.guessFileType, argparse.ArgumentParser, fontTools.configLogger, sys, doctest, fontTools.cffLib.CFFToCFF2.convertCFFToCFF2"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, fontTools.varLib.main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\avar\\build.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: build, main",
        "Imports: fontTools.varLib._add_fvar, fontTools.varLib._add_avar, fontTools.varLib.load_designspace, fontTools.ttLib.newTable, logging, fontTools.ttLib.TTFont, fontTools.misc.cliTools.makeOutputFileName, fontTools.configLogger, argparse, sys, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\avar\\map.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: _denormalize, map, main",
        "Imports: fontTools.varLib.models.normalizeValue, fontTools.ttLib.TTFont, argparse, sys, sys, build.build"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\avar\\plan.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 20 functions: normalizeLinear, interpolateLinear, normalizeLog, interpolateLog, normalizeDegrees, measureWeight, measureWidth, measureSlant, sanitizeWidth, sanitizeWeight, sanitizeSlant, planAxis, planWeightAxis, planWidthAxis, planSlantAxis, planOpticalSizeAxis, makeDesignspaceSnippet, addEmptyAvar, processAxis, main",
        "Imports: fontTools.ttLib.newTable, fontTools.ttLib.tables._f_v_a_r.Axis, fontTools.pens.areaPen.AreaPen, fontTools.pens.basePen.NullPen, fontTools.pens.statisticsPen.StatisticsPen, fontTools.varLib.models.piecewiseLinearMap, fontTools.varLib.models.normalizeValue, fontTools.misc.cliTools.makeOutputFileName, math, logging, pprint.pformat, fontTools.configLogger, fontTools.ttLib.TTFont, argparse, sys, matplotlib.pyplot, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\avar\\unbuild.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: _denormalize, _pruneLocations, mappings_from_avar, unbuild, main",
        "Imports: fontTools.varLib.models.VariationModel, fontTools.varLib.varStore.VarStoreInstancer, fontTools.misc.fixedTools.fixedToFloat, itertools.product, sys, fontTools.ttLib.TTFont, argparse, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\avar\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\avar\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: main",
        "Imports: logging, fontTools.ttLib.TTFont, fontTools.misc.cliTools.makeOutputFileName, fontTools.configLogger, argparse, sys, build.build, sys, unbuild.unbuild"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\featureVars.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: _featureVariationRecordIsUnique, _limitFeatureVariationConditionRange, _instantiateFeatureVariationRecord, _instantiateFeatureVariations, instantiateFeatureVariations",
        "Imports: fontTools.ttLib.tables.otTables, copy.deepcopy, logging, fontTools.varLib.instancer.NormalizedAxisTripleAndDistances"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\names.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: NameID",
        "Contains 11 functions: getVariationNameIDs, pruningUnusedNames, updateNameTable, checkAxisValuesExist, _sortAxisValues, _updateNameRecords, _isRibbi, _updateNameTableStyleRecords, _updatePSNameRecord, _updateUniqueIdNameRecord, _fontVersion",
        "Imports: contextlib.contextmanager, copy.deepcopy, enum.IntEnum, re, .log, .AxisLimits, .axisValuesFromAxisLimits"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\solver.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: _reverse_negate, _solve, rebaseTent",
        "Imports: fontTools.varLib.models.supportScalar, fontTools.misc.fixedTools.MAX_F2DOT14, functools.lru_cache"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: AxisTriple, NormalizedAxisTriple, NormalizedAxisTripleAndDistances, _BaseAxisLimits, AxisLimits, NormalizedAxisLimits, OverlapMode, _TupleVarStoreAdapter",
        "Contains 67 functions: AxisRange, NormalizedAxisRange, instantiateVARC, instantiateTupleVariationStore, changeTupleVariationsAxisLimits, changeTupleVariationAxisLimit, instantiateCFF2, _instantiateGvarGlyph, instantiateGvarGlyph, instantiateGvar, setCvarDeltas, instantiateCvar, setMvarDeltas, verticalMetricsKeptInSync, instantiateMVAR, _remapVarIdxMap, _instantiateVHVAR, instantiateHVAR, instantiateVVAR, instantiateItemVariationStore, instantiateOTL, _isValidAvarSegmentMap, downgradeCFF2ToCFF, instantiateAvar, isInstanceWithinAxisRanges, instantiateFvar, instantiateSTAT, axisValuesFromAxisLimits, setMacOverlapFlags, normalize, sanityCheckVariableTables, instantiateVariableFont, setRibbiBits, parseLimits, parseArgs, main, __post_init__, __getitem__, __len__, _replace, __repr__, expand, limitRangeAndPopulateDefaults, __post_init__, __post_init__, reverse_negate, renormalizeValue, __getitem__, __iter__, __len__, __repr__, __str__, defaultLocation, pinnedLocation, __init__, limitAxesAndPopulateDefaults, normalize, __init__, getNumRegions, storeBlendsToVarStore, fetchBlendsFromVarStore, __init__, fromItemVarStore, rebuildRegions, instantiate, asItemVarStore, isAxisValueOutsideLimits",
        "Imports: fontTools.misc.fixedTools.floatToFixedToFloat, fontTools.misc.fixedTools.strToFixedToFloat, fontTools.misc.fixedTools.otRound, fontTools.varLib.models.normalizeValue, fontTools.varLib.models.piecewiseLinearMap, fontTools.ttLib.TTFont, fontTools.ttLib.newTable, fontTools.ttLib.tables.TupleVariation.TupleVariation, fontTools.ttLib.tables._g_l_y_f, fontTools.varLib, fontTools.subset, fontTools.cffLib.privateDictOperators2, fontTools.cffLib.specializer.programToCommands, fontTools.cffLib.specializer.commandsToProgram, fontTools.cffLib.specializer.specializeCommands, fontTools.cffLib.specializer.generalizeCommands, fontTools.cffLib.CFF2ToCFF.convertCFF2ToCFF, fontTools.varLib.builder, fontTools.varLib.mvar.MVAR_ENTRIES, fontTools.varLib.merger.MutatorMerger, fontTools.varLib.instancer.names, featureVars.instantiateFeatureVariations, fontTools.misc.cliTools.makeOutputFileName, fontTools.varLib.instancer.solver, fontTools.ttLib.tables.otTables.VarComponentFlags, collections, dataclasses, contextlib.contextmanager, copy.deepcopy, enum.IntEnum, logging, os, re, io, typing.Dict, typing.Iterable, typing.Mapping, typing.Optional, typing.Sequence, typing.Tuple, typing.Union, warnings, fontTools.configLogger, argparse, fontTools.cffLib.CFF2ToCFF.convertCFF2ToCFF, fontTools.ttLib.removeOverlaps.removeOverlaps"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: sys, fontTools.varLib.instancer.main"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\voltLib\\ast.py": {
      "entityType": "file",
      "observations": [
        "Contains 28 classes: Pos, Element, Statement, Expression, VoltFile, GlyphDefinition, GroupDefinition, GlyphName, Enum, GroupName, Range, ScriptDefinition, LangSysDefinition, FeatureDefinition, LookupDefinition, SubstitutionDefinition, SubstitutionSingleDefinition, SubstitutionMultipleDefinition, SubstitutionLigatureDefinition, SubstitutionAlternateDefinition, SubstitutionReverseChainingSingleDefinition, PositionAttachDefinition, PositionAttachCursiveDefinition, PositionAdjustPairDefinition, PositionAdjustSingleDefinition, ContextDefinition, AnchorDefinition, SettingDefinition",
        "Contains 49 functions: __str__, __init__, build, __str__, __init__, build, __str__, __init__, __str__, __init__, glyphSet, __str__, __init__, glyphSet, __str__, __init__, __iter__, glyphSet, __str__, __init__, glyphSet, __str__, __init__, glyphSet, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__, __init__, __str__",
        "Imports: fontTools.voltLib.error.VoltLibError, typing.NamedTuple"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\voltLib\\error.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: VoltLibError",
        "Contains 2 functions: __init__, __str__",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\voltLib\\lexer.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Lexer",
        "Contains 8 functions: __init__, __iter__, next, __next__, location_, next_, scan_over_, scan_until_",
        "Imports: fontTools.voltLib.error.VoltLibError"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\voltLib\\parser.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Parser, SymbolTable, OrderedSymbolTable",
        "Contains 42 functions: __init__, make_lexer_, parse, parse_def_glyph_, parse_def_group_, parse_def_script_, parse_langsys_, parse_feature_, parse_def_lookup_, parse_context_, parse_substitution_, parse_position_, parse_attach_, parse_attach_cursive_, parse_adjust_pair_, parse_adjust_single_, parse_def_anchor_, parse_adjust_by_, parse_pos_, parse_unicode_values_, parse_enum_, parse_coverage_, resolve_group, glyph_range, parse_ppem_, parse_noarg_option_, parse_cmap_format, is_cur_keyword_, expect_string_, expect_keyword_, expect_name_, expect_number_, advance_lexer_, __init__, enter_scope, exit_scope, define, resolve, __init__, enter_scope, resolve, range",
        "Imports: fontTools.voltLib.ast, fontTools.voltLib.lexer.Lexer, fontTools.voltLib.error.VoltLibError, io.open"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\voltLib\\voltToFea.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Lookup, VoltToFea",
        "Contains 27 functions: _flatten_group, sort_groups, main, __init__, __init__, _lookupName, _className, _collectStatements, _buildFeatureFile, convert, _glyphName, _groupName, _glyphSet, _coverage, _context, _groupDefinition, _glyphDefinition, _scriptDefinition, _settingDefinition, _adjustment, _anchor, _anchorDefinition, _gposLookup, _gposContextLookup, _gsubLookup, _gsubContextLookup, _lookupDefinition",
        "Imports: logging, re, io.StringIO, graphlib.TopologicalSorter, fontTools.feaLib.ast, fontTools.ttLib.TTFont, fontTools.ttLib.TTLibError, fontTools.voltLib.ast, fontTools.voltLib.parser.Parser, argparse, pathlib.Path, fontTools.configLogger, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\voltLib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\voltLib\\__main__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: invalid_fea_glyph_name, sanitize_glyph_name, main",
        "Imports: argparse, logging, sys, io.StringIO, pathlib.Path, fontTools.configLogger, fontTools.feaLib.builder.addOpenTypeFeaturesFromString, fontTools.feaLib.error.FeatureLibError, fontTools.feaLib.lexer.Lexer, fontTools.misc.cliTools.makeOutputFileName, fontTools.ttLib.TTFont, fontTools.ttLib.TTLibError, fontTools.voltLib.parser.Parser, fontTools.voltLib.voltToFea.TABLES, fontTools.voltLib.voltToFea.VoltToFea, io"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_abnf.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_connection.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: NEED_DATA, PAUSED, Connection",
        "Contains 24 functions: _keep_alive, _body_framing, __init__, states, our_state, their_state, they_are_waiting_for_100_continue, start_next_cycle, _process_error, _server_switch_event, _process_event, _get_io_object, _respond_to_state_changes, trailing_data, receive_data, _extract_next_receive_event, next_event, send, send, send, send, send_with_data_passthrough, send_failed, _clean_up_response_headers_for_sending",
        "Imports: typing.Any, typing.Callable, typing.cast, typing.Dict, typing.List, typing.Optional, typing.overload, typing.Tuple, typing.Type, typing.Union, _events.ConnectionClosed, _events.Data, _events.EndOfMessage, _events.Event, _events.InformationalResponse, _events.Request, _events.Response, _headers.get_comma_header, _headers.has_expect_100_continue, _headers.set_comma_header, _readers.READERS, _readers.ReadersType, _receivebuffer.ReceiveBuffer, _state._SWITCH_CONNECT, _state._SWITCH_UPGRADE, _state.CLIENT, _state.ConnectionState, _state.DONE, _state.ERROR, _state.MIGHT_SWITCH_PROTOCOL, _state.SEND_BODY, _state.SERVER, _state.SWITCHED_PROTOCOL, _util.LocalProtocolError, _util.RemoteProtocolError, _util.Sentinel, _writers.WRITERS, _writers.WritersType"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_events.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: Event, Request, _ResponseBase, InformationalResponse, Response, Data, EndOfMessage, ConnectionClosed",
        "Contains 7 functions: __init__, __init__, __post_init__, __post_init__, __post_init__, __init__, __init__",
        "Imports: re, abc.ABC, dataclasses.dataclass, typing.List, typing.Tuple, typing.Union, _abnf.method, _abnf.request_target, _headers.Headers, _headers.normalize_and_validate, _util.bytesify, _util.LocalProtocolError, _util.validate"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_headers.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Headers",
        "Contains 14 functions: normalize_and_validate, normalize_and_validate, normalize_and_validate, normalize_and_validate, get_comma_header, set_comma_header, has_expect_100_continue, __init__, __bool__, __eq__, __len__, __repr__, __getitem__, raw_items",
        "Imports: re, typing.AnyStr, typing.cast, typing.List, typing.overload, typing.Sequence, typing.Tuple, typing.TYPE_CHECKING, typing.Union, _abnf.field_name, _abnf.field_value, _util.bytesify, _util.LocalProtocolError, _util.validate, _events.Request, typing.Literal, typing_extensions.Literal"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_readers.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: ContentLengthReader, ChunkedReader, Http10Reader",
        "Contains 13 functions: _obsolete_line_fold, _decode_header_lines, maybe_read_from_IDLE_client, maybe_read_from_SEND_RESPONSE_server, expect_nothing, __init__, __call__, read_eof, __init__, __call__, read_eof, __call__, read_eof",
        "Imports: re, typing.Any, typing.Callable, typing.Dict, typing.Iterable, typing.NoReturn, typing.Optional, typing.Tuple, typing.Type, typing.Union, _abnf.chunk_header, _abnf.header_field, _abnf.request_line, _abnf.status_line, _events.Data, _events.EndOfMessage, _events.InformationalResponse, _events.Request, _events.Response, _receivebuffer.ReceiveBuffer, _state.CLIENT, _state.CLOSED, _state.DONE, _state.IDLE, _state.MUST_CLOSE, _state.SEND_BODY, _state.SEND_RESPONSE, _state.SERVER, _util.LocalProtocolError, _util.RemoteProtocolError, _util.Sentinel, _util.validate"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_receivebuffer.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ReceiveBuffer",
        "Contains 10 functions: __init__, __iadd__, __bool__, __len__, __bytes__, _extract, maybe_extract_at_most, maybe_extract_next_line, maybe_extract_lines, is_next_line_obviously_invalid_request_line",
        "Imports: re, sys, typing.List, typing.Optional, typing.Union"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_state.py": {
      "entityType": "file",
      "observations": [
        "Contains 14 classes: CLIENT, SERVER, IDLE, SEND_RESPONSE, SEND_BODY, DONE, MUST_CLOSE, CLOSED, ERROR, MIGHT_SWITCH_PROTOCOL, SWITCHED_PROTOCOL, _SWITCH_UPGRADE, _SWITCH_CONNECT, ConnectionState",
        "Contains 8 functions: __init__, process_error, process_keep_alive_disabled, process_client_switch_proposal, process_event, _fire_event_triggered_transitions, _fire_state_triggered_transitions, start_next_cycle",
        "Imports: typing.cast, typing.Dict, typing.Optional, typing.Set, typing.Tuple, typing.Type, typing.Union, _events.*, _util.LocalProtocolError, _util.Sentinel"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_util.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: ProtocolError, LocalProtocolError, RemoteProtocolError, Sentinel",
        "Contains 6 functions: validate, bytesify, __init__, _reraise_as_remote_protocol_error, __new__, __repr__",
        "Imports: typing.Any, typing.Dict, typing.NoReturn, typing.Pattern, typing.Tuple, typing.Type, typing.TypeVar, typing.Union"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_version.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\_writers.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: BodyWriter, ContentLengthWriter, ChunkedWriter, Http10Writer",
        "Contains 13 functions: write_headers, write_request, write_any_response, __call__, send_data, send_eom, __init__, send_data, send_eom, send_data, send_eom, send_data, send_eom",
        "Imports: typing.Any, typing.Callable, typing.Dict, typing.List, typing.Tuple, typing.Type, typing.Union, _events.Data, _events.EndOfMessage, _events.Event, _events.InformationalResponse, _events.Request, _events.Response, _headers.Headers, _state.CLIENT, _state.IDLE, _state.SEND_BODY, _state.SEND_RESPONSE, _state.SERVER, _util.LocalProtocolError, _util.Sentinel"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\h11\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: h11._connection.Connection, h11._connection.NEED_DATA, h11._connection.PAUSED, h11._events.ConnectionClosed, h11._events.Data, h11._events.EndOfMessage, h11._events.Event, h11._events.InformationalResponse, h11._events.Request, h11._events.Response, h11._state.CLIENT, h11._state.CLOSED, h11._state.DONE, h11._state.ERROR, h11._state.IDLE, h11._state.MIGHT_SWITCH_PROTOCOL, h11._state.MUST_CLOSE, h11._state.SEND_BODY, h11._state.SEND_RESPONSE, h11._state.SERVER, h11._state.SWITCHED_PROTOCOL, h11._util.LocalProtocolError, h11._util.ProtocolError, h11._util.RemoteProtocolError, h11._version.__version__"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_api.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: request, stream",
        "Imports: __future__.annotations, contextlib, typing, _models.URL, _models.Extensions, _models.HeaderTypes, _models.Response, _sync.connection_pool.ConnectionPool"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py": {
      "entityType": "file",
      "observations": [
        "Contains 15 classes: ConnectionNotAvailable, ProxyError, UnsupportedProtocol, ProtocolError, RemoteProtocolError, LocalProtocolError, TimeoutException, PoolTimeout, ConnectTimeout, ReadTimeout, WriteTimeout, NetworkError, ConnectError, ReadError, WriteError",
        "Contains 1 functions: map_exceptions",
        "Imports: contextlib, typing"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_models.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: ByteStream, Origin, URL, Request, Response, Proxy",
        "Contains 25 functions: enforce_bytes, enforce_url, enforce_headers, enforce_stream, include_request_headers, __init__, __iter__, __repr__, __init__, __eq__, __str__, __init__, origin, __eq__, __bytes__, __repr__, __init__, __repr__, __init__, content, __repr__, read, iter_stream, close, __init__",
        "Imports: __future__.annotations, base64, ssl, typing, urllib.parse"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_ssl.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: default_ssl_context",
        "Imports: ssl, certifi"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_synchronization.py": {
      "entityType": "file",
      "observations": [
        "Contains 10 classes: AsyncLock, AsyncThreadLock, AsyncEvent, AsyncSemaphore, AsyncShieldCancellation, Lock, ThreadLock, Event, Semaphore, ShieldCancellation",
        "Contains 27 functions: current_async_library, __init__, setup, __enter__, __exit__, __init__, setup, set, __init__, setup, __init__, __enter__, __exit__, __init__, __enter__, __exit__, __init__, __enter__, __exit__, __init__, set, wait, __init__, acquire, release, __enter__, __exit__",
        "Imports: __future__.annotations, threading, types, _exceptions.ExceptionMapping, _exceptions.PoolTimeout, _exceptions.map_exceptions, trio, anyio, sniffio"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_trace.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Trace",
        "Contains 4 functions: __init__, trace, __enter__, __exit__",
        "Imports: __future__.annotations, inspect, logging, types, typing, _models.Request"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_utils.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: is_socket_readable",
        "Imports: __future__.annotations, select, socket, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: AnyIOBackend, TrioBackend",
        "Contains 2 functions: __init__, __init__",
        "Imports: _api.request, _api.stream, _async.AsyncConnectionInterface, _async.AsyncConnectionPool, _async.AsyncHTTP2Connection, _async.AsyncHTTP11Connection, _async.AsyncHTTPConnection, _async.AsyncHTTPProxy, _async.AsyncSOCKSProxy, _backends.base.SOCKET_OPTION, _backends.base.AsyncNetworkBackend, _backends.base.AsyncNetworkStream, _backends.base.NetworkBackend, _backends.base.NetworkStream, _backends.mock.AsyncMockBackend, _backends.mock.AsyncMockStream, _backends.mock.MockBackend, _backends.mock.MockStream, _backends.sync.SyncBackend, _exceptions.ConnectError, _exceptions.ConnectionNotAvailable, _exceptions.ConnectTimeout, _exceptions.LocalProtocolError, _exceptions.NetworkError, _exceptions.PoolTimeout, _exceptions.ProtocolError, _exceptions.ProxyError, _exceptions.ReadError, _exceptions.ReadTimeout, _exceptions.RemoteProtocolError, _exceptions.TimeoutException, _exceptions.UnsupportedProtocol, _exceptions.WriteError, _exceptions.WriteTimeout, _models.URL, _models.Origin, _models.Proxy, _models.Request, _models.Response, _ssl.default_ssl_context, _sync.ConnectionInterface, _sync.ConnectionPool, _sync.HTTP2Connection, _sync.HTTP11Connection, _sync.HTTPConnection, _sync.HTTPProxy, _sync.SOCKSProxy, _backends.anyio.AnyIOBackend, _backends.trio.TrioBackend"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AsyncHTTPConnection",
        "Contains 9 functions: exponential_backoff, __init__, can_handle_request, is_available, has_expired, is_idle, is_closed, info, __repr__",
        "Imports: __future__.annotations, itertools, logging, ssl, types, typing, _backends.auto.AutoBackend, _backends.base.SOCKET_OPTION, _backends.base.AsyncNetworkBackend, _backends.base.AsyncNetworkStream, _exceptions.ConnectError, _exceptions.ConnectTimeout, _models.Origin, _models.Request, _models.Response, _ssl.default_ssl_context, _synchronization.AsyncLock, _trace.Trace, http11.AsyncHTTP11Connection, interfaces.AsyncConnectionInterface, http2.AsyncHTTP2Connection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: AsyncPoolRequest, AsyncConnectionPool, PoolByteStream",
        "Contains 10 functions: __init__, assign_to_connection, clear_connection, is_queued, __init__, create_connection, connections, _assign_requests_to_connections, __repr__, __init__",
        "Imports: __future__.annotations, ssl, sys, types, typing, _backends.auto.AutoBackend, _backends.base.SOCKET_OPTION, _backends.base.AsyncNetworkBackend, _exceptions.ConnectionNotAvailable, _exceptions.UnsupportedProtocol, _models.Origin, _models.Proxy, _models.Request, _models.Response, _synchronization.AsyncEvent, _synchronization.AsyncShieldCancellation, _synchronization.AsyncThreadLock, connection.AsyncHTTPConnection, interfaces.AsyncConnectionInterface, interfaces.AsyncRequestInterface, http_proxy.AsyncTunnelHTTPConnection, socks_proxy.AsyncSocks5Connection, http_proxy.AsyncForwardHTTPConnection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_async\\http11.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: HTTPConnectionState, AsyncHTTP11Connection, HTTP11ConnectionByteStream, AsyncHTTP11UpgradeStream",
        "Contains 11 functions: __init__, can_handle_request, is_available, has_expired, is_idle, is_closed, info, __repr__, __init__, __init__, get_extra_info",
        "Imports: __future__.annotations, enum, logging, ssl, time, types, typing, h11, _backends.base.AsyncNetworkStream, _exceptions.ConnectionNotAvailable, _exceptions.LocalProtocolError, _exceptions.RemoteProtocolError, _exceptions.WriteError, _exceptions.map_exceptions, _models.Origin, _models.Request, _models.Response, _synchronization.AsyncLock, _synchronization.AsyncShieldCancellation, _trace.Trace, interfaces.AsyncConnectionInterface"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_async\\http2.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: HTTPConnectionState, AsyncHTTP2Connection, HTTP2ConnectionByteStream",
        "Contains 10 functions: has_body_headers, __init__, can_handle_request, is_available, has_expired, is_idle, is_closed, info, __repr__, __init__",
        "Imports: __future__.annotations, enum, logging, time, types, typing, h2.config, h2.connection, h2.events, h2.exceptions, h2.settings, _backends.base.AsyncNetworkStream, _exceptions.ConnectionNotAvailable, _exceptions.LocalProtocolError, _exceptions.RemoteProtocolError, _models.Origin, _models.Request, _models.Response, _synchronization.AsyncLock, _synchronization.AsyncSemaphore, _synchronization.AsyncShieldCancellation, _trace.Trace, interfaces.AsyncConnectionInterface"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_async\\http_proxy.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: AsyncHTTPProxy, AsyncForwardHTTPConnection, AsyncTunnelHTTPConnection",
        "Contains 19 functions: merge_headers, __init__, create_connection, __init__, can_handle_request, info, is_available, has_expired, is_idle, is_closed, __repr__, __init__, can_handle_request, info, is_available, has_expired, is_idle, is_closed, __repr__",
        "Imports: __future__.annotations, base64, logging, ssl, typing, _backends.base.SOCKET_OPTION, _backends.base.AsyncNetworkBackend, _exceptions.ProxyError, _models.URL, _models.Origin, _models.Request, _models.Response, _models.enforce_bytes, _models.enforce_headers, _models.enforce_url, _ssl.default_ssl_context, _synchronization.AsyncLock, _trace.Trace, connection.AsyncHTTPConnection, connection_pool.AsyncConnectionPool, http11.AsyncHTTP11Connection, interfaces.AsyncConnectionInterface, http2.AsyncHTTP2Connection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_async\\interfaces.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: AsyncRequestInterface, AsyncConnectionInterface",
        "Contains 6 functions: info, can_handle_request, is_available, has_expired, is_idle, is_closed",
        "Imports: __future__.annotations, contextlib, typing, _models.URL, _models.Extensions, _models.HeaderTypes, _models.Origin, _models.Request, _models.Response, _models.enforce_bytes, _models.enforce_headers, _models.enforce_url, _models.include_request_headers"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_async\\socks_proxy.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: AsyncSOCKSProxy, AsyncSocks5Connection",
        "Contains 10 functions: __init__, create_connection, __init__, can_handle_request, is_available, has_expired, is_idle, is_closed, info, __repr__",
        "Imports: __future__.annotations, logging, ssl, socksio, _backends.auto.AutoBackend, _backends.base.AsyncNetworkBackend, _backends.base.AsyncNetworkStream, _exceptions.ConnectionNotAvailable, _exceptions.ProxyError, _models.URL, _models.Origin, _models.Request, _models.Response, _models.enforce_bytes, _models.enforce_url, _ssl.default_ssl_context, _synchronization.AsyncLock, _trace.Trace, connection_pool.AsyncConnectionPool, http11.AsyncHTTP11Connection, interfaces.AsyncConnectionInterface, http2.AsyncHTTP2Connection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_async\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: AsyncHTTP2Connection, AsyncSOCKSProxy",
        "Contains 2 functions: __init__, __init__",
        "Imports: connection.AsyncHTTPConnection, connection_pool.AsyncConnectionPool, http11.AsyncHTTP11Connection, http_proxy.AsyncHTTPProxy, interfaces.AsyncConnectionInterface, http2.AsyncHTTP2Connection, socks_proxy.AsyncSOCKSProxy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: AnyIOStream, AnyIOBackend",
        "Contains 2 functions: __init__, get_extra_info",
        "Imports: __future__.annotations, ssl, typing, anyio, _exceptions.ConnectError, _exceptions.ConnectTimeout, _exceptions.ReadError, _exceptions.ReadTimeout, _exceptions.WriteError, _exceptions.WriteTimeout, _exceptions.map_exceptions, _utils.is_socket_readable, base.SOCKET_OPTION, base.AsyncNetworkBackend, base.AsyncNetworkStream"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AutoBackend",
        "Contains 0 functions: ",
        "Imports: __future__.annotations, typing, _synchronization.current_async_library, base.SOCKET_OPTION, base.AsyncNetworkBackend, base.AsyncNetworkStream, trio.TrioBackend, anyio.AnyIOBackend"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_backends\\base.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: NetworkStream, NetworkBackend, AsyncNetworkStream, AsyncNetworkBackend",
        "Contains 9 functions: read, write, close, start_tls, get_extra_info, connect_tcp, connect_unix_socket, sleep, get_extra_info",
        "Imports: __future__.annotations, ssl, time, typing"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_backends\\mock.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: MockSSLObject, MockStream, MockBackend, AsyncMockStream, AsyncMockBackend",
        "Contains 17 functions: __init__, selected_alpn_protocol, __init__, read, write, close, start_tls, get_extra_info, __repr__, __init__, connect_tcp, connect_unix_socket, sleep, __init__, get_extra_info, __repr__, __init__",
        "Imports: __future__.annotations, ssl, typing, _exceptions.ReadError, base.SOCKET_OPTION, base.AsyncNetworkBackend, base.AsyncNetworkStream, base.NetworkBackend, base.NetworkStream"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_backends\\sync.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: TLSinTLSStream, SyncStream, SyncBackend",
        "Contains 15 functions: __init__, _perform_io, read, write, close, start_tls, get_extra_info, __init__, read, write, close, start_tls, get_extra_info, connect_tcp, connect_unix_socket",
        "Imports: __future__.annotations, functools, socket, ssl, sys, typing, _exceptions.ConnectError, _exceptions.ConnectTimeout, _exceptions.ExceptionMapping, _exceptions.ReadError, _exceptions.ReadTimeout, _exceptions.WriteError, _exceptions.WriteTimeout, _exceptions.map_exceptions, _utils.is_socket_readable, base.SOCKET_OPTION, base.NetworkBackend, base.NetworkStream"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_backends\\trio.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TrioStream, TrioBackend",
        "Contains 3 functions: __init__, get_extra_info, _get_socket_stream",
        "Imports: __future__.annotations, ssl, typing, trio, _exceptions.ConnectError, _exceptions.ConnectTimeout, _exceptions.ExceptionMapping, _exceptions.ReadError, _exceptions.ReadTimeout, _exceptions.WriteError, _exceptions.WriteTimeout, _exceptions.map_exceptions, base.SOCKET_OPTION, base.AsyncNetworkBackend, base.AsyncNetworkStream"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_backends\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_sync\\connection.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: HTTPConnection",
        "Contains 14 functions: exponential_backoff, __init__, handle_request, _connect, can_handle_request, close, is_available, has_expired, is_idle, is_closed, info, __repr__, __enter__, __exit__",
        "Imports: __future__.annotations, itertools, logging, ssl, types, typing, _backends.sync.SyncBackend, _backends.base.SOCKET_OPTION, _backends.base.NetworkBackend, _backends.base.NetworkStream, _exceptions.ConnectError, _exceptions.ConnectTimeout, _models.Origin, _models.Request, _models.Response, _ssl.default_ssl_context, _synchronization.Lock, _trace.Trace, http11.HTTP11Connection, interfaces.ConnectionInterface, http2.HTTP2Connection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_sync\\connection_pool.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: PoolRequest, ConnectionPool, PoolByteStream",
        "Contains 18 functions: __init__, assign_to_connection, clear_connection, wait_for_connection, is_queued, __init__, create_connection, connections, handle_request, _assign_requests_to_connections, _close_connections, close, __enter__, __exit__, __repr__, __init__, __iter__, close",
        "Imports: __future__.annotations, ssl, sys, types, typing, _backends.sync.SyncBackend, _backends.base.SOCKET_OPTION, _backends.base.NetworkBackend, _exceptions.ConnectionNotAvailable, _exceptions.UnsupportedProtocol, _models.Origin, _models.Proxy, _models.Request, _models.Response, _synchronization.Event, _synchronization.ShieldCancellation, _synchronization.ThreadLock, connection.HTTPConnection, interfaces.ConnectionInterface, interfaces.RequestInterface, http_proxy.TunnelHTTPConnection, socks_proxy.Socks5Connection, http_proxy.ForwardHTTPConnection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_sync\\http11.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: HTTPConnectionState, HTTP11Connection, HTTP11ConnectionByteStream, HTTP11UpgradeStream",
        "Contains 28 functions: __init__, handle_request, _send_request_headers, _send_request_body, _send_event, _receive_response_headers, _receive_response_body, _receive_event, _response_closed, close, can_handle_request, is_available, has_expired, is_idle, is_closed, info, __repr__, __enter__, __exit__, __init__, __iter__, close, __init__, read, write, close, start_tls, get_extra_info",
        "Imports: __future__.annotations, enum, logging, ssl, time, types, typing, h11, _backends.base.NetworkStream, _exceptions.ConnectionNotAvailable, _exceptions.LocalProtocolError, _exceptions.RemoteProtocolError, _exceptions.WriteError, _exceptions.map_exceptions, _models.Origin, _models.Request, _models.Response, _synchronization.Lock, _synchronization.ShieldCancellation, _trace.Trace, interfaces.ConnectionInterface"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_sync\\http2.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: HTTPConnectionState, HTTP2Connection, HTTP2ConnectionByteStream",
        "Contains 30 functions: has_body_headers, __init__, handle_request, _send_connection_init, _send_request_headers, _send_request_body, _send_stream_data, _send_end_stream, _receive_response, _receive_response_body, _receive_stream_event, _receive_events, _receive_remote_settings_change, _response_closed, close, _read_incoming_data, _write_outgoing_data, _wait_for_outgoing_flow, can_handle_request, is_available, has_expired, is_idle, is_closed, info, __repr__, __enter__, __exit__, __init__, __iter__, close",
        "Imports: __future__.annotations, enum, logging, time, types, typing, h2.config, h2.connection, h2.events, h2.exceptions, h2.settings, _backends.base.NetworkStream, _exceptions.ConnectionNotAvailable, _exceptions.LocalProtocolError, _exceptions.RemoteProtocolError, _models.Origin, _models.Request, _models.Response, _synchronization.Lock, _synchronization.Semaphore, _synchronization.ShieldCancellation, _trace.Trace, interfaces.ConnectionInterface"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_sync\\http_proxy.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: HTTPProxy, ForwardHTTPConnection, TunnelHTTPConnection",
        "Contains 23 functions: merge_headers, __init__, create_connection, __init__, handle_request, can_handle_request, close, info, is_available, has_expired, is_idle, is_closed, __repr__, __init__, handle_request, can_handle_request, close, info, is_available, has_expired, is_idle, is_closed, __repr__",
        "Imports: __future__.annotations, base64, logging, ssl, typing, _backends.base.SOCKET_OPTION, _backends.base.NetworkBackend, _exceptions.ProxyError, _models.URL, _models.Origin, _models.Request, _models.Response, _models.enforce_bytes, _models.enforce_headers, _models.enforce_url, _ssl.default_ssl_context, _synchronization.Lock, _trace.Trace, connection.HTTPConnection, connection_pool.ConnectionPool, http11.HTTP11Connection, interfaces.ConnectionInterface, http2.HTTP2Connection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_sync\\interfaces.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: RequestInterface, ConnectionInterface",
        "Contains 10 functions: request, stream, handle_request, close, info, can_handle_request, is_available, has_expired, is_idle, is_closed",
        "Imports: __future__.annotations, contextlib, typing, _models.URL, _models.Extensions, _models.HeaderTypes, _models.Origin, _models.Request, _models.Response, _models.enforce_bytes, _models.enforce_headers, _models.enforce_url, _models.include_request_headers"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_sync\\socks_proxy.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: SOCKSProxy, Socks5Connection",
        "Contains 13 functions: _init_socks5_connection, __init__, create_connection, __init__, handle_request, can_handle_request, close, is_available, has_expired, is_idle, is_closed, info, __repr__",
        "Imports: __future__.annotations, logging, ssl, socksio, _backends.sync.SyncBackend, _backends.base.NetworkBackend, _backends.base.NetworkStream, _exceptions.ConnectionNotAvailable, _exceptions.ProxyError, _models.URL, _models.Origin, _models.Request, _models.Response, _models.enforce_bytes, _models.enforce_url, _ssl.default_ssl_context, _synchronization.Lock, _trace.Trace, connection_pool.ConnectionPool, http11.HTTP11Connection, interfaces.ConnectionInterface, http2.HTTP2Connection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpcore\\_sync\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: HTTP2Connection, SOCKSProxy",
        "Contains 2 functions: __init__, __init__",
        "Imports: connection.HTTPConnection, connection_pool.ConnectionPool, http11.HTTP11Connection, http_proxy.HTTPProxy, interfaces.ConnectionInterface, http2.HTTP2Connection, socks_proxy.SOCKSProxy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_api.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 9 functions: request, stream, get, options, head, post, put, patch, delete",
        "Imports: __future__.annotations, typing, contextlib.contextmanager, _client.Client, _config.DEFAULT_TIMEOUT_CONFIG, _models.Response, _types.AuthTypes, _types.CookieTypes, _types.HeaderTypes, _types.ProxyTypes, _types.QueryParamTypes, _types.RequestContent, _types.RequestData, _types.RequestFiles, _types.TimeoutTypes, _urls.URL, ssl"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_auth.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: Auth, FunctionAuth, BasicAuth, NetRCAuth, DigestAuth, _DigestAuthChallenge",
        "Contains 18 functions: auth_flow, sync_auth_flow, __init__, auth_flow, __init__, auth_flow, _build_auth_header, __init__, auth_flow, _build_auth_header, __init__, auth_flow, _parse_challenge, _build_auth_header, _get_client_nonce, _get_header_value, _resolve_qop, digest",
        "Imports: __future__.annotations, hashlib, os, re, time, typing, base64.b64encode, urllib.request.parse_http_list, _exceptions.ProtocolError, _models.Cookies, _models.Request, _models.Response, _utils.to_bytes, _utils.to_str, _utils.unquote, hashlib._Hash, netrc"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_client.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: UseClientDefault, ClientState, BoundSyncStream, BoundAsyncStream, BaseClient, Client, AsyncClient",
        "Contains 63 functions: _is_https_redirect, _port_or_default, _same_origin, __init__, __iter__, close, __init__, __init__, is_closed, trust_env, _enforce_trailing_slash, _get_proxy_map, timeout, timeout, event_hooks, event_hooks, auth, auth, base_url, base_url, headers, headers, cookies, cookies, params, params, build_request, _merge_url, _merge_cookies, _merge_headers, _merge_queryparams, _build_auth, _build_request_auth, _build_redirect_request, _redirect_method, _redirect_url, _redirect_headers, _redirect_stream, _set_timeout, __init__, _init_transport, _init_proxy_transport, _transport_for_url, request, stream, send, _send_handling_auth, _send_handling_redirects, _send_single_request, get, options, head, post, put, patch, delete, close, __enter__, __exit__, __init__, _init_transport, _init_proxy_transport, _transport_for_url",
        "Imports: __future__.annotations, datetime, enum, logging, time, typing, warnings, contextlib.asynccontextmanager, contextlib.contextmanager, types.TracebackType, __version__.__version__, _auth.Auth, _auth.BasicAuth, _auth.FunctionAuth, _config.DEFAULT_LIMITS, _config.DEFAULT_MAX_REDIRECTS, _config.DEFAULT_TIMEOUT_CONFIG, _config.Limits, _config.Proxy, _config.Timeout, _decoders.SUPPORTED_DECODERS, _exceptions.InvalidURL, _exceptions.RemoteProtocolError, _exceptions.TooManyRedirects, _exceptions.request_context, _models.Cookies, _models.Headers, _models.Request, _models.Response, _status_codes.codes, _transports.base.AsyncBaseTransport, _transports.base.BaseTransport, _transports.default.AsyncHTTPTransport, _transports.default.HTTPTransport, _types.AsyncByteStream, _types.AuthTypes, _types.CertTypes, _types.CookieTypes, _types.HeaderTypes, _types.ProxyTypes, _types.QueryParamTypes, _types.RequestContent, _types.RequestData, _types.RequestExtensions, _types.RequestFiles, _types.SyncByteStream, _types.TimeoutTypes, _urls.URL, _urls.QueryParams, _utils.URLPattern, _utils.get_environment_proxies, ssl, h2, h2"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_config.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: UnsetType, Timeout, Limits, Proxy",
        "Contains 11 functions: create_ssl_context, __init__, as_dict, __eq__, __repr__, __init__, __eq__, __repr__, __init__, raw_auth, __repr__",
        "Imports: __future__.annotations, os, typing, _models.Headers, _types.CertTypes, _types.HeaderTypes, _types.TimeoutTypes, _urls.URL, ssl, ssl, warnings, certifi"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_content.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: ByteStream, IteratorByteStream, AsyncIteratorByteStream, UnattachedStream",
        "Contains 14 functions: encode_content, encode_urlencoded_data, encode_multipart_data, encode_text, encode_html, encode_json, encode_request, encode_response, __init__, __iter__, __init__, __iter__, __init__, __iter__",
        "Imports: __future__.annotations, inspect, warnings, json.dumps, typing.Any, typing.AsyncIterable, typing.AsyncIterator, typing.Iterable, typing.Iterator, typing.Mapping, urllib.parse.urlencode, _exceptions.StreamClosed, _exceptions.StreamConsumed, _multipart.MultipartStream, _types.AsyncByteStream, _types.RequestContent, _types.RequestData, _types.RequestFiles, _types.ResponseContent, _types.SyncByteStream, _utils.peek_filelike_length, _utils.primitive_value_to_str"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_decoders.py": {
      "entityType": "file",
      "observations": [
        "Contains 11 classes: ContentDecoder, IdentityDecoder, DeflateDecoder, GZipDecoder, BrotliDecoder, ZStandardDecoder, MultiDecoder, ByteChunker, TextChunker, TextDecoder, LineDecoder",
        "Contains 31 functions: decode, flush, decode, flush, __init__, decode, flush, __init__, decode, flush, __init__, decode, flush, __init__, decode, flush, __init__, decode, flush, __init__, decode, flush, __init__, decode, flush, __init__, decode, flush, __init__, decode, flush",
        "Imports: __future__.annotations, codecs, io, typing, zlib, _exceptions.DecodingError, brotli, zstandard, brotlicffi"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_exceptions.py": {
      "entityType": "file",
      "observations": [
        "Contains 28 classes: HTTPError, RequestError, TransportError, TimeoutException, ConnectTimeout, ReadTimeout, WriteTimeout, PoolTimeout, NetworkError, ReadError, WriteError, ConnectError, CloseError, ProxyError, UnsupportedProtocol, ProtocolError, LocalProtocolError, RemoteProtocolError, DecodingError, TooManyRedirects, HTTPStatusError, InvalidURL, CookieConflict, StreamError, StreamConsumed, StreamClosed, ResponseNotRead, RequestNotRead",
        "Contains 13 functions: request_context, __init__, request, request, __init__, __init__, __init__, __init__, __init__, __init__, __init__, __init__, __init__",
        "Imports: __future__.annotations, contextlib, typing, _models.Request, _models.Response"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_main.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 14 functions: print_help, get_lexer_for_response, format_request_headers, format_response_headers, print_request_headers, print_response_headers, print_response, format_certificate, trace, download_response, validate_json, validate_auth, handle_help, main",
        "Imports: __future__.annotations, functools, json, sys, typing, click, pygments.lexers, pygments.util, rich.console, rich.markup, rich.progress, rich.syntax, rich.table, _client.Client, _exceptions.RequestError, _models.Response, _status_codes.codes, httpcore"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_models.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: Headers, Request, Response, Cookies, _CookieCompatRequest, _CookieCompatResponse",
        "Contains 88 functions: _is_known_encoding, _normalize_header_key, _normalize_header_value, _parse_content_type_charset, _parse_header_links, _obfuscate_sensitive_headers, __init__, encoding, encoding, raw, keys, values, items, multi_items, get, get_list, update, copy, __getitem__, __setitem__, __delitem__, __contains__, __iter__, __len__, __eq__, __repr__, __init__, _prepare, content, read, __repr__, __getstate__, __setstate__, __init__, _prepare, elapsed, elapsed, request, request, http_version, reason_phrase, url, content, text, encoding, encoding, charset_encoding, _get_content_decoder, is_informational, is_success, is_redirect, is_client_error, is_server_error, is_error, has_redirect_location, raise_for_status, json, cookies, links, num_bytes_downloaded, __repr__, __getstate__, __setstate__, read, iter_bytes, iter_text, iter_lines, iter_raw, close, __init__, extract_cookies, set_cookie_header, set, get, delete, clear, update, __setitem__, __getitem__, __delitem__, __len__, __iter__, __bool__, __repr__, __init__, add_unredirected_header, __init__, info",
        "Imports: __future__.annotations, codecs, datetime, email.message, json, re, typing, urllib.request, collections.abc.Mapping, http.cookiejar.Cookie, http.cookiejar.CookieJar, _content.ByteStream, _content.UnattachedStream, _content.encode_request, _content.encode_response, _decoders.SUPPORTED_DECODERS, _decoders.ByteChunker, _decoders.ContentDecoder, _decoders.IdentityDecoder, _decoders.LineDecoder, _decoders.MultiDecoder, _decoders.TextChunker, _decoders.TextDecoder, _exceptions.CookieConflict, _exceptions.HTTPStatusError, _exceptions.RequestNotRead, _exceptions.ResponseNotRead, _exceptions.StreamClosed, _exceptions.StreamConsumed, _exceptions.request_context, _multipart.get_multipart_boundary_from_content_type, _status_codes.codes, _types.AsyncByteStream, _types.CookieTypes, _types.HeaderTypes, _types.QueryParamTypes, _types.RequestContent, _types.RequestData, _types.RequestExtensions, _types.RequestFiles, _types.ResponseContent, _types.ResponseExtensions, _types.SyncByteStream, _urls.URL, _utils.to_bytes_or_str, _utils.to_str"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_multipart.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: DataField, FileField, MultipartStream",
        "Contains 20 functions: _format_form_param, _guess_content_type, get_multipart_boundary_from_content_type, replacer, __init__, render_headers, render_data, get_length, render, __init__, get_length, render_headers, render_data, render, __init__, _iter_fields, iter_chunks, get_content_length, get_headers, __iter__",
        "Imports: __future__.annotations, io, mimetypes, os, re, typing, pathlib.Path, _types.AsyncByteStream, _types.FileContent, _types.FileTypes, _types.RequestData, _types.RequestFiles, _types.SyncByteStream, _utils.peek_filelike_length, _utils.primitive_value_to_str, _utils.to_bytes"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_status_codes.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: codes",
        "Contains 9 functions: __new__, __str__, get_reason_phrase, is_informational, is_success, is_redirect, is_client_error, is_server_error, is_error",
        "Imports: __future__.annotations, enum.IntEnum"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_types.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: SyncByteStream, AsyncByteStream",
        "Contains 2 functions: __iter__, close",
        "Imports: http.cookiejar.CookieJar, typing.IO, typing.TYPE_CHECKING, typing.Any, typing.AsyncIterable, typing.AsyncIterator, typing.Callable, typing.Dict, typing.Iterable, typing.Iterator, typing.List, typing.Mapping, typing.Optional, typing.Sequence, typing.Tuple, typing.Union, _auth.Auth, _config.Proxy, _config.Timeout, _models.Cookies, _models.Headers, _models.Request, _urls.URL, _urls.QueryParams"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_urlparse.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ParseResult",
        "Contains 12 functions: urlparse, encode_host, normalize_port, validate_path, normalize_path, PERCENT, percent_encoded, quote, authority, netloc, copy_with, __str__",
        "Imports: __future__.annotations, ipaddress, re, typing, idna, _exceptions.InvalidURL"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_urls.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: URL, QueryParams",
        "Contains 50 functions: __init__, scheme, raw_scheme, userinfo, username, password, host, raw_host, port, netloc, path, query, params, raw_path, fragment, is_absolute_url, is_relative_url, copy_with, copy_set_param, copy_add_param, copy_remove_param, copy_merge_params, join, __hash__, __eq__, __str__, __repr__, raw, __init__, keys, values, items, multi_items, get, get_list, set, add, remove, merge, __getitem__, __contains__, __iter__, __len__, __bool__, __hash__, __eq__, __str__, __repr__, update, __setitem__",
        "Imports: __future__.annotations, typing, urllib.parse.parse_qs, urllib.parse.unquote, urllib.parse.urlencode, idna, _types.QueryParamTypes, _urlparse.urlparse, _utils.primitive_value_to_str, urllib.parse.urljoin, collections, warnings"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_utils.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: URLPattern",
        "Contains 15 functions: primitive_value_to_str, get_environment_proxies, to_bytes, to_str, to_bytes_or_str, unquote, peek_filelike_length, is_ipv4_hostname, is_ipv6_hostname, __init__, matches, priority, __hash__, __lt__, __eq__",
        "Imports: __future__.annotations, ipaddress, os, re, typing, urllib.request.getproxies, _types.PrimitiveData, _urls.URL, _urls.URL"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: main",
        "Imports: __version__.__description__, __version__.__title__, __version__.__version__, _api.*, _auth.*, _client.*, _config.*, _content.*, _exceptions.*, _models.*, _status_codes.*, _transports.*, _types.*, _urls.*, _main.main, sys"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\__version__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_transports\\asgi.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: ASGIResponseStream, ASGITransport",
        "Contains 4 functions: is_running_trio, create_event, __init__, __init__",
        "Imports: __future__.annotations, typing, _models.Request, _models.Response, _types.AsyncByteStream, base.AsyncBaseTransport, asyncio, trio, asyncio, sniffio, trio"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_transports\\base.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: BaseTransport, AsyncBaseTransport",
        "Contains 4 functions: __enter__, __exit__, handle_request, close",
        "Imports: __future__.annotations, typing, types.TracebackType, _models.Request, _models.Response"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: ResponseStream, HTTPTransport, AsyncResponseStream, AsyncHTTPTransport",
        "Contains 12 functions: _load_httpcore_exceptions, map_httpcore_exceptions, __init__, __iter__, close, __init__, __enter__, __exit__, handle_request, close, __init__, __init__",
        "Imports: __future__.annotations, contextlib, typing, types.TracebackType, _config.DEFAULT_LIMITS, _config.Limits, _config.Proxy, _config.create_ssl_context, _exceptions.ConnectError, _exceptions.ConnectTimeout, _exceptions.LocalProtocolError, _exceptions.NetworkError, _exceptions.PoolTimeout, _exceptions.ProtocolError, _exceptions.ProxyError, _exceptions.ReadError, _exceptions.ReadTimeout, _exceptions.RemoteProtocolError, _exceptions.TimeoutException, _exceptions.UnsupportedProtocol, _exceptions.WriteError, _exceptions.WriteTimeout, _models.Request, _models.Response, _types.AsyncByteStream, _types.CertTypes, _types.ProxyTypes, _types.SyncByteStream, _urls.URL, base.AsyncBaseTransport, base.BaseTransport, ssl, httpx, httpcore, httpcore, httpcore, httpcore, httpcore, socksio, socksio"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_transports\\mock.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MockTransport",
        "Contains 2 functions: __init__, handle_request",
        "Imports: __future__.annotations, typing, _models.Request, _models.Response, base.AsyncBaseTransport, base.BaseTransport"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_transports\\wsgi.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: WSGIByteStream, WSGITransport",
        "Contains 7 functions: _skip_leading_empty_chunks, __init__, __iter__, close, __init__, handle_request, start_response",
        "Imports: __future__.annotations, io, itertools, sys, typing, _models.Request, _models.Response, _types.SyncByteStream, base.BaseTransport, _typeshed.OptExcInfo, _typeshed.wsgi.WSGIApplication"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\httpx\\_transports\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: asgi.*, base.*, default.*, mock.*, wsgi.*"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\idna\\codec.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: Codec, IncrementalEncoder, IncrementalDecoder, StreamWriter, StreamReader",
        "Contains 5 functions: search_function, encode, decode, _buffer_encode, _buffer_decode",
        "Imports: codecs, re, typing.Any, typing.Optional, typing.Tuple, core.IDNAError, core.alabel, core.decode, core.encode, core.ulabel"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\idna\\compat.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: ToASCII, ToUnicode, nameprep",
        "Imports: typing.Any, typing.Union, core.decode, core.encode"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\idna\\core.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: IDNAError, IDNABidiError, InvalidCodepoint, InvalidCodepointContext",
        "Contains 18 functions: _combining_class, _is_script, _punycode, _unot, valid_label_length, valid_string_length, check_bidi, check_initial_combiner, check_hyphen_ok, check_nfc, valid_contextj, valid_contexto, check_label, alabel, ulabel, uts46_remap, encode, decode",
        "Imports: bisect, re, unicodedata, typing.Optional, typing.Union, .idnadata, intranges.intranges_contain, uts46data.uts46data"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\idna\\idnadata.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\idna\\intranges.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: intranges_from_list, _encode_range, _decode_range, intranges_contain",
        "Imports: bisect, typing.List, typing.Tuple"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\idna\\package_data.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\idna\\uts46data.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 82 functions: _seg_0, _seg_1, _seg_2, _seg_3, _seg_4, _seg_5, _seg_6, _seg_7, _seg_8, _seg_9, _seg_10, _seg_11, _seg_12, _seg_13, _seg_14, _seg_15, _seg_16, _seg_17, _seg_18, _seg_19, _seg_20, _seg_21, _seg_22, _seg_23, _seg_24, _seg_25, _seg_26, _seg_27, _seg_28, _seg_29, _seg_30, _seg_31, _seg_32, _seg_33, _seg_34, _seg_35, _seg_36, _seg_37, _seg_38, _seg_39, _seg_40, _seg_41, _seg_42, _seg_43, _seg_44, _seg_45, _seg_46, _seg_47, _seg_48, _seg_49, _seg_50, _seg_51, _seg_52, _seg_53, _seg_54, _seg_55, _seg_56, _seg_57, _seg_58, _seg_59, _seg_60, _seg_61, _seg_62, _seg_63, _seg_64, _seg_65, _seg_66, _seg_67, _seg_68, _seg_69, _seg_70, _seg_71, _seg_72, _seg_73, _seg_74, _seg_75, _seg_76, _seg_77, _seg_78, _seg_79, _seg_80, _seg_81",
        "Imports: typing.List, typing.Tuple, typing.Union"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\idna\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: core.IDNABidiError, core.IDNAError, core.InvalidCodepoint, core.InvalidCodepointContext, core.alabel, core.check_bidi, core.check_hyphen_ok, core.check_initial_combiner, core.check_label, core.check_nfc, core.decode, core.encode, core.ulabel, core.uts46_remap, core.valid_contextj, core.valid_contexto, core.valid_label_length, core.valid_string_length, intranges.intranges_contain, package_data.__version__"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\kiwisolver\\exceptions.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: BadRequiredStrength, DuplicateConstraint, DuplicateEditVariable, UnknownConstraint, UnknownEditVariable, UnsatisfiableConstraint",
        "Contains 5 functions: __init__, __init__, __init__, __init__, __init__",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\kiwisolver\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: _cext.Constraint, _cext.Expression, _cext.Solver, _cext.Term, _cext.Variable, _cext.__kiwi_version__, _cext.__version__, _cext.strength, exceptions.BadRequiredStrength, exceptions.DuplicateConstraint, exceptions.DuplicateEditVariable, exceptions.UnknownConstraint, exceptions.UnknownEditVariable, exceptions.UnsatisfiableConstraint"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\animation.py": {
      "entityType": "file",
      "observations": [
        "Contains 16 classes: MovieWriterRegistry, AbstractMovieWriter, MovieWriter, FileMovieWriter, PillowWriter, FFMpegBase, FFMpegWriter, FFMpegFileWriter, ImageMagickBase, ImageMagickWriter, ImageMagickFileWriter, HTMLWriter, Animation, TimedAnimation, ArtistAnimation, FuncAnimation",
        "Contains 91 functions: adjusted_figsize, _included_frames, _embedded_frames, _validate_grabframe_kwargs, correct_roundoff, __init__, register, is_available, __iter__, list, __getitem__, __init__, setup, frame_size, _supports_transparency, grab_frame, finish, saving, __init__, _adjust_frame_size, setup, _run, finish, grab_frame, _args, bin_path, isAvailable, __init__, setup, __del__, frame_format, frame_format, _base_temp_name, grab_frame, finish, _supports_transparency, isAvailable, setup, grab_frame, finish, _supports_transparency, output_args, _args, _args, _supports_transparency, _args, bin_path, isAvailable, isAvailable, __init__, setup, grab_frame, finish, __init__, __del__, _start, _stop, save, _step, new_frame_seq, new_saved_frame_seq, _draw_next_frame, _init_draw, _pre_draw, _draw_frame, _post_draw, _blit_draw, _blit_clear, _setup_blit, _on_resize, _end_redraw, to_html5_video, to_jshtml, _repr_html_, pause, resume, __init__, _step, __init__, _init_draw, _pre_draw, _draw_frame, __init__, new_frame_seq, new_saved_frame_seq, _init_draw, _draw_frame, wrapper, _pre_composite_to_white, gen, iter_frames",
        "Imports: abc, base64, contextlib, io.BytesIO, io.TextIOWrapper, itertools, logging, pathlib.Path, shutil, subprocess, sys, tempfile.TemporaryDirectory, uuid, warnings, numpy, PIL.Image, matplotlib, matplotlib._animation_data.DISPLAY_TEMPLATE, matplotlib._animation_data.INCLUDED_FRAMES, matplotlib._animation_data.JS_INCLUDE, matplotlib._animation_data.STYLE_INCLUDE, matplotlib._api, matplotlib.cbook, matplotlib.colors"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\artist.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: _Unset, Artist, ArtistInspector",
        "Contains 106 functions: _prevent_rasterization, allow_rasterization, _finalize_rasterization, _stale_axes_callback, _get_tightbbox_for_layout_only, getp, setp, kwdoc, draw_wrapper, draw_wrapper, draw_wrapper, __repr__, __init_subclass__, _update_set_signature_and_docstring, __init__, __getstate__, remove, have_units, convert_xunits, convert_yunits, axes, axes, stale, stale, get_window_extent, get_tightbbox, add_callback, remove_callback, pchanged, is_transform_set, set_transform, get_transform, get_children, _different_canvas, contains, pickable, pick, set_picker, get_picker, get_url, set_url, get_gid, set_gid, get_snap, set_snap, get_sketch_params, set_sketch_params, set_path_effects, get_path_effects, get_figure, set_figure, set_clip_box, set_clip_path, get_alpha, get_visible, get_animated, get_in_layout, _fully_clipped_to_axes, get_clip_on, get_clip_box, get_clip_path, get_transformed_clip_path_and_affine, set_clip_on, _set_gc_clip, get_rasterized, set_rasterized, get_agg_filter, set_agg_filter, draw, set_alpha, _set_alpha_for_array, set_visible, set_animated, set_in_layout, get_label, set_label, get_zorder, set_zorder, sticky_edges, update_from, properties, _update_props, update, _internal_update, set, _cm_set, findobj, get_cursor_data, format_cursor_data, get_mouseover, set_mouseover, __init__, get_aliases, get_valid_values, _replace_path, get_setters, number_of_parameters, is_alias, aliased_name, aliased_name_rest, pprint_setters, pprint_setters_rest, properties, pprint_getters, matchfunc, matchfunc",
        "Imports: collections.namedtuple, contextlib, functools.cache, functools.reduce, functools.wraps, inspect, inspect.Signature, inspect.Parameter, logging, numbers.Number, numbers.Real, operator, re, warnings, numpy, matplotlib, ._api, .cbook, path.Path, transforms.BboxBase, transforms.Bbox, transforms.IdentityTransform, transforms.Transform, transforms.TransformedBbox, transforms.TransformedPatchPath, transforms.TransformedPath, backend_bases.PickEvent, matplotlib.patches.Patch, matplotlib.patches.Rectangle"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\axis.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: Tick, XTick, YTick, Ticker, _LazyTickList, Axis, XAxis, YAxis",
        "Contains 172 functions: _make_getset_interval, __init__, _set_labelrotation, _pad, _apply_tickdir, get_tickdir, get_tick_padding, get_children, set_clip_path, contains, set_pad, get_pad, get_loc, draw, set_url, _set_artist_props, get_view_interval, _apply_params, update_position, _get_text1_transform, _get_text2_transform, __init__, _get_text1_transform, _get_text2_transform, _apply_tickdir, update_position, get_view_interval, __init__, _get_text1_transform, _get_text2_transform, _apply_tickdir, update_position, get_view_interval, __init__, locator, locator, formatter, formatter, __init__, __get__, __str__, __init__, isDefault_majloc, isDefault_majloc, isDefault_majfmt, isDefault_majfmt, isDefault_minloc, isDefault_minloc, isDefault_minfmt, isDefault_minfmt, _get_shared_axes, _get_shared_axis, _get_axis_name, get_remove_overlapping_locs, set_remove_overlapping_locs, set_label_coords, get_transform, get_scale, _set_scale, _set_axes_scale, limit_range_for_scale, _get_autoscale_on, _set_autoscale_on, get_children, _reset_major_tick_kw, _reset_minor_tick_kw, clear, reset_ticks, minorticks_on, minorticks_off, set_tick_params, get_tick_params, _translate_tick_params, set_clip_path, get_view_interval, set_view_interval, get_data_interval, set_data_interval, get_inverted, set_inverted, set_default_intervals, _set_lim, _set_artist_props, _update_ticks, _get_ticklabel_bboxes, get_tightbbox, get_tick_padding, draw, get_gridlines, set_label, get_label, get_offset_text, get_pickradius, get_majorticklabels, get_minorticklabels, get_ticklabels, get_majorticklines, get_minorticklines, get_ticklines, get_majorticklocs, get_minorticklocs, get_ticklocs, get_ticks_direction, _get_tick, _get_tick_label_size, _copy_tick_props, get_label_text, get_major_locator, get_minor_locator, get_major_formatter, get_minor_formatter, get_major_ticks, get_minor_ticks, grid, update_units, _update_axisinfo, have_units, convert_units, get_converter, set_converter, _set_converter, set_units, get_units, set_label_text, set_major_formatter, set_minor_formatter, _set_formatter, set_major_locator, set_minor_locator, set_pickradius, _format_with_dict, set_ticklabels, _set_tick_locations, set_ticks, _get_tick_boxes_siblings, _update_label_position, _update_offset_text_position, axis_date, get_tick_space, _get_ticks_position, get_label_position, set_label_position, get_minpos, getter, setter, __init__, _init, contains, set_label_position, _update_label_position, _update_offset_text_position, set_ticks_position, tick_top, tick_bottom, get_ticks_position, get_minpos, set_default_intervals, get_tick_space, __init__, _init, contains, set_label_position, _update_label_position, _update_offset_text_position, set_offset_position, set_ticks_position, tick_right, tick_left, get_ticks_position, get_minpos, set_default_intervals, get_tick_space",
        "Imports: datetime, functools, logging, numbers.Real, warnings, numpy, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib.artist, matplotlib.colors, matplotlib.lines, matplotlib.scale, matplotlib.text, matplotlib.ticker, matplotlib.transforms, matplotlib.units, dateutil.tz"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backend_bases.py": {
      "entityType": "file",
      "observations": [
        "Contains 22 classes: RendererBase, GraphicsContextBase, TimerBase, Event, DrawEvent, ResizeEvent, CloseEvent, LocationEvent, MouseButton, MouseEvent, PickEvent, KeyEvent, FigureCanvasBase, NonGuiException, FigureManagerBase, _Mode, NavigationToolbar2, ToolContainerBase, _Backend, ShowBase, Done, Show",
        "Contains 192 functions: register_backend, get_registered_canvas_class, _key_handler, _mouse_handler, _get_renderer, _no_output_draw, _is_non_interactive_terminal_ipython, _allow_interrupt, key_press_handler, button_press_handler, __init__, open_group, close_group, draw_path, draw_markers, draw_path_collection, draw_quad_mesh, draw_gouraud_triangles, _iter_collection_raw_paths, _iter_collection_uses_per_path, _iter_collection, get_image_magnification, draw_image, option_image_nocomposite, option_scale_image, draw_tex, draw_text, _draw_text_as_path, get_text_width_height_descent, flipy, get_canvas_width_height, get_texmanager, new_gc, points_to_pixels, start_rasterizing, stop_rasterizing, start_filter, stop_filter, _draw_disabled, __init__, copy_properties, restore, get_alpha, get_antialiased, get_capstyle, get_clip_rectangle, get_clip_path, get_dashes, get_forced_alpha, get_joinstyle, get_linewidth, get_rgb, get_url, get_gid, get_snap, set_alpha, set_antialiased, set_capstyle, set_clip_rectangle, set_clip_path, set_dashes, set_foreground, set_joinstyle, set_linewidth, set_url, set_gid, set_snap, set_hatch, get_hatch, get_hatch_path, get_hatch_color, set_hatch_color, get_hatch_linewidth, set_hatch_linewidth, get_sketch_params, set_sketch_params, __init__, __del__, start, stop, _timer_start, _timer_stop, interval, interval, single_shot, single_shot, add_callback, remove_callback, _timer_set_interval, _timer_set_single_shot, _on_timer, __init__, _process, __init__, __init__, __init__, _set_inaxes, __init__, __str__, __init__, __init__, _draw, save_args_and_handle_sigint, supports_blit, __init__, _fix_ipython_backend2gui, new_manager, _idle_draw_cntx, is_saving, blit, inaxes, grab_mouse, release_mouse, set_cursor, draw, draw_idle, device_pixel_ratio, _set_device_pixel_ratio, get_width_height, get_supported_filetypes, get_supported_filetypes_grouped, _switch_canvas_and_return_print_method, print_figure, get_default_filetype, get_default_filename, mpl_connect, mpl_disconnect, new_timer, flush_events, start_event_loop, stop_event_loop, _get_uniform_gridstate, __init__, create_with_canvas, start_main_loop, pyplot_show, show, destroy, full_screen_toggle, resize, get_window_title, set_window_title, __str__, _navigate_mode, __init__, set_message, draw_rubberband, remove_rubberband, home, back, forward, _update_cursor, _wait_cursor_for_draw_cm, _mouse_event_to_message, mouse_move, _zoom_pan_handler, _start_event_axes_interaction, pan, press_pan, drag_pan, release_pan, zoom, press_zoom, drag_zoom, release_zoom, push_current, _update_view, configure_subplots, save_figure, update, set_history_buttons, __init__, _tool_toggled_cbk, add_tool, _get_image_filename, trigger_tool, add_toolitem, toggle_toolitem, remove_toolitem, set_message, new_figure_manager, new_figure_manager_given_figure, draw_if_interactive, show, export, __call__, cycle_or_default, notify_axes_change, _ax_filter, _capture_events, on_tool_fig_close, mainloop",
        "Imports: collections.namedtuple, contextlib.ExitStack, contextlib.contextmanager, contextlib.nullcontext, enum.Enum, enum.IntEnum, functools, importlib, inspect, io, itertools, logging, os, pathlib, signal, socket, sys, time, weakref, weakref.WeakKeyDictionary, numpy, matplotlib, matplotlib._api, matplotlib.backend_tools, matplotlib.cbook, matplotlib.colors, matplotlib._docstring, matplotlib.text, matplotlib._tight_bbox, matplotlib.transforms, matplotlib.widgets, matplotlib.is_interactive, matplotlib.rcParams, matplotlib._pylab_helpers.Gcf, matplotlib.backend_managers.ToolManager, matplotlib.cbook._setattr_cm, matplotlib.layout_engine.ConstrainedLayoutEngine, matplotlib.path.Path, matplotlib.texmanager.TexManager, matplotlib.transforms.Affine2D, matplotlib._enums.JoinStyle, matplotlib._enums.CapStyle, matplotlib.collections.QuadMesh, matplotlib.figure.Figure, IPython, IPython.core.pylabtools, matplotlib.figure.Figure, matplotlib.figure.Figure, backends.registry.backend_registry"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backend_managers.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: ToolEvent, ToolTriggerEvent, ToolManagerMessageEvent, ToolManager",
        "Contains 22 functions: __init__, __init__, __init__, __init__, canvas, figure, figure, set_figure, toolmanager_connect, toolmanager_disconnect, message_event, active_toggle, get_tool_keymap, _remove_keys, update_keymap, remove_tool, add_tool, _handle_toggle, trigger_tool, _key_press, tools, get_tool",
        "Imports: matplotlib._api, matplotlib.backend_tools, matplotlib.cbook, matplotlib.widgets"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backend_tools.py": {
      "entityType": "file",
      "observations": [
        "Contains 26 classes: Cursors, ToolBase, ToolToggleBase, ToolSetCursor, ToolCursorPosition, RubberbandBase, ToolQuit, ToolQuitAll, ToolGrid, ToolMinorGrid, ToolFullScreen, AxisScaleBase, ToolYScale, ToolXScale, ToolViewsPositions, ViewsPositionsBase, ToolHome, ToolBack, ToolForward, ConfigureSubplotsBase, SaveFigureBase, ZoomPanBase, ToolZoom, ToolPan, ToolHelpBase, ToolCopyToClipboardBase",
        "Contains 69 functions: _register_tool_class, _find_tool_class, add_tools_to_manager, add_tools_to_container, __init__, set_figure, _make_classic_style_pseudo_toolbar, trigger, __init__, trigger, enable, disable, toggled, set_figure, __init__, set_figure, _add_tool_cbk, _tool_trigger_cbk, _set_cursor_cbk, __init__, set_figure, send_message, trigger, draw_rubberband, remove_rubberband, trigger, trigger, trigger, trigger, trigger, trigger, enable, disable, set_scale, set_scale, __init__, add_figure, clear, update_view, push_current, _axes_pos, update_home_views, home, back, forward, trigger, __init__, enable, disable, trigger, scroll_zoom, __init__, _cancel_action, _press, _switch_on_zoom_mode, _switch_off_zoom_mode, _mouse_move, _release, __init__, _cancel_action, _press, _release, _mouse_move, format_shortcut, _format_tool_keymap, _get_help_entries, _get_help_text, _get_help_html, trigger",
        "Imports: enum, functools, re, time, types.SimpleNamespace, uuid, weakref.WeakKeyDictionary, numpy, matplotlib, matplotlib._pylab_helpers.Gcf, matplotlib._api, matplotlib.cbook, matplotlib.backend_bases.NavigationToolbar2"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\bezier.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: NonIntersectingPathException, BezierSegment",
        "Contains 23 functions: _comb, get_intersection, get_normal_points, _de_casteljau1, split_de_casteljau, find_bezier_t_intersecting_with_closedpath, split_bezier_intersecting_with_closedpath, split_path_inout, inside_circle, get_cos_sin, check_if_parallel, get_parallels, find_control_points, make_wedged_bezier2, __init__, __call__, point_at_t, control_points, dimension, degree, polynomial_coefficients, axis_aligned_extrema, _f",
        "Imports: functools.lru_cache, math, warnings, numpy, matplotlib._api, path.Path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\category.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: StrCategoryConverter, StrCategoryLocator, StrCategoryFormatter, UnitData",
        "Contains 14 functions: convert, axisinfo, default_units, _validate_unit, __init__, __call__, tick_values, __init__, __call__, format_ticks, _text, __init__, _str_is_convertible, update",
        "Imports: collections.OrderedDict, dateutil.parser, itertools, logging, numpy, matplotlib._api, matplotlib.cbook, matplotlib.ticker, matplotlib.units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\cbook.py": {
      "entityType": "file",
      "observations": [
        "Contains 10 classes: _ExceptionInfo, _StrongRef, _UnhashDict, CallbackRegistry, silent_list, _Stack, Grouper, GrouperView, _OrderedSet, subcls",
        "Contains 119 functions: _get_running_interactive_framework, _exception_printer, _weak_or_strong_ref, _local_over_kwdict, strip_math, _strip_comment, is_writable_file_like, file_requires_unicode, to_filehandle, open_file_cm, is_scalar_or_string, get_sample_data, _get_data_path, flatten, safe_masked_invalid, print_cycles, simple_linear_interpolation, delete_masked_points, _combine_masks, _broadcast_with_masks, boxplot_stats, contiguous_regions, is_math_text, _to_unmasked_float_array, _check_1d, _reshape_2D, violin_stats, pts_to_prestep, pts_to_poststep, pts_to_midstep, index_of, safe_first_element, _safe_first_finite, sanitize_sequence, normalize_kwargs, _lock_path, _topmost_artist, _str_equal, _str_lower_equal, _array_perimeter, _unfold, _array_patch_perimeters, _setattr_cm, _premultiplied_argb32_to_unmultiplied_rgba8888, _unmultiplied_rgba8888_to_premultiplied_argb32, _get_nonzero_slices, _pformat_subprocess, _check_and_log_subprocess, _setup_new_guiapp, _format_approx, _g_sig_digits, _unikey_or_keysym_to_mplkey, _make_class_factory, _picklable_class_constructor, _is_torch_array, _is_jax_array, _is_pandas_dataframe, _is_tensorflow_array, _unpack_to_numpy, _auto_format_str, __init__, from_exception, to_exception, __init__, __call__, __eq__, __hash__, __init__, __setitem__, __getitem__, pop, __iter__, __init__, __getstate__, __setstate__, connect, _connect_picklable, _remove_proxy, disconnect, process, blocked, __init__, __repr__, __init__, clear, __call__, __len__, __getitem__, forward, back, push, home, print_path, recurse, __init__, __getstate__, __setstate__, __contains__, join, joined, remove, __iter__, get_siblings, __init__, __contains__, __iter__, joined, get_siblings, _bootstrap_median, _compute_conf_interval, safe_isfinite, __init__, __contains__, __iter__, __len__, add, discard, class_factory, __reduce__",
        "Imports: collections, collections.abc, contextlib, functools, gzip, itertools, math, operator, os, pathlib.Path, shlex, subprocess, sys, time, traceback, types, weakref, numpy, matplotlib, matplotlib._api, matplotlib._c_internal_utils, numpy.exceptions.VisibleDeprecationWarning, gc, matplotlib.artist.Artist, numpy.VisibleDeprecationWarning, gi.repository.GLib, bz2"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\cm.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ColormapRegistry",
        "Contains 12 functions: _gen_cmap_registry, get_cmap, _ensure_cmap, __init__, __getitem__, __iter__, __len__, __str__, __call__, register, unregister, get_cmap",
        "Imports: collections.abc.Mapping, matplotlib, matplotlib._api, matplotlib.colors, matplotlib.colorizer._ScalarMappable, matplotlib._cm.datad, matplotlib._cm_listed.cmaps, matplotlib._cm_multivar.cmap_families, matplotlib._cm_bivar.cmaps"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\collections.py": {
      "entityType": "file",
      "observations": [
        "Contains 17 classes: Collection, _CollectionWithSizes, PathCollection, PolyCollection, FillBetweenPolyCollection, RegularPolyCollection, StarPolygonCollection, AsteriskPolygonCollection, LineCollection, EventCollection, CircleCollection, EllipseCollection, PatchCollection, TriMesh, _MeshData, QuadMesh, PolyQuadMesh",
        "Contains 139 functions: __init__, get_paths, set_paths, get_transforms, get_offset_transform, set_offset_transform, get_datalim, get_window_extent, _prepare_points, draw, set_pickradius, get_pickradius, contains, set_urls, get_urls, set_hatch, get_hatch, set_hatch_linewidth, get_hatch_linewidth, set_offsets, get_offsets, _get_default_linewidth, set_linewidth, set_linestyle, set_capstyle, get_capstyle, set_joinstyle, get_joinstyle, _bcast_lwls, get_antialiased, set_antialiased, _get_default_antialiased, set_color, _get_default_facecolor, _set_facecolor, set_facecolor, get_facecolor, get_edgecolor, _get_default_edgecolor, _set_edgecolor, set_edgecolor, set_alpha, get_linewidth, get_linestyle, _set_mappable_flags, update_scalarmappable, get_fill, update_from, get_sizes, set_sizes, draw, __init__, get_paths, legend_elements, __init__, set_verts, set_verts_and_codes, __init__, _f_dir_from_t, _f_direction, set_data, get_datalim, _make_verts, _get_data_mask, _validate_shapes, _make_verts_for_region, _get_interpolating_points, _get_diff_root, _fix_pts_xy_order, __init__, get_numsides, get_rotation, draw, __init__, set_segments, get_segments, _get_default_linewidth, _get_default_antialiased, _get_default_edgecolor, _get_default_facecolor, set_alpha, set_color, get_color, set_gapcolor, _set_gapcolor, get_gapcolor, _get_inverse_paths_linestyles, __init__, get_positions, set_positions, add_positions, is_horizontal, get_orientation, switch_orientation, set_orientation, get_linelength, set_linelength, get_lineoffset, set_lineoffset, get_linewidth, get_linewidths, get_color, __init__, __init__, _set_transforms, set_widths, set_heights, set_angles, get_widths, get_heights, get_angles, draw, __init__, set_paths, __init__, get_paths, set_paths, convert_mesh_to_paths, draw, __init__, set_array, get_coordinates, get_edgecolor, get_facecolor, _convert_mesh_to_paths, _convert_mesh_to_triangles, __init__, get_paths, set_paths, get_datalim, draw, get_cursor_data, __init__, _get_unmasked_polys, _set_unmasked_verts, get_edgecolor, get_facecolor, set_array, determine_facecolor",
        "Imports: itertools, functools, math, numbers.Number, numbers.Real, warnings, numpy, matplotlib, ._api, ._path, .artist, .cbook, .colorizer, .colors, ._docstring, .hatch, .lines, .path, .transforms, _enums.JoinStyle, _enums.CapStyle, matplotlib.patheffects.PathEffectRenderer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\colorbar.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: _ColorbarSpine, _ColorbarAxesLocator, Colorbar",
        "Contains 58 functions: _set_ticks_on_axis_warn, _normalize_location_orientation, _get_orientation_from_location, _get_ticklocation_from_orientation, make_axes, make_axes_gridspec, __init__, get_window_extent, set_xy, draw, __init__, __call__, get_subplotspec, __init__, long_axis, locator, locator, minorlocator, minorlocator, formatter, formatter, minorformatter, minorformatter, _cbar_cla, update_normal, _draw_all, _add_solids, _update_dividers, _add_solids_patches, _do_extends, add_lines, update_ticks, _get_ticker_locator_formatter, set_ticks, get_ticks, set_ticklabels, minorticks_on, minorticks_off, set_label, set_alpha, _set_scale, remove, _process_values, _mesh, _forward_boundaries, _inverse_boundaries, _reset_locator_formatter_scale, _locate, _uniform_y, _proportional_y, _get_extension_lengths, _extend_lower, _extend_upper, _short_axis, _get_view, _set_view, _set_view_from_bbox, drag_pan",
        "Imports: logging, numpy, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib.collections, matplotlib.cm, matplotlib.colors, matplotlib.contour, matplotlib.ticker, matplotlib.artist, matplotlib.patches, matplotlib.path, matplotlib.spines, matplotlib.transforms, matplotlib._docstring"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\colorizer.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: Colorizer, _ColorizerInterface, _ScalarMappable, ColorizingArtist",
        "Contains 48 functions: _auto_norm_from_scale, __init__, _scale_norm, norm, norm, to_rgba, _pass_image_data, autoscale, autoscale_None, _set_cmap, cmap, cmap, set_clim, get_clim, changed, vmin, vmin, vmax, vmax, clip, clip, _scale_norm, to_rgba, get_clim, set_clim, get_alpha, cmap, cmap, get_cmap, set_cmap, norm, norm, set_norm, autoscale, autoscale_None, colorbar, colorbar, _format_cursor_data_override, __init__, set_array, get_array, changed, _check_exclusionary_keywords, _get_colorizer, __init__, colorizer, colorizer, _set_colorizer_check_keywords",
        "Imports: functools, numpy, numpy.ma, matplotlib._api, matplotlib.colors, matplotlib.cbook, matplotlib.scale, matplotlib.artist, matplotlib, matplotlib.cm"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\colors.py": {
      "entityType": "file",
      "observations": [
        "Contains 21 classes: _ColorMapping, ColorSequenceRegistry, ColorConverter, Colormap, LinearSegmentedColormap, ListedColormap, MultivarColormap, BivarColormap, SegmentedBivarColormap, BivarColormapFromImage, Normalize, TwoSlopeNorm, CenteredNorm, FuncNorm, SymLogNorm, AsinhNorm, PowerNorm, BoundaryNorm, NoNorm, LightSource, Norm",
        "Contains 161 functions: get_named_colors_mapping, _sanitize_extrema, _is_nth_color, is_color_like, _has_alpha_channel, _check_color_like, same_color, to_rgba, _to_rgba_no_colorcycle, to_rgba_array, to_rgb, to_hex, _create_lookup_table, make_norm_from_scale, _make_norm_from_scale, _create_empty_object_of_class, _picklable_norm_constructor, rgb_to_hsv, hsv_to_rgb, _vector_magnitude, from_levels_and_colors, __init__, __setitem__, __delitem__, __init__, __getitem__, __iter__, __len__, __str__, register, unregister, __init__, __call__, _get_rgba_and_mask, __copy__, __eq__, get_bad, set_bad, get_under, set_under, get_over, set_over, set_extremes, with_extremes, _set_extremes, _init, is_gray, resampled, reversed, _repr_png_, _repr_html_, copy, __init__, _init, set_gamma, from_list, resampled, _reverser, reversed, __init__, _init, resampled, reversed, __init__, __call__, copy, __copy__, __eq__, __getitem__, __iter__, __len__, __str__, get_bad, resampled, with_extremes, combination_mode, _repr_png_, _repr_html_, __init__, __call__, lut, __copy__, __eq__, get_bad, get_outside, resampled, reversed, transposed, with_extremes, _init, shape, origin, _clip, __getitem__, _repr_png_, _repr_html_, copy, __init__, _init, __init__, _init, __init__, vmin, vmin, vmax, vmax, clip, clip, _changed, process_value, __call__, inverse, autoscale, autoscale_None, scaled, __init__, vcenter, vcenter, autoscale_None, __call__, inverse, __init__, autoscale, autoscale_None, vmin, vmin, vmax, vmax, vcenter, vcenter, halfrange, halfrange, linthresh, linthresh, linear_width, linear_width, __init__, __call__, inverse, __init__, __call__, inverse, __call__, inverse, __init__, direction, hillshade, shade_normals, shade, shade_rgb, blend_hsv, blend_soft_light, blend_overlay, color_block, color_block, init, __reduce__, __init__, __call__, inverse, autoscale_None",
        "Imports: base64, collections.abc.Sized, collections.abc.Sequence, collections.abc.Mapping, functools, importlib, inspect, io, itertools, numbers.Real, re, PIL.Image, PIL.PngImagePlugin.PngInfo, matplotlib, numpy, matplotlib._api, matplotlib._cm, matplotlib.cbook, matplotlib.scale, matplotlib._image, _color_data.BASE_COLORS, _color_data.TABLEAU_COLORS, _color_data.CSS4_COLORS, _color_data.XKCD_COLORS"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\container.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: Container, BarContainer, ErrorbarContainer, StemContainer",
        "Contains 8 functions: __repr__, __new__, __init__, remove, get_children, __init__, __init__, __init__",
        "Imports: matplotlib.cbook, matplotlib.artist.Artist"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\contour.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: ContourLabeler, ContourSet, QuadContourSet",
        "Contains 36 functions: _contour_labeler_event_handler, _find_closest_point_on_path, clabel, print_label, too_close, _get_nth_label_width, get_text, locate_label, _split_path_and_get_label_rotation, add_label, add_label_near, pop_label, labels, remove, __init__, get_transform, __getstate__, legend_elements, _process_args, _make_paths_from_contour_generator, _get_lowers_and_uppers, changed, _autolev, _process_contour_level_args, _process_levels, _process_colors, _process_linewidths, _process_linestyles, _find_nearest_contour, find_nearest_contour, draw, _process_args, _contour_args, _check_xyz, _initialize_x_y, interp_vec",
        "Imports: contextlib.ExitStack, functools, math, numbers.Integral, numpy, numpy.ma, matplotlib, matplotlib._api, matplotlib._docstring, matplotlib.backend_bases.MouseButton, matplotlib.lines.Line2D, matplotlib.path.Path, matplotlib.text.Text, matplotlib.ticker, matplotlib.cm, matplotlib.colors, matplotlib.collections, matplotlib.font_manager, matplotlib.cbook, matplotlib.patches, matplotlib.transforms, contourpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\dates.py": {
      "entityType": "file",
      "observations": [
        "Contains 18 classes: DateFormatter, ConciseDateFormatter, AutoDateFormatter, rrulewrapper, DateLocator, RRuleLocator, AutoDateLocator, YearLocator, MonthLocator, WeekdayLocator, DayLocator, HourLocator, MinuteLocator, SecondLocator, MicrosecondLocator, DateConverter, ConciseDateConverter, _SwitchableDateConverter",
        "Contains 78 functions: _get_tzinfo, _reset_epoch_test_example, set_epoch, get_epoch, _dt64_to_ordinalf, _from_ordinalf, datestr2num, date2num, num2date, num2timedelta, drange, _wrap_in_tex, __init__, __call__, set_tzinfo, __init__, __call__, format_ticks, get_offset, format_data_short, __init__, _set_locator, __call__, __init__, set, _update_rrule, _attach_tzinfo, _aware_return_wrapper, __getattr__, __setstate__, __init__, set_tzinfo, datalim_to_dt, viewlim_to_dt, _get_unit, _get_interval, nonsingular, __init__, __call__, tick_values, _create_rrule, _get_unit, get_unit_generic, _get_interval, __init__, __call__, tick_values, nonsingular, _get_unit, get_locator, __init__, _create_rrule, __init__, __init__, __init__, __init__, __init__, __init__, __init__, set_axis, __call__, tick_values, _get_unit, _get_interval, __init__, axisinfo, convert, default_units, __init__, axisinfo, _get_converter, axisinfo, default_units, convert, normalize_arg, normalize_args, inner_func, inner_func",
        "Imports: datetime, functools, logging, re, dateutil.rrule.rrule, dateutil.rrule.MO, dateutil.rrule.TU, dateutil.rrule.WE, dateutil.rrule.TH, dateutil.rrule.FR, dateutil.rrule.SA, dateutil.rrule.SU, dateutil.rrule.YEARLY, dateutil.rrule.MONTHLY, dateutil.rrule.WEEKLY, dateutil.rrule.DAILY, dateutil.rrule.HOURLY, dateutil.rrule.MINUTELY, dateutil.rrule.SECONDLY, dateutil.relativedelta.relativedelta, dateutil.parser, dateutil.tz, numpy, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib.ticker, matplotlib.units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\dviread.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: Text, Dvi, DviFont, Vf, Tfm, PsfontsMap, _LuatexKpsewhich",
        "Contains 66 functions: _dispatch, _mul2012, _parse_enc, find_tex_file, _fontfile, _get_pdftexmap_entry, font_path, font_size, font_effects, glyph_name_or_index, decorate, __init__, __enter__, __exit__, __iter__, close, _output, _read, _read_arg, _set_char_immediate, _set_char, _set_rule, _put_char, _put_char_real, _put_rule, _put_rule_real, _nop, _bop, _eop, _push, _pop, _right, _right_w, _right_x, _down, _down_y, _down_z, _fnt_num_immediate, _fnt_num, _xxx, _fnt_def, _fnt_def_real, _pre, _post, _post_post, _malformed, __init__, __eq__, __ne__, __repr__, _width_of, _height_depth_of, __init__, __getitem__, _read, _init_packet, _finalize_packet, _pre, __init__, __new__, __getitem__, _parse_and_cache_line, __new__, _new_proc, search, wrapper",
        "Imports: collections.namedtuple, enum, functools.lru_cache, functools.partial, functools.wraps, logging, os, pathlib.Path, re, struct, subprocess, sys, numpy, matplotlib._api, matplotlib.cbook, argparse.ArgumentParser, itertools"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\figure.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: _AxesStack, FigureBase, SubFigure, Figure",
        "Contains 125 functions: _stale_figure_callback, figaspect, __init__, as_list, remove, bubble, add, current, __getstate__, __setstate__, __init__, _get_draw_artists, autofmt_xdate, get_children, get_figure, set_figure, contains, get_window_extent, _suplabels, suptitle, get_suptitle, supxlabel, get_supxlabel, supylabel, get_supylabel, get_edgecolor, get_facecolor, get_frameon, set_linewidth, get_linewidth, set_edgecolor, set_facecolor, set_frameon, add_artist, add_axes, add_subplot, _add_axes_internal, subplots, delaxes, _remove_axes, clear, clf, legend, text, colorbar, subplots_adjust, align_xlabels, align_ylabels, align_titles, align_labels, add_gridspec, subfigures, add_subfigure, sca, gca, _gci, _process_projection_requirements, get_default_bbox_extra_artists, get_tightbbox, _norm_per_subplot_kw, _normalize_grid_string, subplot_mosaic, _set_artist_props, __init__, canvas, dpi, dpi, get_dpi, set_dpi, _get_renderer, _redo_transform_rel_fig, get_constrained_layout, get_constrained_layout_pads, get_layout_engine, axes, draw, __str__, __repr__, __init__, pick, _check_layout_engines_compat, set_layout_engine, get_layout_engine, _repr_html_, show, axes, number, number, _get_renderer, _get_dpi, _set_dpi, get_tight_layout, set_tight_layout, get_constrained_layout, set_constrained_layout, set_constrained_layout_pads, get_constrained_layout_pads, set_canvas, figimage, set_size_inches, get_size_inches, get_figwidth, get_figheight, get_dpi, set_dpi, set_figwidth, set_figheight, clear, draw, draw_without_rendering, draw_artist, __getstate__, __setstate__, add_axobserver, savefig, ginput, waitforbuttonpress, tight_layout, _make_array, _identify_keys_and_nested, _do_layout, handler, handler, _recursively_make_subfig_transparent, _recursively_make_axes_transparent",
        "Imports: contextlib.ExitStack, inspect, itertools, functools, logging, numbers.Integral, threading, numpy, matplotlib, matplotlib._blocking_input, matplotlib.backend_bases, matplotlib._docstring, matplotlib.projections, matplotlib.artist.Artist, matplotlib.artist.allow_rasterization, matplotlib.artist._finalize_rasterization, matplotlib.backend_bases.DrawEvent, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.NonGuiException, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases._get_renderer, matplotlib._api, matplotlib.cbook, matplotlib.colorbar, matplotlib.image, matplotlib.axes.Axes, matplotlib.gridspec.GridSpec, matplotlib.gridspec.SubplotParams, matplotlib.layout_engine.ConstrainedLayoutEngine, matplotlib.layout_engine.TightLayoutEngine, matplotlib.layout_engine.LayoutEngine, matplotlib.layout_engine.PlaceHolderLayoutEngine, matplotlib.legend, matplotlib.patches.Rectangle, matplotlib.text.Text, matplotlib.transforms.Affine2D, matplotlib.transforms.Bbox, matplotlib.transforms.BboxTransformTo, matplotlib.transforms.TransformedBbox, matplotlib._pylab_helpers, matplotlib.backends.backend_webagg, matplotlib.pyplot, matplotlib._pylab_helpers"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\font_manager.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: FontEntry, FontProperties, _JSONEncoder, FontManager",
        "Contains 65 functions: get_fontext_synonyms, list_fonts, win32FontDirectory, _get_win32_installed_fonts, _get_fontconfig_fonts, _get_macos_fonts, findSystemFonts, ttfFontProperty, afmFontProperty, _cleanup_fontproperties_init, _json_decode, json_dump, json_load, is_opentype_cff_font, _get_font, _cached_realpath, get_font, _load_fontmanager, _repr_html_, _repr_png_, get_weight, wrapper, __init__, _from_any, __hash__, __eq__, __str__, get_family, get_name, get_style, get_variant, get_weight, get_stretch, get_size, get_file, get_fontconfig_pattern, set_family, set_style, set_variant, set_weight, set_stretch, set_size, set_file, set_fontconfig_pattern, get_math_fontfamily, set_math_fontfamily, copy, default, __init__, addfont, defaultFont, get_default_weight, get_default_size, set_default_weight, _expand_aliases, score_family, score_style, score_variant, score_stretch, score_weight, score_size, findfont, get_font_names, _find_fonts_by_props, _findfont_cached",
        "Imports: __future__.annotations, base64.b64encode, copy, dataclasses, functools.lru_cache, functools, io.BytesIO, json, logging, numbers.Number, os, pathlib.Path, plistlib, re, subprocess, sys, threading, matplotlib, matplotlib._api, matplotlib._afm, matplotlib.cbook, matplotlib.ft2font, matplotlib._fontconfig_pattern.parse_fontconfig_pattern, matplotlib._fontconfig_pattern.generate_fontconfig_pattern, matplotlib.rcsetup._validators, winreg, winreg, matplotlib.figure.Figure"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\gridspec.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: GridSpecBase, GridSpec, GridSpecFromSubplotSpec, SubplotSpec, SubplotParams",
        "Contains 42 functions: __init__, __repr__, get_geometry, get_subplot_params, new_subplotspec, set_width_ratios, get_width_ratios, set_height_ratios, get_height_ratios, get_grid_positions, _check_gridspec_exists, __getitem__, subplots, __init__, update, get_subplot_params, locally_modified_subplot_params, tight_layout, __init__, get_subplot_params, get_topmost_subplotspec, __init__, __repr__, _from_subplot_args, num2, num2, get_gridspec, get_geometry, rowspan, colspan, is_first_row, is_last_row, is_first_col, is_last_col, get_position, get_topmost_subplotspec, __eq__, __hash__, subgridspec, __init__, update, _normalize",
        "Imports: copy, logging, numbers.Integral, numpy, matplotlib, matplotlib._api, matplotlib._pylab_helpers, matplotlib._tight_layout, matplotlib.transforms.Bbox"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\hatch.py": {
      "entityType": "file",
      "observations": [
        "Contains 11 classes: HatchPatternBase, HorizontalHatch, VerticalHatch, NorthEastHatch, SouthEastHatch, Shapes, Circles, SmallCircles, LargeCircles, SmallFilledCircles, Stars",
        "Contains 17 functions: _validate_hatch_pattern, get_path, __init__, set_vertices_and_codes, __init__, set_vertices_and_codes, __init__, set_vertices_and_codes, __init__, set_vertices_and_codes, __init__, set_vertices_and_codes, __init__, __init__, __init__, __init__, __init__",
        "Imports: numpy, matplotlib._api, matplotlib.path.Path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\image.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: _ImageBase, AxesImage, NonUniformImage, PcolorImage, FigureImage, BboxImage",
        "Contains 71 functions: composite_images, _draw_list_compositing_images, _resample, _rgb_to_rgba, imread, imsave, pil_to_array, _pil_png_to_float_array, thumbnail, __init__, __str__, __getstate__, get_size, get_shape, set_alpha, _get_scalar_alpha, changed, _make_image, make_image, _check_unsampled_image, draw, contains, write_png, _normalize_image_array, set_data, set_array, get_interpolation, set_interpolation, get_interpolation_stage, set_interpolation_stage, can_composite, set_resample, get_resample, set_filternorm, get_filternorm, set_filterrad, get_filterrad, __init__, get_window_extent, make_image, _check_unsampled_image, set_extent, get_extent, get_cursor_data, __init__, _check_unsampled_image, make_image, set_data, set_array, set_interpolation, get_extent, set_filternorm, set_filterrad, set_norm, set_cmap, get_cursor_data, __init__, make_image, _check_unsampled_image, set_data, set_array, get_cursor_data, __init__, get_extent, make_image, set_data, __init__, get_window_extent, contains, make_image, flush_images",
        "Imports: math, os, logging, pathlib.Path, warnings, numpy, PIL.Image, PIL.PngImagePlugin, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib._image, matplotlib._image.*, matplotlib.artist, matplotlib.colorizer, matplotlib.backend_bases.FigureCanvasBase, matplotlib.colors, matplotlib.transforms.Affine2D, matplotlib.transforms.BboxBase, matplotlib.transforms.Bbox, matplotlib.transforms.BboxTransform, matplotlib.transforms.BboxTransformTo, matplotlib.transforms.IdentityTransform, matplotlib.transforms.TransformedBbox, urllib.parse, matplotlib.figure.Figure, matplotlib.pyplot, matplotlib.figure.Figure"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\inset.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: InsetIndicator",
        "Contains 13 functions: __init__, _shared_setter, set_alpha, set_edgecolor, set_color, set_linewidth, set_linestyle, _bounds_from_inset_ax, _update_connectors, rectangle, connectors, draw, __getitem__",
        "Imports: ._api, .artist, .transforms, matplotlib.patches.ConnectionPatch, matplotlib.patches.PathPatch, matplotlib.patches.Rectangle, matplotlib.path.Path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\layout_engine.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: LayoutEngine, PlaceHolderLayoutEngine, TightLayoutEngine, ConstrainedLayoutEngine",
        "Contains 14 functions: __init__, set, colorbar_gridspec, adjust_compatible, get, execute, __init__, execute, __init__, execute, set, __init__, execute, set",
        "Imports: contextlib.nullcontext, matplotlib, matplotlib._constrained_layout.do_constrained_layout, matplotlib._tight_layout.get_subplotspec_list, matplotlib._tight_layout.get_tight_layout_figure"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\legend.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: DraggableLegend, Legend",
        "Contains 43 functions: _get_legend_handles, _get_legend_handles_labels, _parse_legend_args, __init__, finalize_offset, _update_loc, _update_bbox_to_anchor, __str__, __init__, _set_artist_props, set_loc, _set_loc, set_ncols, _get_loc, _findoffset, draw, get_default_handler_map, set_default_handler_map, update_default_handler_map, get_legend_handler_map, get_legend_handler, _init_legend_box, _auto_legend_data, get_children, get_frame, get_lines, get_patches, get_texts, set_alignment, get_alignment, set_title, get_title, get_window_extent, get_tightbbox, get_frame_on, set_frame_on, get_bbox_to_anchor, set_bbox_to_anchor, _get_anchored_bbox, _find_best_position, contains, set_draggable, get_draggable",
        "Imports: itertools, logging, numbers, time, numpy, matplotlib, matplotlib._api, matplotlib._docstring, matplotlib.cbook, matplotlib.colors, matplotlib.offsetbox, matplotlib.artist.Artist, matplotlib.artist.allow_rasterization, matplotlib.cbook.silent_list, matplotlib.font_manager.FontProperties, matplotlib.lines.Line2D, matplotlib.patches.Patch, matplotlib.patches.Rectangle, matplotlib.patches.Shadow, matplotlib.patches.FancyBboxPatch, matplotlib.patches.StepPatch, matplotlib.collections.Collection, matplotlib.collections.CircleCollection, matplotlib.collections.LineCollection, matplotlib.collections.PathCollection, matplotlib.collections.PolyCollection, matplotlib.collections.RegularPolyCollection, matplotlib.text.Text, matplotlib.transforms.Bbox, matplotlib.transforms.BboxBase, matplotlib.transforms.TransformedBbox, matplotlib.transforms.BboxTransformTo, matplotlib.transforms.BboxTransformFrom, matplotlib.offsetbox.AnchoredOffsetbox, matplotlib.offsetbox.DraggableOffsetBox, matplotlib.offsetbox.HPacker, matplotlib.offsetbox.VPacker, matplotlib.offsetbox.DrawingArea, matplotlib.offsetbox.TextArea, matplotlib.container.ErrorbarContainer, matplotlib.container.BarContainer, matplotlib.container.StemContainer, .legend_handler, matplotlib.axes.Axes, matplotlib.figure.FigureBase"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\legend_handler.py": {
      "entityType": "file",
      "observations": [
        "Contains 15 classes: HandlerBase, HandlerNpoints, HandlerNpointsYoffsets, HandlerLine2DCompound, HandlerLine2D, HandlerPatch, HandlerStepPatch, HandlerLineCollection, HandlerRegularPolyCollection, HandlerPathCollection, HandlerCircleCollection, HandlerErrorbar, HandlerStem, HandlerTuple, HandlerPolyCollection",
        "Contains 45 functions: update_from_first_child, __init__, _update_prop, _default_update_prop, update_prop, adjust_drawing_area, legend_artist, create_artists, __init__, get_numpoints, get_xdata, __init__, get_ydata, create_artists, create_artists, __init__, _create_patch, create_artists, _create_patch, _create_line, create_artists, get_numpoints, _default_update_prop, create_artists, __init__, get_numpoints, get_sizes, update_prop, create_collection, create_artists, create_collection, create_collection, __init__, get_err_size, create_artists, __init__, get_ydata, create_artists, _copy_collection_props, __init__, create_artists, _update_prop, create_artists, first_color, get_first",
        "Imports: itertools.cycle, numpy, matplotlib.cbook, matplotlib.lines.Line2D, matplotlib.patches.Rectangle, matplotlib.collections"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\lines.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Line2D, AxLine, VertexSelector",
        "Contains 82 functions: _get_dash_pattern, _get_dash_patterns, _get_inverse_dash_pattern, _scale_dashes, segment_hits, _mark_every_path, _slice_or_none, __str__, __init__, contains, get_pickradius, set_pickradius, get_fillstyle, set_fillstyle, set_markevery, get_markevery, set_picker, get_bbox, get_window_extent, set_data, recache_always, recache, _transform_path, _get_transformed_path, set_transform, draw, get_antialiased, get_color, get_drawstyle, get_gapcolor, get_linestyle, get_linewidth, get_marker, get_markeredgecolor, get_markeredgewidth, _get_markerfacecolor, get_markerfacecolor, get_markerfacecoloralt, get_markersize, get_data, get_xdata, get_ydata, get_path, get_xydata, set_antialiased, set_color, set_drawstyle, set_gapcolor, set_linewidth, set_linestyle, set_marker, _set_markercolor, set_markeredgecolor, set_markerfacecolor, set_markerfacecoloralt, set_markeredgewidth, set_markersize, set_xdata, set_ydata, set_dashes, update_from, set_dash_joinstyle, set_solid_joinstyle, get_dash_joinstyle, get_solid_joinstyle, set_dash_capstyle, set_solid_capstyle, get_dash_capstyle, get_solid_capstyle, is_dashed, __init__, get_transform, draw, get_xy1, get_xy2, get_slope, set_xy1, set_xy2, set_slope, __init__, process_selected, onpick",
        "Imports: copy, numbers.Integral, numbers.Number, numbers.Real, logging, numpy, matplotlib, ._api, .cbook, .colors, ._docstring, artist.Artist, artist.allow_rasterization, cbook._to_unmasked_float_array, cbook.ls_mapper, cbook.ls_mapper_r, cbook.STEP_LOOKUP_MAP, markers.MarkerStyle, path.Path, transforms.Bbox, transforms.BboxTransformTo, transforms.TransformedPath, _enums.JoinStyle, _enums.CapStyle, ._path, markers.CARETLEFT, markers.CARETRIGHT, markers.CARETUP, markers.CARETDOWN, markers.CARETLEFTBASE, markers.CARETRIGHTBASE, markers.CARETUPBASE, markers.CARETDOWNBASE, markers.TICKLEFT, markers.TICKRIGHT, markers.TICKUP, markers.TICKDOWN, matplotlib.patheffects.PathEffectRenderer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\markers.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MarkerStyle",
        "Contains 64 functions: __init__, _recache, __bool__, is_filled, get_fillstyle, _set_fillstyle, get_joinstyle, get_capstyle, get_marker, _set_marker, get_path, get_transform, get_alt_path, get_alt_transform, get_snap_threshold, get_user_transform, transformed, rotated, scaled, _set_nothing, _set_custom_marker, _set_path_marker, _set_vertices, _set_tuple_marker, _set_mathtext_path, _half_fill, _set_circle, _set_point, _set_pixel, _set_triangle, _set_triangle_up, _set_triangle_down, _set_triangle_left, _set_triangle_right, _set_square, _set_diamond, _set_thin_diamond, _set_pentagon, _set_star, _set_hexagon1, _set_hexagon2, _set_octagon, _set_vline, _set_hline, _set_tickleft, _set_tickright, _set_tickup, _set_tickdown, _set_tri_down, _set_tri_up, _set_tri_left, _set_tri_right, _set_caretdown, _set_caretup, _set_caretleft, _set_caretright, _set_caretdownbase, _set_caretupbase, _set_caretleftbase, _set_caretrightbase, _set_plus, _set_x, _set_plus_filled, _set_x_filled",
        "Imports: copy, collections.abc.Sized, numpy, matplotlib, ._api, .cbook, path.Path, transforms.IdentityTransform, transforms.Affine2D, _enums.JoinStyle, _enums.CapStyle, matplotlib.text.TextPath"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\mathtext.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MathTextParser",
        "Contains 4 functions: math_to_image, __init__, parse, _parse_cached",
        "Imports: functools, logging, matplotlib, matplotlib._api, matplotlib._mathtext, matplotlib.ft2font.LoadFlags, matplotlib.font_manager.FontProperties, _mathtext.RasterParse, _mathtext.VectorParse, _mathtext.get_unicode_index, matplotlib.figure, matplotlib.backends.backend_agg"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\mlab.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: GaussianKDE",
        "Contains 16 functions: window_hanning, window_none, detrend, detrend_mean, detrend_none, detrend_linear, _spectral_helper, _single_spectrum_helper, psd, csd, specgram, cohere, __init__, scotts_factor, silverman_factor, evaluate",
        "Imports: functools, numbers.Number, numpy, matplotlib._api, matplotlib._docstring, matplotlib.cbook"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\offsetbox.py": {
      "entityType": "file",
      "observations": [
        "Contains 15 classes: OffsetBox, PackerBase, VPacker, HPacker, PaddedBox, DrawingArea, TextArea, AuxTransformBox, AnchoredOffsetbox, AnchoredText, OffsetImage, AnnotationBbox, DraggableBase, DraggableOffsetBox, DraggableAnnotation",
        "Contains 108 functions: _compat_get_offset, _bbox_artist, _get_packed_offsets, _get_aligned_offsets, _get_anchored_bbox, get_offset, __init__, set_figure, axes, contains, set_offset, get_offset, set_width, set_height, get_visible_children, get_children, _get_bbox_and_child_offsets, get_bbox, get_window_extent, draw, __init__, _get_bbox_and_child_offsets, _get_bbox_and_child_offsets, __init__, _get_bbox_and_child_offsets, draw, update_frame, draw_frame, __init__, clip_children, clip_children, get_transform, set_transform, set_offset, get_offset, get_bbox, add_artist, draw, __init__, set_text, get_text, set_multilinebaseline, get_multilinebaseline, set_transform, set_offset, get_offset, get_bbox, draw, __init__, add_artist, get_transform, set_transform, set_offset, get_offset, get_bbox, draw, __init__, set_child, get_child, get_children, get_bbox, get_bbox_to_anchor, set_bbox_to_anchor, get_offset, update_frame, draw, __init__, __init__, set_data, get_data, set_zoom, get_zoom, get_offset, get_children, get_bbox, draw, __str__, __init__, xyann, xyann, anncoords, anncoords, contains, get_children, set_figure, set_fontsize, get_fontsize, get_window_extent, get_tightbbox, update_positions, draw, __init__, _picker, on_motion, on_pick, on_release, _check_still_parented, disconnect, save_offset, update_offset, finalize_offset, __init__, save_offset, update_offset, get_loc_in_canvas, __init__, save_offset, update_offset",
        "Imports: functools, numpy, matplotlib, matplotlib._api, matplotlib._docstring, matplotlib.artist, matplotlib.path, matplotlib.text, matplotlib.transforms, matplotlib.font_manager.FontProperties, matplotlib.image.BboxImage, matplotlib.patches.FancyBboxPatch, matplotlib.patches.FancyArrowPatch, matplotlib.patches.bbox_artist, matplotlib.transforms.Bbox, matplotlib.transforms.BboxBase, matplotlib.transforms.TransformedBbox"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\patches.py": {
      "entityType": "file",
      "observations": [
        "Contains 56 classes: Patch, Shadow, Rectangle, RegularPolygon, PathPatch, StepPatch, Polygon, Wedge, Arrow, FancyArrow, CirclePolygon, Ellipse, Annulus, Circle, Arc, _Style, BoxStyle, ConnectionStyle, ArrowStyle, FancyBboxPatch, FancyArrowPatch, ConnectionPatch, Square, Circle, Ellipse, LArrow, RArrow, DArrow, Round, Round4, Sawtooth, Roundtooth, _Base, Arc3, Angle3, Angle, Arc, Bar, _Base, _Curve, Curve, CurveA, CurveB, CurveAB, CurveFilledA, CurveFilledB, CurveFilledAB, BracketA, BracketB, BracketAB, BarAB, BracketCurve, CurveBracket, Simple, Fancy, Wedge",
        "Contains 255 functions: bbox_artist, draw_bbox, _register_style, _point_along_a_line, __init__, get_verts, _process_radius, contains, contains_point, contains_points, update_from, get_extents, get_transform, get_data_transform, get_patch_transform, get_antialiased, get_edgecolor, get_facecolor, get_linewidth, get_linestyle, set_antialiased, _set_edgecolor, set_edgecolor, _set_facecolor, set_facecolor, set_color, set_alpha, set_linewidth, set_linestyle, set_fill, get_fill, set_capstyle, get_capstyle, set_joinstyle, get_joinstyle, set_hatch, get_hatch, set_hatch_linewidth, get_hatch_linewidth, _draw_paths_with_artist_properties, draw, get_path, get_window_extent, _convert_xy_units, __str__, __init__, _update_transform, get_path, get_patch_transform, draw, __str__, __init__, get_path, _convert_units, get_patch_transform, rotation_point, rotation_point, get_x, get_y, get_xy, get_corners, get_center, get_width, get_height, get_angle, set_x, set_y, set_angle, set_xy, set_width, set_height, set_bounds, get_bbox, __str__, __init__, get_path, get_patch_transform, __str__, __init__, get_path, set_path, __init__, _update_path, get_data, set_data, __str__, __init__, get_path, get_closed, set_closed, get_xy, set_xy, __str__, __init__, _recompute_path, set_center, set_radius, set_theta1, set_theta2, set_width, get_path, __str__, __init__, get_path, get_patch_transform, set_data, __str__, __init__, set_data, _make_verts, __str__, __init__, __str__, __init__, _recompute_transform, get_path, get_patch_transform, set_center, get_center, set_width, get_width, set_height, get_height, set_angle, get_angle, get_corners, get_vertices, get_co_vertices, __init__, __str__, set_center, get_center, set_width, get_width, set_angle, get_angle, set_semimajor, set_semiminor, set_radii, get_radii, _transform_verts, _recompute_path, get_path, __str__, __init__, set_radius, get_radius, __str__, __init__, draw, _update_path, _theta_stretch, __init_subclass__, __new__, get_styles, pprint_styles, register, __str__, __init__, set_boxstyle, get_boxstyle, set_mutation_scale, get_mutation_scale, set_mutation_aspect, get_mutation_aspect, get_path, get_x, get_y, get_width, get_height, set_x, set_y, set_width, set_height, set_bounds, get_bbox, __str__, __init__, set_positions, set_patchA, set_patchB, set_connectionstyle, get_connectionstyle, set_arrowstyle, get_arrowstyle, set_mutation_scale, get_mutation_scale, set_mutation_aspect, get_mutation_aspect, get_path, _get_path_in_displaycoord, draw, __str__, __init__, _get_xy, set_annotation_clip, get_annotation_clip, _get_path_in_displaycoord, _check_xy, draw, line_circle_intersect, segment_circle_intersect, theta_stretch, __init__, __call__, __init__, __call__, __init__, __call__, __init__, __call__, __call__, __init__, __call__, __init__, __call__, __init__, __call__, __init__, _get_sawtooth_vertices, __call__, __call__, _in_patch, _clip, __call__, __init__, connect, __init__, connect, __init__, connect, __init__, connect, __init__, connect, ensure_quadratic_bezier, transmute, __call__, __init__, _get_arrow_wedge, _get_bracket, transmute, __init__, __init__, __init__, __init__, __init__, __init__, __init__, __init__, transmute, __init__, transmute, __init__, transmute",
        "Imports: functools, inspect, math, numbers.Number, numbers.Real, textwrap, types.SimpleNamespace, collections.namedtuple, matplotlib.transforms.Affine2D, numpy, matplotlib, ._api, .artist, .cbook, .colors, ._docstring, .hatch, .lines, .transforms, bezier.NonIntersectingPathException, bezier.get_cos_sin, bezier.get_intersection, bezier.get_parallels, bezier.inside_circle, bezier.make_wedged_bezier2, bezier.split_bezier_intersecting_with_closedpath, bezier.split_path_inout, path.Path, _enums.JoinStyle, _enums.CapStyle, matplotlib.patheffects.PathEffectRenderer, matplotlib.bezier.get_normal_points"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\path.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Path",
        "Contains 45 functions: get_path_collection_extents, __init__, _fast_from_codes_and_verts, _create_closed, _update_values, vertices, vertices, codes, codes, simplify_threshold, simplify_threshold, should_simplify, should_simplify, readonly, copy, __deepcopy__, deepcopy, make_compound_path_from_polys, make_compound_path, __repr__, __len__, iter_segments, iter_bezier, _iter_connected_components, cleaned, transformed, contains_point, contains_points, contains_path, get_extents, intersects_path, intersects_bbox, interpolated, to_polygons, unit_rectangle, unit_regular_polygon, unit_regular_star, unit_regular_asterisk, unit_circle, circle, unit_circle_righthalf, arc, wedge, hatch, clip_to_bbox",
        "Imports: copy, functools.lru_cache, weakref.WeakValueDictionary, numpy, matplotlib, ._api, ._path, cbook._to_unmasked_float_array, cbook.simple_linear_interpolation, bezier.BezierSegment, transforms.Bbox, transforms.Bbox, matplotlib.hatch.get_path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\patheffects.py": {
      "entityType": "file",
      "observations": [
        "Contains 9 classes: AbstractPathEffect, PathEffectRenderer, Normal, Stroke, SimplePatchShadow, SimpleLineShadow, PathPatchEffect, TickedStroke, withEffect",
        "Contains 24 functions: _subclass_with_normal, __init__, _offset_transform, _update_gc, draw_path, __init__, copy_with_path_effect, __getattribute__, draw_path, draw_markers, draw_path_collection, open_group, close_group, __init__, draw_path, __init__, draw_path, __init__, draw_path, __init__, draw_path, __init__, draw_path, draw_path",
        "Imports: matplotlib.backend_bases.RendererBase, matplotlib.colors, matplotlib.patches, matplotlib.transforms, matplotlib.path.Path, numpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\pylab.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: matplotlib.cbook.flatten, matplotlib.cbook.silent_list, matplotlib, matplotlib.dates.date2num, matplotlib.dates.num2date, matplotlib.dates.datestr2num, matplotlib.dates.drange, matplotlib.dates.DateFormatter, matplotlib.dates.DateLocator, matplotlib.dates.RRuleLocator, matplotlib.dates.YearLocator, matplotlib.dates.MonthLocator, matplotlib.dates.WeekdayLocator, matplotlib.dates.DayLocator, matplotlib.dates.HourLocator, matplotlib.dates.MinuteLocator, matplotlib.dates.SecondLocator, matplotlib.dates.rrule, matplotlib.dates.MO, matplotlib.dates.TU, matplotlib.dates.WE, matplotlib.dates.TH, matplotlib.dates.FR, matplotlib.dates.SA, matplotlib.dates.SU, matplotlib.dates.YEARLY, matplotlib.dates.MONTHLY, matplotlib.dates.WEEKLY, matplotlib.dates.DAILY, matplotlib.dates.HOURLY, matplotlib.dates.MINUTELY, matplotlib.dates.SECONDLY, matplotlib.dates.relativedelta, matplotlib.mlab.detrend, matplotlib.mlab.detrend_linear, matplotlib.mlab.detrend_mean, matplotlib.mlab.detrend_none, matplotlib.mlab.window_hanning, matplotlib.mlab.window_none, matplotlib.cbook, matplotlib.mlab, matplotlib.pyplot, matplotlib.pyplot.*, numpy.*, numpy.fft.*, numpy.random.*, numpy.linalg.*, numpy, numpy.ma, datetime"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\pyplot.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: backend_mod",
        "Contains 182 functions: _copy_docstring_and_deprecators, _copy_docstring_and_deprecators, _copy_docstring_and_deprecators, _add_pyplot_note, _draw_all_if_interactive, install_repl_displayhook, uninstall_repl_displayhook, set_loglevel, findobj, _get_backend_mod, switch_backend, _warn_if_gui_out_of_main_thread, new_figure_manager, draw_if_interactive, show, isinteractive, ioff, ion, pause, rc, rc_context, rcdefaults, getp, get, setp, xkcd, figure, _auto_draw_if_interactive, gcf, fignum_exists, get_fignums, get_figlabels, get_current_fig_manager, connect, disconnect, close, clf, draw, savefig, figlegend, axes, delaxes, sca, cla, subplot, subplots, subplots, subplots, subplots, subplot_mosaic, subplot_mosaic, subplot_mosaic, subplot_mosaic, subplot2grid, twinx, twiny, subplot_tool, box, xlim, ylim, xticks, yticks, rgrids, thetagrids, get_plot_commands, _get_pyplot_commands, colorbar, clim, get_cmap, set_cmap, imread, imsave, matshow, polar, figimage, figtext, gca, gci, ginput, subplots_adjust, suptitle, tight_layout, waitforbuttonpress, acorr, angle_spectrum, annotate, arrow, autoscale, axhline, axhspan, axis, axline, axvline, axvspan, bar, barbs, barh, bar_label, boxplot, broken_barh, clabel, cohere, contour, contourf, csd, ecdf, errorbar, eventplot, fill, fill_between, fill_betweenx, grid, hexbin, hist, stairs, hist2d, hlines, imshow, legend, locator_params, loglog, magnitude_spectrum, margins, minorticks_off, minorticks_on, pcolor, pcolormesh, phase_spectrum, pie, plot, plot_date, psd, quiver, quiverkey, scatter, semilogx, semilogy, specgram, spy, stackplot, stem, step, streamplot, table, text, tick_params, ticklabel_format, tricontour, tricontourf, tripcolor, triplot, violinplot, vlines, xcorr, sci, title, xlabel, ylabel, xscale, yscale, autumn, bone, cool, copper, flag, gray, hot, hsv, jet, pink, prism, spring, summer, winter, magma, inferno, plasma, viridis, nipy_spectral, new_figure_manager_given_figure, new_figure_manager, draw_if_interactive",
        "Imports: __future__.annotations, contextlib.AbstractContextManager, contextlib.ExitStack, enum.Enum, functools, importlib, inspect, logging, sys, threading, time, typing.TYPE_CHECKING, typing.cast, typing.overload, cycler.cycler, matplotlib, matplotlib.colorbar, matplotlib.image, matplotlib._api, matplotlib.get_backend, matplotlib.rcParams, matplotlib.cm, matplotlib.style, matplotlib._pylab_helpers, matplotlib.interactive, matplotlib.cbook, matplotlib._docstring, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.MouseButton, matplotlib.figure.Figure, matplotlib.figure.FigureBase, matplotlib.figure.figaspect, matplotlib.gridspec.GridSpec, matplotlib.gridspec.SubplotSpec, matplotlib.rcsetup, matplotlib.rcParamsDefault, matplotlib.rcParamsOrig, matplotlib.artist.Artist, matplotlib.axes.Axes, matplotlib.axes.Subplot, matplotlib.backends.BackendFilter, matplotlib.backends.backend_registry, matplotlib.projections.PolarAxes, matplotlib.colorizer._ColorizerInterface, matplotlib.colorizer.ColorizingArtist, matplotlib.colorizer.Colorizer, matplotlib.mlab, matplotlib.scale.get_scale_names, matplotlib.cm._colormaps, matplotlib.colors._color_sequences, matplotlib.colors.Colormap, numpy, matplotlib.colors.Normalize, matplotlib.lines.Line2D, matplotlib.lines.AxLine, matplotlib.text.Text, matplotlib.text.Annotation, matplotlib.patches.Arrow, matplotlib.patches.Circle, matplotlib.patches.Rectangle, matplotlib.patches.Polygon, matplotlib.widgets.Button, matplotlib.widgets.Slider, matplotlib.widgets.Widget, ticker.TickHelper, ticker.Formatter, ticker.FixedFormatter, ticker.NullFormatter, ticker.FuncFormatter, ticker.FormatStrFormatter, ticker.ScalarFormatter, ticker.LogFormatter, ticker.LogFormatterExponent, ticker.LogFormatterMathtext, ticker.Locator, ticker.IndexLocator, ticker.FixedLocator, ticker.NullLocator, ticker.LinearLocator, ticker.LogLocator, ticker.AutoLocator, ticker.MultipleLocator, ticker.MaxNLocator, collections.abc.Callable, collections.abc.Hashable, collections.abc.Iterable, collections.abc.Sequence, datetime, pathlib, os, typing.Any, typing.BinaryIO, typing.Literal, typing.TypeVar, typing_extensions.ParamSpec, PIL.Image, numpy.typing.ArrayLike, matplotlib.axes, matplotlib.artist, matplotlib.backend_bases, matplotlib.axis.Tick, matplotlib.axes._base._AxesBase, matplotlib.backend_bases.Event, matplotlib.cm.ScalarMappable, matplotlib.contour.ContourSet, matplotlib.contour.QuadContourSet, matplotlib.collections.Collection, matplotlib.collections.FillBetweenPolyCollection, matplotlib.collections.LineCollection, matplotlib.collections.PolyCollection, matplotlib.collections.PathCollection, matplotlib.collections.EventCollection, matplotlib.collections.QuadMesh, matplotlib.colorbar.Colorbar, matplotlib.container.BarContainer, matplotlib.container.ErrorbarContainer, matplotlib.container.StemContainer, matplotlib.figure.SubFigure, matplotlib.legend.Legend, matplotlib.mlab.GaussianKDE, matplotlib.image.AxesImage, matplotlib.image.FigureImage, matplotlib.patches.FancyArrow, matplotlib.patches.StepPatch, matplotlib.patches.Wedge, matplotlib.quiver.Barbs, matplotlib.quiver.Quiver, matplotlib.quiver.QuiverKey, matplotlib.scale.ScaleBase, matplotlib.typing.ColorType, matplotlib.typing.CoordsType, matplotlib.typing.HashableList, matplotlib.typing.LineStyleType, matplotlib.typing.MarkerType, matplotlib.widgets.SubplotTool, matplotlib.backends, matplotlib.patheffects, IPython.core.pylabtools.backend2gui, IPython.get_ipython, importlib.metadata, matplotlib._parse_to_version_info, matplotlib.backend_bases.NavigationToolbar2, matplotlib.backend_bases.ToolContainerBase"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\quiver.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: QuiverKey, Quiver, Barbs",
        "Contains 25 functions: _parse_args, _check_consistent_shapes, __init__, labelsep, _init, _text_shift, draw, _set_transform, set_figure, contains, __init__, _init, get_datalim, draw, set_UVC, _dots_per_unit, _set_transform, _angles_lengths, _make_verts, _h_arrows, __init__, _find_tails, _make_barbs, set_UVC, set_offsets",
        "Imports: math, numpy, numpy.ma, matplotlib._api, matplotlib.cbook, matplotlib._docstring, matplotlib.artist, matplotlib.collections, matplotlib.patches.CirclePolygon, matplotlib.text, matplotlib.transforms"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\rcsetup.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: __getattr__, ValidateInStrings, _DunderChecker, _ignorecase",
        "Contains 51 functions: _listify_validator, validate_any, _validate_date, validate_bool, validate_axisbelow, validate_dpi, _make_type_validator, _validate_marker, _validate_pathlike, validate_fonttype, validate_backend, _validate_toolbar, validate_color_or_inherit, validate_color_or_auto, validate_color_for_prop_cycle, _validate_color_or_linecolor, validate_color, _validate_cmap, validate_aspect, validate_fontsize_None, validate_fontsize, validate_fontweight, validate_fontstretch, validate_font_properties, _validate_mathtext_fallback, validate_whiskers, validate_ps_distiller, _validate_linestyle, validate_markevery, validate_bbox, validate_sketch, _validate_greaterthan_minushalf, _validate_greaterequal0_lessequal1, _validate_int_greaterequal0, validate_hatch, _validate_minor_tick_ndivs, cycler, _validate_legend_loc, validate_cycler, validate_hist_bins, _convert_validator_spec, interactive_bk, non_interactive_bk, all_backends, __init__, __call__, f, validator, _is_iterable_not_string_like, visit_Attribute, func",
        "Imports: ast, functools.lru_cache, functools.reduce, numbers.Real, operator, os, re, numpy, matplotlib._api, matplotlib.cbook, matplotlib.backends.BackendFilter, matplotlib.backends.backend_registry, matplotlib.cbook.ls_mapper, matplotlib.colors.Colormap, matplotlib.colors.is_color_like, matplotlib._fontconfig_pattern.parse_fontconfig_pattern, matplotlib._enums.JoinStyle, matplotlib._enums.CapStyle, cycler.Cycler, cycler.cycler"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\sankey.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Sankey",
        "Contains 8 functions: __init__, _arc, _add_input, _add_output, _revert, add, finish, _get_angle",
        "Imports: logging, types.SimpleNamespace, numpy, matplotlib, matplotlib.path.Path, matplotlib.patches.PathPatch, matplotlib.transforms.Affine2D, matplotlib._docstring, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\scale.py": {
      "entityType": "file",
      "observations": [
        "Contains 17 classes: ScaleBase, LinearScale, FuncTransform, FuncScale, LogTransform, InvertedLogTransform, LogScale, FuncScaleLog, SymmetricalLogTransform, InvertedSymmetricalLogTransform, SymmetricalLogScale, AsinhTransform, InvertedAsinhTransform, AsinhScale, LogitTransform, LogisticTransform, LogitScale",
        "Contains 62 functions: get_scale_names, scale_factory, register_scale, _get_scale_docs, __init__, get_transform, set_default_locators_and_formatters, limit_range_for_scale, __init__, set_default_locators_and_formatters, get_transform, __init__, transform_non_affine, inverted, __init__, get_transform, set_default_locators_and_formatters, __init__, __str__, transform_non_affine, inverted, __init__, __str__, transform_non_affine, inverted, __init__, set_default_locators_and_formatters, get_transform, limit_range_for_scale, __init__, base, get_transform, __init__, transform_non_affine, inverted, __init__, transform_non_affine, inverted, __init__, set_default_locators_and_formatters, get_transform, __init__, transform_non_affine, inverted, __init__, transform_non_affine, inverted, __init__, get_transform, set_default_locators_and_formatters, __init__, transform_non_affine, inverted, __str__, __init__, transform_non_affine, inverted, __str__, __init__, get_transform, set_default_locators_and_formatters, limit_range_for_scale",
        "Imports: inspect, textwrap, numpy, matplotlib, matplotlib._api, matplotlib._docstring, matplotlib.ticker.NullFormatter, matplotlib.ticker.ScalarFormatter, matplotlib.ticker.LogFormatterSciNotation, matplotlib.ticker.LogitFormatter, matplotlib.ticker.NullLocator, matplotlib.ticker.LogLocator, matplotlib.ticker.AutoLocator, matplotlib.ticker.AutoMinorLocator, matplotlib.ticker.SymmetricalLogLocator, matplotlib.ticker.AsinhLocator, matplotlib.ticker.LogitLocator, matplotlib.transforms.Transform, matplotlib.transforms.IdentityTransform"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\spines.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Spine, SpinesProxy, Spines",
        "Contains 38 functions: __str__, __init__, set_patch_arc, set_patch_circle, set_patch_line, _recompute_transform, get_patch_transform, get_window_extent, get_path, _ensure_position_is_set, register_axis, clear, _clear, _adjust_location, draw, set_position, get_position, get_spine_transform, set_bounds, get_bounds, linear_spine, arc_spine, circular_spine, set_color, __init__, __getattr__, __dir__, __init__, from_dict, __getstate__, __setstate__, __getattr__, __getitem__, __setitem__, __delitem__, __iter__, __len__, x",
        "Imports: collections.abc.MutableMapping, functools, numpy, matplotlib, matplotlib._api, matplotlib._docstring, matplotlib.artist.allow_rasterization, matplotlib.transforms, matplotlib.patches, matplotlib.path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\stackplot.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: stackplot",
        "Imports: itertools, numpy, matplotlib._api"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\streamplot.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: StreamplotSet, DomainMap, Grid, StreamMask, InvalidIndexError, TerminateTrajectory, OutOfBounds",
        "Contains 27 functions: streamplot, _get_integrator, _integrate_rk12, _euler_step, interpgrid, _gen_starting_points, __init__, __init__, grid2mask, mask2grid, data2grid, grid2data, start_trajectory, reset_start_point, update_trajectory, undo_trajectory, __init__, shape, within_grid, __init__, __getitem__, _start_trajectory, _undo_trajectory, _update_trajectory, forward_time, backward_time, integrate",
        "Imports: numpy, matplotlib, matplotlib._api, matplotlib.cm, matplotlib.patches, matplotlib.colors, matplotlib.collections, matplotlib.lines"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\table.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: Cell, Table",
        "Contains 38 functions: table, __init__, set_transform, set_figure, get_text, set_fontsize, get_fontsize, auto_set_font_size, draw, _set_text_position, get_text_bounds, get_required_width, set_text_props, visible_edges, visible_edges, get_path, __init__, add_cell, __setitem__, __getitem__, edges, edges, _approx_text_height, draw, _get_grid_bbox, contains, get_children, get_window_extent, _do_cell_alignment, auto_set_column_width, _auto_set_column_width, auto_set_font_size, _auto_set_font_size, scale, set_fontsize, _offset, _update_positions, get_celld",
        "Imports: numpy, ._api, ._docstring, artist.Artist, artist.allow_rasterization, patches.Rectangle, text.Text, transforms.Bbox, path.Path, cbook._is_pandas_dataframe"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\texmanager.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TexManager",
        "Contains 15 functions: _usepackage_if_not_loaded, __new__, _get_font_family_and_reduced, _get_font_preamble_and_command, get_basefile, get_font_preamble, get_custom_preamble, _get_tex_source, make_tex, _run_checked_subprocess, make_dvi, make_png, get_grey, get_rgba, get_text_width_height_descent",
        "Imports: functools, hashlib, logging, os, pathlib.Path, subprocess, tempfile.TemporaryDirectory, numpy, matplotlib, matplotlib.cbook, matplotlib.dviread"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\text.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: Text, OffsetFrom, _AnnotationBase, Annotation",
        "Contains 103 functions: _get_textbox, _get_text_metrics_with_cache, _get_text_metrics_with_cache_impl, __repr__, __init__, _reset_visual_defaults, update, __getstate__, contains, _get_xy_display, _get_multialignment, _char_index_at, get_rotation, get_transform_rotates_text, set_rotation_mode, get_rotation_mode, set_antialiased, get_antialiased, update_from, _get_layout, set_bbox, get_bbox_patch, update_bbox_position_size, _update_clip_properties, set_clip_box, set_clip_path, set_clip_on, get_wrap, set_wrap, _get_wrap_line_width, _get_dist_to_box, _get_rendered_text_width, _get_wrapped_text, draw, get_color, get_fontproperties, get_fontfamily, get_fontname, get_fontstyle, get_fontsize, get_fontvariant, get_fontweight, get_stretch, get_horizontalalignment, get_unitless_position, get_position, get_text, get_verticalalignment, get_window_extent, set_backgroundcolor, set_color, set_horizontalalignment, set_multialignment, set_linespacing, set_fontfamily, set_fontvariant, set_fontstyle, set_fontsize, get_math_fontfamily, set_math_fontfamily, set_fontweight, set_fontstretch, set_position, set_x, set_y, set_rotation, set_transform_rotates_text, set_verticalalignment, set_text, _preprocess_math, set_fontproperties, set_usetex, get_usetex, set_parse_math, get_parse_math, set_fontname, __init__, set_unit, get_unit, __call__, __init__, _get_xy, _get_xy_transform, set_annotation_clip, get_annotation_clip, _get_position_xy, _check_xy, draggable, __str__, __init__, contains, xycoords, xycoords, xyann, xyann, get_anncoords, set_anncoords, set_figure, update_positions, draw, get_window_extent, get_tightbbox, is_offset",
        "Imports: functools, logging, math, numbers.Real, weakref, numpy, matplotlib, ._api, .artist, .cbook, ._docstring, artist.Artist, font_manager.FontProperties, patches.FancyArrowPatch, patches.FancyBboxPatch, patches.Rectangle, textpath.TextPath, textpath.TextToPath, transforms.Affine2D, transforms.Bbox, transforms.BboxBase, transforms.BboxTransformTo, transforms.IdentityTransform, transforms.Transform, matplotlib.offsetbox.DraggableAnnotation, matplotlib.transforms.blended_transform_factory, matplotlib.projections.PolarAxes, matplotlib.patheffects.PathEffectRenderer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\textpath.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TextToPath, TextPath",
        "Contains 16 functions: __init__, _get_font, _get_hinting_flag, _get_char_id, get_text_width_height_descent, get_text_path, get_glyphs_with_font, get_glyphs_mathtext, get_glyphs_tex, _select_native_charmap, __init__, set_size, get_size, vertices, codes, _revalidate_path",
        "Imports: collections.OrderedDict, logging, urllib.parse, numpy, matplotlib._text_helpers, matplotlib.dviread, matplotlib.font_manager.FontProperties, matplotlib.font_manager.get_font, matplotlib.font_manager.fontManager, matplotlib.ft2font.LoadFlags, matplotlib.mathtext.MathTextParser, matplotlib.path.Path, matplotlib.texmanager.TexManager, matplotlib.transforms.Affine2D, matplotlib.text.Text"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\ticker.py": {
      "entityType": "file",
      "observations": [
        "Contains 31 classes: _DummyAxis, TickHelper, Formatter, NullFormatter, FixedFormatter, FuncFormatter, FormatStrFormatter, _UnicodeMinusFormat, StrMethodFormatter, ScalarFormatter, LogFormatter, LogFormatterExponent, LogFormatterMathtext, LogFormatterSciNotation, LogitFormatter, EngFormatter, PercentFormatter, Locator, IndexLocator, FixedLocator, NullLocator, LinearLocator, MultipleLocator, _Edge_integer, MaxNLocator, LogLocator, SymmetricalLogLocator, AsinhLocator, LogitLocator, AutoLocator, AutoMinorLocator",
        "Contains 161 functions: scale_range, _is_decade, _decade_less_equal, _decade_greater_equal, _decade_less, _decade_greater, _is_close_to_int, __init__, get_view_interval, set_view_interval, get_minpos, get_data_interval, set_data_interval, get_tick_space, set_axis, create_dummy_axis, __call__, format_ticks, format_data, format_data_short, get_offset, set_locs, fix_minus, _set_locator, __call__, __init__, __call__, get_offset, set_offset_string, __init__, __call__, get_offset, set_offset_string, __init__, __call__, format_field, __init__, __call__, __init__, get_usetex, set_usetex, get_useOffset, set_useOffset, get_useLocale, set_useLocale, _format_maybe_minus_and_locale, get_useMathText, set_useMathText, __call__, set_scientific, set_powerlimits, format_data_short, format_data, get_offset, set_locs, _compute_offset, _set_order_of_magnitude, _set_format, __init__, set_base, set_label_minor, set_locs, _num_to_string, __call__, format_data, format_data_short, _pprint_val, _num_to_string, _non_decade_format, __call__, _non_decade_format, __init__, use_overline, set_one_half, set_minor_threshold, set_minor_number, set_locs, _format_value, _one_minus, __call__, format_data_short, __init__, __call__, set_locs, get_offset, format_eng, format_data, __init__, __call__, format_pct, convert_to_pct, symbol, symbol, tick_values, set_params, __call__, raise_if_exceeds, nonsingular, view_limits, __init__, set_params, __call__, tick_values, __init__, set_params, __call__, tick_values, __call__, tick_values, __init__, numticks, numticks, set_params, __call__, tick_values, view_limits, __init__, set_params, __call__, tick_values, view_limits, __init__, closeto, le, ge, __init__, _validate_steps, _staircase, set_params, _raw_ticks, __call__, tick_values, view_limits, __init__, set_params, _set_subs, __call__, tick_values, view_limits, nonsingular, __init__, set_params, __call__, tick_values, view_limits, __init__, set_params, __call__, tick_values, __init__, set_params, minor, minor, tick_values, nonsingular, __init__, __init__, __call__, tick_values, get_log_range, ideal_ticks",
        "Imports: itertools, logging, locale, math, numbers.Integral, string, numpy, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib.transforms, matplotlib.font_manager"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\transforms.py": {
      "entityType": "file",
      "observations": [
        "Contains 25 classes: TransformNode, BboxBase, Bbox, TransformedBbox, LockableBbox, Transform, TransformWrapper, AffineBase, Affine2DBase, Affine2D, IdentityTransform, _BlendedMixin, BlendedGenericTransform, BlendedAffine2D, CompositeGenericTransform, CompositeAffine2D, BboxTransform, BboxTransformTo, BboxTransformToMaxOnly, BboxTransformFrom, ScaledTranslation, _ScaledRotation, AffineDeltaTransform, TransformedPath, TransformedPatchPath",
        "Contains 229 functions: _make_str_method, blended_transform_factory, composite_transform_factory, nonsingular, interval_contains, _interval_contains_close, interval_contains_open, offset_copy, strrepr, __init__, __getstate__, __setstate__, __copy__, invalidate, _invalidate_internal, set_children, frozen, frozen, __array__, x0, y0, x1, y1, p0, p1, xmin, ymin, xmax, ymax, min, max, intervalx, intervaly, width, height, size, bounds, extents, get_points, containsx, containsy, contains, overlaps, fully_containsx, fully_containsy, fully_contains, fully_overlaps, transformed, anchored, shrunk, shrunk_to_aspect, splitx, splity, count_contains, count_overlaps, expanded, padded, translated, corners, rotated, union, intersection, __init__, frozen, unit, null, from_bounds, from_extents, __format__, __str__, __repr__, ignore, update_from_path, update_from_data_x, update_from_data_y, update_from_data_xy, x0, y0, x1, y1, p0, p1, intervalx, intervaly, bounds, minpos, minpos, minposx, minposx, minposy, minposy, get_points, set_points, set, mutated, mutatedx, mutatedy, __init__, get_points, contains, fully_contains, __init__, get_points, locked_x0, locked_x0, locked_y0, locked_y0, locked_x1, locked_x1, locked_y1, locked_y1, __init_subclass__, __add__, _iter_break_from_left_to_right, depth, contains_branch, contains_branch_seperately, __sub__, __array__, transform, transform_affine, transform_non_affine, transform_bbox, get_affine, get_matrix, transform_point, transform_path, transform_path_affine, transform_path_non_affine, transform_angles, inverted, __init__, __eq__, frozen, set, __init__, __array__, __eq__, transform, transform_affine, transform_non_affine, transform_path, transform_path_affine, transform_path_non_affine, get_affine, frozen, is_separable, to_values, transform_affine, inverted, __init__, __str__, from_values, get_matrix, set_matrix, set, clear, rotate, rotate_deg, rotate_around, rotate_deg_around, translate, scale, skew, skew_deg, frozen, get_matrix, transform, transform_affine, transform_non_affine, transform_path, transform_path_affine, transform_path_non_affine, get_affine, inverted, __eq__, contains_branch_seperately, __init__, depth, contains_branch, frozen, transform_non_affine, inverted, get_affine, __init__, get_matrix, __init__, frozen, _invalidate_internal, __eq__, _iter_break_from_left_to_right, contains_branch_seperately, transform_affine, transform_non_affine, transform_path_non_affine, get_affine, inverted, __init__, depth, _iter_break_from_left_to_right, get_matrix, __init__, get_matrix, __init__, get_matrix, get_matrix, __init__, get_matrix, __init__, get_matrix, __init__, get_matrix, __init__, get_matrix, __init__, _revalidate, get_transformed_points_and_affine, get_transformed_path_and_affine, get_fully_transformed_path, get_affine, __init__, _revalidate, __str__, _check, __init__, invalidate, get_points, get_points, transform_affine",
        "Imports: functools, itertools, textwrap, weakref, math, numpy, numpy.linalg.inv, matplotlib._api, matplotlib._path.affine_transform, matplotlib._path.count_bboxes_overlapping_bbox, matplotlib._path.update_path_extents, path.Path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\typing.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: collections.abc.Hashable, collections.abc.Sequence, pathlib, typing.Any, typing.Callable, typing.Literal, typing.TypeAlias, typing.TypeVar, typing.Union, .path, _enums.JoinStyle, _enums.CapStyle, artist.Artist, backend_bases.RendererBase, markers.MarkerStyle, transforms.Bbox, transforms.Transform"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\units.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: ConversionError, AxisInfo, ConversionInterface, DecimalConverter, Registry",
        "Contains 7 functions: _is_natively_supported, __init__, axisinfo, default_units, convert, convert, get_converter",
        "Imports: decimal.Decimal, numbers.Number, numpy, numpy.ma, matplotlib.cbook"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\widgets.py": {
      "entityType": "file",
      "observations": [
        "Contains 22 classes: LockDraw, Widget, AxesWidget, Button, SliderBase, Slider, RangeSlider, CheckButtons, TextBox, RadioButtons, SubplotTool, Cursor, MultiCursor, _SelectorWidget, SpanSelector, ToolLineHandles, ToolHandles, RectangleSelector, EllipseSelector, LassoSelector, PolygonSelector, Lasso",
        "Contains 207 functions: _expand_text_props, __init__, __call__, release, available, isowner, locked, set_active, get_active, ignore, __init__, connect_event, disconnect_events, _get_data_coords, __init__, _click, _release, _motion, on_clicked, disconnect, __init__, _stepped_value, disconnect, reset, __init__, _value_in_bounds, _update, _format, set_val, on_changed, __init__, _update_selection_poly, _min_in_bounds, _max_in_bounds, _value_in_bounds, _update_val_from_pos, _update, _format, set_min, set_max, set_val, on_changed, __init__, _clear, _clicked, set_label_props, set_frame_props, set_check_props, set_active, _init_status, clear, get_status, get_checked_labels, on_clicked, disconnect, __init__, text, _rendercursor, _release, _keypress, set_val, begin_typing, stop_typing, _click, _resize, _motion, on_text_change, on_submit, disconnect, __init__, _clear, _clicked, set_label_props, set_radio_props, activecolor, activecolor, set_active, clear, on_clicked, disconnect, __init__, _on_slider_changed, _on_reset, __init__, clear, onmove, __init__, connect, disconnect, clear, onmove, __init__, set_active, _get_animated_artists, update_background, connect_default_events, ignore, update, _get_data, _clean_event, press, _press, release, _release, onmove, _onmove, on_scroll, _on_scroll, on_key_press, _on_key_press, on_key_release, _on_key_release, set_visible, get_visible, clear, _clear_without_update, artists, set_props, set_handle_props, _validate_state, add_state, remove_state, __init__, new_axes, _setup_edge_handles, _handles_artists, _set_cursor, connect_default_events, _press, direction, direction, _release, _hover, _onmove, _draw_shape, _set_active_handle, _contains, _snap, extents, extents, _set_extents, __init__, artists, positions, direction, set_data, set_visible, set_animated, remove, closest, __init__, x, y, artists, set_data, set_visible, set_animated, closest, __init__, _handles_artists, _init_shape, _press, _release, _onmove, _rect_bbox, _set_aspect_ratio_correction, _get_rotation_transform, corners, edge_centers, center, extents, extents, rotation, rotation, _draw_shape, _set_active_handle, _contains, geometry, _init_shape, _draw_shape, _rect_bbox, __init__, _press, _release, _onmove, __init__, _get_bbox, _add_box, _remove_box, _update_box, _scale_polygon, _handles_artists, _remove_vertex, _press, _release, onmove, _onmove, _on_key_press, _on_key_release, _draw_polygon_without_update, _draw_polygon, verts, verts, _clear_without_update, __init__, onrelease, onmove",
        "Imports: contextlib.ExitStack, copy, itertools, numbers.Integral, numbers.Number, cycler.cycler, numpy, matplotlib, ._api, ._docstring, .backend_tools, .cbook, .collections, .colors, .text, .ticker, .transforms, lines.Line2D, patches.Rectangle, patches.Ellipse, patches.Polygon, transforms.TransformedPatchPath, transforms.Affine2D"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_afm.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: AFM",
        "Contains 34 functions: _to_int, _to_float, _to_str, _to_list_of_ints, _to_list_of_floats, _to_bool, _parse_header, _parse_char_metrics, _parse_kern_pairs, _parse_composites, _parse_optional, __init__, get_bbox_char, string_width_height, get_str_bbox_and_descent, get_str_bbox, get_name_char, get_width_char, get_width_from_char_name, get_height_char, get_kern_dist, get_kern_dist_from_name, get_fontname, postscript_name, get_fullname, get_familyname, family_name, get_weight, get_angle, get_capheight, get_xheight, get_underline_thickness, get_horizontal_stem_width, get_vertical_stem_width",
        "Imports: collections.namedtuple, logging, re, _mathtext_data.uni2type1"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_animation_data.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_blocking_input.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: blocking_input_loop",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_cm.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 49 functions: _flag_red, _flag_green, _flag_blue, _prism_red, _prism_green, _prism_blue, _ch_helper, cubehelix, _g0, _g1, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16, _g17, _g18, _g19, _g20, _g21, _g22, _g23, _g24, _g25, _g26, _g27, _g28, _g29, _g30, _g31, _g32, _g33, _g34, _g35, _g36, _gist_heat_red, _gist_heat_green, _gist_heat_blue, _gist_yarg",
        "Imports: functools.partial, numpy"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_cm_bivar.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: numpy, matplotlib.colors.SegmentedBivarColormap"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_cm_listed.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: colors.ListedColormap"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_cm_multivar.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: colors.LinearSegmentedColormap, colors.MultivarColormap, matplotlib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_color_data.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_constrained_layout.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 15 functions: do_constrained_layout, make_layoutgrids, make_layoutgrids_gs, check_no_collapsed_axes, compress_fixed_aspect, get_margin_from_padding, make_layout_margins, make_margin_suptitles, match_submerged_margins, get_cb_parent_spans, get_pos_and_bbox, reposition_axes, reposition_colorbar, reset_margins, colorbar_get_pad",
        "Imports: logging, numpy, matplotlib._api, matplotlib.artist, matplotlib.transforms, matplotlib._layoutgrid"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_docstring.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Substitution, _ArtistKwdocLoader, _ArtistPropertiesSubstitution",
        "Contains 10 functions: kwarg_doc, copy, decorator, __init__, __call__, __missing__, __init__, register, __call__, do_copy",
        "Imports: inspect, ._api, matplotlib.artist.Artist, matplotlib.artist.kwdoc"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_enums.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: JoinStyle, CapStyle",
        "Contains 3 functions: demo, demo, plot_angle",
        "Imports: enum.Enum, matplotlib._docstring, numpy, matplotlib.pyplot, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_fontconfig_pattern.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: _make_fontconfig_parser, parse_fontconfig_pattern, generate_fontconfig_pattern, comma_separated",
        "Imports: functools.lru_cache, functools.partial, re, pyparsing.Group, pyparsing.Optional, pyparsing.ParseException, pyparsing.Regex, pyparsing.StringEnd, pyparsing.Suppress, pyparsing.ZeroOrMore, pyparsing.oneOf"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_internal_utils.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: graphviz_dump_transform, recurse",
        "Imports: io.StringIO, pathlib.Path, subprocess, matplotlib.transforms.TransformNode"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_layoutgrid.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: LayoutGrid",
        "Contains 24 functions: seq_id, plot_children, __init__, __repr__, reset_margins, add_constraints, hard_constraints, add_child, parent_constraints, grid_constraints, edit_margin, edit_margin_min, edit_margins, edit_all_margins_min, edit_outer_margin_mins, get_margins, get_outer_bbox, get_inner_bbox, get_bbox_for_cb, get_left_margin_bbox, get_bottom_margin_bbox, get_right_margin_bbox, get_top_margin_bbox, update_variables",
        "Imports: itertools, kiwisolver, logging, numpy, matplotlib, matplotlib.patches, matplotlib.transforms.Bbox"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_mathtext.py": {
      "entityType": "file",
      "observations": [
        "Contains 42 classes: VectorParse, RasterParse, Output, FontMetrics, FontInfo, Fonts, TruetypeFonts, BakomaFonts, UnicodeFonts, DejaVuFonts, DejaVuSerifFonts, DejaVuSansFonts, StixFonts, StixSansFonts, FontConstantsBase, ComputerModernFontConstants, STIXFontConstants, STIXSansFontConstants, DejaVuSerifFontConstants, DejaVuSansFontConstants, Node, Box, Vbox, Hbox, Char, Accent, List, Hlist, Vlist, Rule, Hrule, Vrule, _GlueSpec, Glue, HCentered, VCentered, Kern, AutoHeightChar, AutoWidthChar, ParserState, Parser, _MathStyle",
        "Contains 133 functions: get_unicode_index, _get_font_constant_set, ship, Error, cmd, __init__, to_vector, to_raster, __init__, get_kern, _get_font, _get_info, get_metrics, render_glyph, render_rect_filled, get_xheight, get_underline_thickness, get_sized_alternatives_for_symbol, __init__, _get_font, _get_offset, _get_glyph, _get_info, get_xheight, get_underline_thickness, get_kern, __init__, _get_glyph, get_sized_alternatives_for_symbol, __init__, _map_virtual_font, _get_glyph, get_sized_alternatives_for_symbol, __init__, _get_glyph, __init__, _map_virtual_font, get_sized_alternatives_for_symbol, __init__, __repr__, get_kerning, shrink, render, __init__, shrink, render, __init__, __init__, __init__, __repr__, _update_metrics, is_slanted, get_kerning, render, shrink, _update_metrics, shrink, render, __init__, __repr__, _set_glue, shrink, __init__, kern, hpack, __init__, vpack, __init__, render, __init__, __init__, __init__, shrink, __init__, __init__, __init__, __repr__, shrink, __init__, __init__, clamp, hlist_out, vlist_out, raise_error, __init__, copy, font, font, get_current_underline_thickness, names, __init__, parse, get_state, pop_state, push_state, main, math_string, math, non_math, text, _make_space, space, customspace, symbol, unknown_symbol, accent, function, operatorname, start_group, group, required_group, end_group, unclosed_group, font, is_overunder, is_dropsub, is_slanted, subsuper, _genfrac, style_literal, genfrac, frac, dfrac, binom, _genset, sqrt, overline, _auto_sized_delimiter, auto_delim, boldsymbol, substack, set_names_and_parse_actions, csnames",
        "Imports: __future__.annotations, abc, copy, enum, functools, logging, os, re, types, unicodedata, string, typing, typing.NamedTuple, numpy, pyparsing.Empty, pyparsing.Forward, pyparsing.Literal, pyparsing.NotAny, pyparsing.oneOf, pyparsing.OneOrMore, pyparsing.Optional, pyparsing.ParseBaseException, pyparsing.ParseException, pyparsing.ParseExpression, pyparsing.ParseFatalException, pyparsing.ParserElement, pyparsing.ParseResults, pyparsing.QuotedString, pyparsing.Regex, pyparsing.StringEnd, pyparsing.ZeroOrMore, pyparsing.pyparsing_common, pyparsing.Group, matplotlib, .cbook, _mathtext_data.latex_to_bakoma, _mathtext_data.stix_glyph_fixes, _mathtext_data.stix_virtual_fonts, _mathtext_data.tex2uni, font_manager.FontProperties, font_manager.findfont, font_manager.get_font, ft2font.FT2Font, ft2font.FT2Image, ft2font.Kerning, ft2font.LoadFlags, packaging.version.parse, pyparsing.__version__, pyparsing.nestedExpr, pyparsing.nested_expr, collections.abc.Iterable, ft2font.Glyph"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_mathtext_data.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: _normalize_stix_fontcodes, _normalize_stix_fontcodes, _normalize_stix_fontcodes, _normalize_stix_fontcodes",
        "Imports: __future__.annotations, typing.overload"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_pylab_helpers.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Gcf",
        "Contains 11 functions: get_fig_manager, destroy, destroy_fig, destroy_all, has_fignum, get_all_fig_managers, get_num_fig_managers, get_active, _set_new_active_manager, set_active, draw_all",
        "Imports: atexit, collections.OrderedDict"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_text_helpers.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: LayoutItem",
        "Contains 2 functions: warn_on_missing_glyph, layout",
        "Imports: __future__.annotations, dataclasses, ._api, ft2font.FT2Font, ft2font.Kerning, ft2font.LoadFlags"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_tight_bbox.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: adjust_bbox, process_figure_for_rasterizing, restore_bbox",
        "Imports: matplotlib.transforms.Bbox, matplotlib.transforms.TransformedBbox, matplotlib.transforms.Affine2D"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_tight_layout.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: _auto_adjust_subplotpars, get_subplotspec_list, get_tight_layout_figure",
        "Imports: numpy, matplotlib, matplotlib._api, matplotlib.artist, matplotlib.font_manager.FontProperties, matplotlib.transforms.Bbox"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_type1font.py": {
      "entityType": "file",
      "observations": [
        "Contains 11 classes: _Token, _NameToken, _BooleanToken, _KeywordToken, _DelimiterToken, _WhitespaceToken, _StringToken, _BinaryToken, _NumberToken, _BalancedExpression, Type1Font",
        "Contains 32 functions: _tokenize, _expression, __init__, __str__, endpos, is_keyword, is_slash_name, is_delim, is_number, value, is_slash_name, value, value, is_keyword, is_delim, opposite, _escape, value, value, is_number, value, __init__, _read, _split, _decrypt, _encrypt, _parse, _parse_subrs, _parse_charstrings, _parse_encoding, _parse_othersubrs, transform",
        "Imports: __future__.annotations, binascii, functools, logging, re, string, struct, typing, numpy, matplotlib.cbook._format_approx, ._api"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\_version.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: __getattr__, ExecutableNotFoundError, RcParams",
        "Contains 54 functions: _parse_to_version_info, _get_version, _check_versions, _ensure_handler, set_loglevel, _logged_cached, _get_executable_info, _get_xdg_config_dir, _get_xdg_cache_dir, _get_config_or_cache_dir, get_configdir, get_cachedir, get_data_path, matplotlib_fname, rc_params, _get_ssl_context, _open_file_or_url, _rc_params_in_file, rc_params_from_file, rc, rcdefaults, rc_file_defaults, rc_file, rc_context, use, get_backend, interactive, is_interactive, _val_or_rc, _init_tests, _replacer, _label_from_arg, _add_data_doc, _preprocess_data, sanitize_sequence, validate_backend, wrapper, impl, gen_candidates, __init__, _set, _get, _update_raw, _ensure_has_backend, __setitem__, __getitem__, _get_backend_or_none, __repr__, __str__, __iter__, __len__, find_all, copy, inner",
        "Imports: atexit, collections.namedtuple, collections.abc.MutableMapping, contextlib, functools, importlib, inspect, inspect.Parameter, locale, logging, os, pathlib.Path, pprint, re, shutil, subprocess, sys, tempfile, packaging.version.parse, ._api, ._version, .cbook, ._docstring, .rcsetup, matplotlib._api.MatplotlibDeprecationWarning, matplotlib.rcsetup.cycler, matplotlib.cm._colormaps, matplotlib.cm._multivar_colormaps, matplotlib.cm._bivar_colormaps, matplotlib.colors._color_sequences, .ft2font, ssl, matplotlib, matplotlib.ft2font, certifi, urllib.request, style.core.STYLE_BLACKLIST, style.core.STYLE_BLACKLIST, style.core.STYLE_BLACKLIST, setuptools_scm, winreg, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\axes\\_axes.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Axes",
        "Contains 90 functions: _make_axes_method, get_title, set_title, get_legend_handles_labels, legend, _remove_legend, inset_axes, indicate_inset, indicate_inset_zoom, secondary_xaxis, secondary_yaxis, text, annotate, axhline, axvline, _check_no_units, axline, axhspan, axvspan, hlines, vlines, eventplot, plot, plot_date, loglog, semilogx, semilogy, acorr, xcorr, step, _convert_dx, _parse_bar_color_args, bar, barh, bar_label, broken_barh, stem, pie, _errorevery_to_mask, errorbar, boxplot, bxp, _parse_scatter_color_args, scatter, hexbin, arrow, quiverkey, _quiver_units, quiver, barbs, fill, _fill_between_x_or_y, _fill_between_process_units, fill_between, fill_betweenx, imshow, _pcolorargs, pcolor, pcolormesh, pcolorfast, contour, contourf, clabel, hist, stairs, hist2d, ecdf, psd, csd, magnitude_spectrum, angle_spectrum, phase_spectrum, cohere, specgram, spy, matshow, violinplot, violin, _get_aspect_ratio, sign, _upcast_err, apply_mask, merge_kw_rc, do_plot, do_patch, invalid_shape_exception, on_changed, _kde_method, get_next_color, _interp_grid",
        "Imports: functools, itertools, logging, math, numbers.Integral, numbers.Number, numbers.Real, re, numpy, matplotlib, matplotlib.category, matplotlib.cbook, matplotlib.collections, matplotlib.colorizer, matplotlib.colors, matplotlib.contour, matplotlib.dates, matplotlib.image, matplotlib.inset, matplotlib.legend, matplotlib.lines, matplotlib.markers, matplotlib.mlab, matplotlib.patches, matplotlib.path, matplotlib.quiver, matplotlib.stackplot, matplotlib.streamplot, matplotlib.table, matplotlib.text, matplotlib.ticker, matplotlib.transforms, matplotlib.tri, matplotlib.units, matplotlib._api, matplotlib._docstring, matplotlib._preprocess_data, matplotlib.axes._base._AxesBase, matplotlib.axes._base._TransformedBoundsLocator, matplotlib.axes._base._process_plot_format, matplotlib.axes._secondary_axes.SecondaryAxis, matplotlib.container.BarContainer, matplotlib.container.ErrorbarContainer, matplotlib.container.StemContainer, matplotlib.transforms._ScaledRotation, builtins.range"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\axes\\_base.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: _axis_method_wrapper, _TransformedBoundsLocator, _process_plot_var_args, _AxesBase, ArtistList, _MinimalArtist",
        "Contains 193 functions: _process_plot_format, _draw_rasterized, __init__, __set_name__, __init__, __call__, __init__, set_prop_cycle, __call__, get_next_color, _getdefaults, _setdefaults, _make_line, _make_coordinates, _make_polygon, _plot_args, _axis_map, __str__, __init__, __init_subclass__, __getstate__, __setstate__, __repr__, get_subplotspec, set_subplotspec, get_gridspec, get_window_extent, _init_axis, set_figure, _unstale_viewLim, viewLim, _request_autoscale_view, _set_lim_and_transforms, get_xaxis_transform, get_xaxis_text1_transform, get_xaxis_text2_transform, get_yaxis_transform, get_yaxis_text1_transform, get_yaxis_text2_transform, _update_transScale, get_position, set_position, _set_position, reset_position, set_axes_locator, get_axes_locator, _set_artist_props, _gen_axes_patch, _gen_axes_spines, sharex, sharey, __clear, clear, cla, artists, collections, images, lines, patches, tables, texts, get_facecolor, set_facecolor, _set_title_offset_trans, set_prop_cycle, get_aspect, set_aspect, get_adjustable, set_adjustable, get_box_aspect, set_box_aspect, get_anchor, set_anchor, get_data_ratio, apply_aspect, axis, get_legend, get_images, get_lines, get_xaxis, get_yaxis, _sci, _gci, has_data, add_artist, add_child_axes, add_collection, add_image, _update_image_limits, add_line, _add_text, _update_line_limits, add_patch, _update_patch_limits, add_table, add_container, _unit_change_handler, relim, update_datalim, _process_unit_info, in_axes, get_autoscale_on, set_autoscale_on, use_sticky_edges, use_sticky_edges, get_xmargin, get_ymargin, set_xmargin, set_ymargin, margins, set_rasterization_zorder, get_rasterization_zorder, autoscale, autoscale_view, _update_title_position, draw, draw_artist, redraw_in_frame, get_frame_on, set_frame_on, get_axisbelow, set_axisbelow, grid, ticklabel_format, locator_params, tick_params, set_axis_off, set_axis_on, get_xlabel, set_xlabel, invert_xaxis, get_xbound, set_xbound, get_xlim, _validate_converted_limits, set_xlim, get_ylabel, set_ylabel, invert_yaxis, get_ybound, set_ybound, get_ylim, set_ylim, format_xdata, format_ydata, format_coord, minorticks_on, minorticks_off, can_zoom, can_pan, get_navigate, set_navigate, get_navigate_mode, set_navigate_mode, _get_view, _set_view, _prepare_view_from_bbox, _set_view_from_bbox, start_pan, end_pan, _get_pan_points, drag_pan, get_children, contains, contains_point, get_default_bbox_extra_artists, get_tightbbox, _make_twin_axes, twinx, twiny, get_shared_x_axes, get_shared_y_axes, label_outer, _get_subplotspec_with_optional_colorbar, _label_outer_xaxis, _label_outer_yaxis, set_forward_navigation_events, get_forward_navigation_events, wrapper, __init__, __repr__, __len__, __iter__, __getitem__, __add__, __radd__, handle_single_axis, format_deltas, get_rasterized, get_agg_filter, __init__, get_figure, draw",
        "Imports: collections.abc.Iterable, collections.abc.Sequence, contextlib.ExitStack, functools, inspect, logging, numbers.Real, operator.attrgetter, re, types, numpy, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib._docstring, matplotlib.offsetbox, matplotlib.artist, matplotlib.axis, matplotlib.cbook._OrderedSet, matplotlib.cbook._check_1d, matplotlib.cbook.index_of, matplotlib.collections, matplotlib.colors, matplotlib.font_manager, matplotlib.gridspec.SubplotSpec, matplotlib.image, matplotlib.lines, matplotlib.patches, matplotlib.rcsetup.cycler, matplotlib.rcsetup.validate_axisbelow, matplotlib.spines, matplotlib.table, matplotlib.text, matplotlib.ticker, matplotlib.transforms"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\axes\\_secondary_axes.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SecondaryAxis",
        "Contains 11 functions: __init__, set_alignment, set_location, apply_aspect, set_ticks, set_functions, draw, _set_scale, _set_lims, set_aspect, set_color",
        "Imports: numbers, numpy, matplotlib._api, matplotlib._docstring, matplotlib.transforms, matplotlib.ticker, matplotlib.axes._base._AxesBase, matplotlib.axes._base._TransformedBoundsLocator, matplotlib.axis.Axis, matplotlib.transforms.Transform"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\axes\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: _SubplotBaseMeta, SubplotBase",
        "Contains 2 functions: subplot_class_factory, __instancecheck__",
        "Imports: ._base, _axes.Axes"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_agg.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: RendererAgg, FigureCanvasAgg, _BackendAgg",
        "Contains 34 functions: get_hinting_flag, __init__, __getstate__, __setstate__, _update_methods, draw_path, draw_mathtext, draw_text, get_text_width_height_descent, draw_tex, get_canvas_width_height, _prepare_font, points_to_pixels, buffer_rgba, tostring_argb, clear, option_image_nocomposite, option_scale_image, restore_region, start_filter, stop_filter, copy_from_bbox, restore_region, draw, get_renderer, tostring_argb, buffer_rgba, print_raw, _print_pil, print_png, print_to_buffer, print_jpg, print_tif, print_webp",
        "Imports: contextlib.nullcontext, math.radians, math.cos, math.sin, numpy, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.RendererBase, matplotlib.font_manager.fontManager, matplotlib.font_manager.get_font, matplotlib.ft2font.LoadFlags, matplotlib.mathtext.MathTextParser, matplotlib.path.Path, matplotlib.transforms.Bbox, matplotlib.transforms.BboxBase, matplotlib.backends._backend_agg.RendererAgg"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_cairo.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: RendererCairo, GraphicsContextCairo, _CairoRegion, FigureCanvasCairo, _BackendCairo",
        "Contains 38 functions: _set_rgba, _append_path, _cairo_font_args_from_font_prop, attr, __init__, set_context, _fill_and_stroke, draw_path, draw_markers, draw_image, draw_text, _draw_mathtext, get_canvas_width_height, get_text_width_height_descent, new_gc, points_to_pixels, __init__, restore, set_alpha, set_antialiased, get_antialiased, set_capstyle, set_clip_rectangle, set_clip_path, set_dashes, set_foreground, get_rgb, set_joinstyle, set_linewidth, __init__, _renderer, get_renderer, copy_from_bbox, restore_region, print_png, print_rgba, _get_printed_image_surface, _save",
        "Imports: functools, gzip, math, numpy, ._api, .cbook, .font_manager, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.GraphicsContextBase, matplotlib.backend_bases.RendererBase, matplotlib.font_manager.ttfFontProperty, matplotlib.path.Path, matplotlib.transforms.Affine2D, cairo, cairocffi"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_gtk3.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: FigureCanvasGTK3, NavigationToolbar2GTK3, ToolbarGTK3, SaveFigureGTK3, HelpGTK3, ToolCopyToClipboardGTK3, FigureManagerGTK3, _BackendGTK3",
        "Contains 44 functions: _mpl_to_gtk_cursor, __init__, destroy, set_cursor, _mpl_coords, scroll_event, button_press_event, button_release_event, key_press_event, key_release_event, motion_notify_event, enter_notify_event, leave_notify_event, size_allocate, _mpl_buttons, _mpl_modifiers, _get_key, _update_device_pixel_ratio, configure_event, _draw_rubberband, _post_draw, on_draw_event, draw, draw_idle, flush_events, __init__, save_figure, __init__, add_toolitem, _add_button, _call_tool, toggle_toolitem, remove_toolitem, _add_separator, set_message, trigger, _normalize_shortcut, _is_valid_shortcut, _show_shortcuts_window, _show_shortcuts_dialog, trigger, trigger, idle_draw, on_notify_filter",
        "Imports: functools, logging, os, pathlib.Path, matplotlib, matplotlib._api, matplotlib.backend_tools, matplotlib.cbook, matplotlib.backend_bases.ToolContainerBase, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases.CloseEvent, matplotlib.backend_bases.KeyEvent, matplotlib.backend_bases.LocationEvent, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.ResizeEvent, gi.repository.Gio, gi.repository.GLib, gi.repository.GObject, gi.repository.Gtk, gi.repository.Gdk, ._backend_gtk, _backend_gtk._BackendGTK, _backend_gtk._FigureCanvasGTK, _backend_gtk._FigureManagerGTK, _backend_gtk._NavigationToolbar2GTK, _backend_gtk.TimerGTK, gi"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_gtk3agg.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasGTK3Agg, _BackendGTK3Agg",
        "Contains 3 functions: __init__, on_draw_event, blit",
        "Imports: numpy, .cbook, .transforms, .backend_agg, .backend_gtk3, backend_gtk3.GLib, backend_gtk3.Gtk, backend_gtk3._BackendGTK3, cairo"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_gtk3cairo.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasGTK3Cairo, _BackendGTK3Cairo",
        "Contains 1 functions: on_draw_event",
        "Imports: contextlib.nullcontext, backend_cairo.FigureCanvasCairo, backend_gtk3.GLib, backend_gtk3.Gtk, backend_gtk3.FigureCanvasGTK3, backend_gtk3._BackendGTK3"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_gtk4.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: FigureCanvasGTK4, NavigationToolbar2GTK4, ToolbarGTK4, SaveFigureGTK4, HelpGTK4, ToolCopyToClipboardGTK4, FigureManagerGTK4, _BackendGTK4",
        "Contains 43 functions: __init__, destroy, set_cursor, _mpl_coords, scroll_event, button_press_event, button_release_event, key_press_event, key_release_event, motion_notify_event, enter_notify_event, leave_notify_event, resize_event, _mpl_buttons, _mpl_modifiers, _get_key, _realize_event, _update_device_pixel_ratio, _draw_rubberband, _draw_func, _post_draw, on_draw_event, draw, draw_idle, flush_events, __init__, save_figure, __init__, add_toolitem, _find_child_at_position, _add_button, _call_tool, toggle_toolitem, remove_toolitem, _add_separator, set_message, trigger, _normalize_shortcut, _is_valid_shortcut, trigger, trigger, idle_draw, on_response",
        "Imports: functools, io, os, matplotlib, matplotlib._api, matplotlib.backend_tools, matplotlib.cbook, matplotlib.backend_bases.ToolContainerBase, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases.KeyEvent, matplotlib.backend_bases.LocationEvent, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.ResizeEvent, matplotlib.backend_bases.CloseEvent, gi.repository.Gio, gi.repository.GLib, gi.repository.Gtk, gi.repository.Gdk, gi.repository.GdkPixbuf, ._backend_gtk, _backend_gtk._BackendGTK, _backend_gtk._FigureCanvasGTK, _backend_gtk._FigureManagerGTK, _backend_gtk._NavigationToolbar2GTK, _backend_gtk.TimerGTK, gi"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_gtk4agg.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasGTK4Agg, _BackendGTK4Agg",
        "Contains 1 functions: on_draw_event",
        "Imports: numpy, .cbook, .backend_agg, .backend_gtk4, backend_gtk4.GLib, backend_gtk4.Gtk, backend_gtk4._BackendGTK4, cairo"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_gtk4cairo.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasGTK4Cairo, _BackendGTK4Cairo",
        "Contains 2 functions: _set_device_pixel_ratio, on_draw_event",
        "Imports: contextlib.nullcontext, backend_cairo.FigureCanvasCairo, backend_gtk4.GLib, backend_gtk4.Gtk, backend_gtk4.FigureCanvasGTK4, backend_gtk4._BackendGTK4"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_macosx.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: TimerMac, FigureCanvasMac, NavigationToolbar2Mac, FigureManagerMac, _BackendMac",
        "Contains 19 functions: _allow_interrupt_macos, __init__, draw, draw_idle, _single_shot_timer, _draw_idle, blit, resize, start_event_loop, __init__, draw_rubberband, remove_rubberband, save_figure, __init__, _close_button_pressed, destroy, start_main_loop, show, callback_func",
        "Imports: os, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib._pylab_helpers.Gcf, ._macosx, backend_agg.FigureCanvasAgg, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.NavigationToolbar2, matplotlib.backend_bases.ResizeEvent, matplotlib.backend_bases.TimerBase, matplotlib.backend_bases._allow_interrupt"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_mixed.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: MixedModeRenderer",
        "Contains 4 functions: __init__, __getattr__, start_rasterizing, stop_rasterizing",
        "Imports: numpy, matplotlib.cbook, backend_agg.RendererAgg, matplotlib._tight_bbox.process_figure_for_rasterizing"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_nbagg.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: NavigationIPy, FigureManagerNbAgg, FigureCanvasNbAgg, CommSocket, _BackendNbAgg",
        "Contains 20 functions: connection_info, __init__, create_with_canvas, display_js, show, reshow, connected, get_javascript, _create_comm, destroy, clearup_closed, remove_comm, __init__, is_open, on_close, send_json, send_binary, on_message, destroy, _on_close",
        "Imports: base64.b64encode, io, json, pathlib, uuid, ipykernel.comm.Comm, IPython.display.display, IPython.display.Javascript, IPython.display.HTML, matplotlib.is_interactive, matplotlib._pylab_helpers.Gcf, matplotlib.backend_bases._Backend, matplotlib.backend_bases.CloseEvent, matplotlib.backend_bases.NavigationToolbar2, backend_webagg_core.FigureCanvasWebAggCore, backend_webagg_core.FigureManagerWebAgg, backend_webagg_core.NavigationToolbar2WebAgg, backend_webagg_core.TimerTornado, backend_webagg_core.TimerAsyncio, matplotlib._pylab_helpers.Gcf"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pdf.py": {
      "entityType": "file",
      "observations": [
        "Contains 11 classes: Reference, Name, Verbatim, Op, Stream, PdfFile, RendererPdf, GraphicsContextPdf, PdfPages, FigureCanvasPdf, _BackendPdf",
        "Contains 129 functions: _fill, _create_pdf_info_dict, _datetime_to_pdf, _calculate_quad_point_coordinates, _get_coordinates_of_block, _get_link_annotation, pdfRepr, _font_supports_glyph, _get_pdf_charprocs, is_string_like, is_date, check_trapped, __init__, __repr__, pdfRepr, write, __init__, __repr__, __str__, __eq__, __lt__, __hash__, pdfRepr, __init__, pdfRepr, pdfRepr, paint_path, __init__, _writeHeader, end, write, _flush, __init__, newPage, newTextnote, _get_subsetted_psname, finalize, close, write, output, beginStream, endStream, outputStream, _write_annotations, fontName, dviFontName, writeFonts, _write_afm_font, _embedTeXFont, createType1Descriptor, _get_xobject_glyph_name, embedTTF, alphaState, _soft_mask_state, writeExtGSTates, _write_soft_mask_groups, hatchPattern, writeHatches, addGouraudTriangles, writeGouraudTriangles, imageObject, _unpack, _writePng, _writeImg, writeImages, markerObject, writeMarkers, pathCollectionObject, writePathCollectionTemplates, pathOperations, writePath, reserveObject, recordXref, writeObject, writeXref, writeInfoDict, writeTrailer, __init__, finalize, check_gc, get_image_magnification, draw_image, draw_path, draw_path_collection, draw_markers, draw_gouraud_triangles, _setup_textpos, draw_mathtext, draw_tex, encode_string, draw_text, _draw_xobject_glyph, new_gc, __init__, __repr__, stroke, fill, paint, capstyle_cmd, joinstyle_cmd, linewidth_cmd, dash_cmd, alpha_cmd, hatch_cmd, rgb_cmd, fillcolor_cmd, push, pop, clip_cmd, delta, copy_properties, finalize, __init__, __enter__, __exit__, _ensure_file, close, infodict, savefig, get_pagecount, attach_note, get_default_filetype, print_pdf, draw, toStr, cvt, embedTTFType3, embedTTFType42, get_char_width",
        "Imports: codecs, datetime.timezone, datetime.datetime, enum.Enum, functools.total_ordering, io.BytesIO, itertools, logging, math, os, string, struct, sys, time, types, warnings, zlib, numpy, PIL.Image, matplotlib, matplotlib._api, matplotlib._text_helpers, matplotlib._type1font, matplotlib.cbook, matplotlib.dviread, matplotlib._pylab_helpers.Gcf, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.GraphicsContextBase, matplotlib.backend_bases.RendererBase, matplotlib.backends.backend_mixed.MixedModeRenderer, matplotlib.figure.Figure, matplotlib.font_manager.get_font, matplotlib.font_manager.fontManager, matplotlib._afm.AFM, matplotlib.ft2font.FT2Font, matplotlib.ft2font.FaceFlags, matplotlib.ft2font.Kerning, matplotlib.ft2font.LoadFlags, matplotlib.ft2font.StyleFlags, matplotlib.transforms.Affine2D, matplotlib.transforms.BboxBase, matplotlib.path.Path, matplotlib.dates.UTC, matplotlib._path, ._backend_pdf_ps, encodings.cp1252"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_pgf.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: LatexError, LatexManager, RendererPgf, FigureCanvasPgf, _BackendPgf, PdfPages",
        "Contains 51 functions: _get_preamble, _tex_escape, _writeln, _escape_and_apply_props, _metadata_to_str, make_pdf_to_png_converter, _get_image_inclusion_command, __init__, __str__, _build_latex_header, _get_cached_or_new, _get_cached_or_new_impl, _stdin_writeln, _expect, _expect_prompt, __init__, _setup_latex_process, get_width_height_descent, _get_box_metrics, __init__, draw_markers, draw_path, _print_pgf_clip, _print_pgf_path_styles, _print_pgf_path, _pgf_path_draw, option_scale_image, option_image_nocomposite, draw_image, draw_tex, draw_text, get_text_width_height_descent, flipy, get_canvas_width_height, points_to_pixels, get_default_filetype, _print_pgf_to_fh, print_pgf, print_pdf, print_png, get_renderer, draw, __init__, _write_header, __enter__, __exit__, close, _run_latex, savefig, get_pagecount, finalize_latex",
        "Imports: codecs, datetime, functools, io.BytesIO, logging, math, os, pathlib, shutil, subprocess, tempfile.TemporaryDirectory, weakref, PIL.Image, matplotlib, matplotlib.cbook, matplotlib.font_manager, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.RendererBase, matplotlib.backends.backend_mixed.MixedModeRenderer, matplotlib.backends.backend_pdf._create_pdf_info_dict, matplotlib.backends.backend_pdf._datetime_to_pdf, matplotlib.path.Path, matplotlib.figure.Figure, matplotlib.font_manager.FontProperties, matplotlib._pylab_helpers.Gcf"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_ps.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: RendererPS, _Orientation, FigureCanvasPS, _BackendPS",
        "Contains 49 functions: _nums_to_str, _move_path_to_path_or_stream, _font_to_ps_type3, _font_to_ps_type42, _serialize_type42, _version_and_breakpoints, _bounds, _generate_charstrings, _generate_sfnts, _log_if_debug_on, _convert_psfrags, _try_distill, gs_distill, xpdf_distill, get_bbox_header, _get_bbox_header, _get_rotate_command, pstoeps, wrapper, __init__, _is_transparent, set_color, set_linewidth, _linejoin_cmd, set_linejoin, _linecap_cmd, set_linecap, set_linedash, set_font, create_hatch, get_image_magnification, _convert_path, _get_clip_cmd, draw_image, draw_path, draw_markers, draw_path_collection, draw_tex, draw_text, draw_mathtext, draw_gouraud_triangles, _draw_ps, swap_if_landscape, get_default_filetype, _print_ps, _print_figure, _print_figure_tex, draw, print_figure_impl",
        "Imports: bisect, codecs, datetime, enum.Enum, functools, io.StringIO, itertools, logging, math, os, pathlib, shutil, struct, tempfile.TemporaryDirectory, textwrap, time, fontTools, numpy, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib._path, matplotlib._text_helpers, matplotlib._afm.AFM, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.RendererBase, matplotlib.cbook.is_writable_file_like, matplotlib.cbook.file_requires_unicode, matplotlib.font_manager.get_font, matplotlib.ft2font.LoadFlags, matplotlib._mathtext_data.uni2type1, matplotlib.path.Path, matplotlib.texmanager.TexManager, matplotlib.transforms.Affine2D, matplotlib.backends.backend_mixed.MixedModeRenderer, ._backend_pdf_ps"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_qt.py": {
      "entityType": "file",
      "observations": [
        "Contains 13 classes: TimerQT, FigureCanvasQT, MainWindow, FigureManagerQT, NavigationToolbar2QT, SubplotToolQt, ToolbarQt, ConfigureSubplotsQt, SaveFigureQt, RubberbandQt, HelpQt, ToolCopyToClipboardQT, _BackendQT",
        "Contains 85 functions: _create_qApp, _allow_interrupt_qt, prepare_notifier, handle_sigint, __init__, __del__, _timer_set_single_shot, _timer_set_interval, _timer_start, _timer_stop, __init__, _update_pixel_ratio, _update_screen, eventFilter, showEvent, set_cursor, mouseEventCoords, enterEvent, leaveEvent, mousePressEvent, mouseDoubleClickEvent, mouseMoveEvent, mouseReleaseEvent, wheelEvent, keyPressEvent, keyReleaseEvent, resizeEvent, sizeHint, minimumSizeHint, _mpl_buttons, _mpl_modifiers, _get_key, flush_events, start_event_loop, stop_event_loop, draw, draw_idle, blit, _draw_idle, drawRectangle, closeEvent, __init__, full_screen_toggle, _widgetclosed, resize, start_main_loop, show, destroy, get_window_title, set_window_title, __init__, _icon, edit_parameters, _update_buttons_checked, pan, zoom, set_message, draw_rubberband, remove_rubberband, configure_subplots, save_figure, set_history_buttons, __init__, update_from_current_subplotpars, _export_values, _on_value_changed, _tight_layout, _reset, __init__, add_toolitem, _add_to_group, toggle_toolitem, remove_toolitem, set_message, __init__, trigger, trigger, draw_rubberband, remove_rubberband, trigger, trigger, _may_clear_sock, handler, _draw_rect_callback, _draw_rect_callback",
        "Imports: functools, os, sys, traceback, matplotlib, matplotlib._api, matplotlib.backend_tools, matplotlib.cbook, matplotlib._pylab_helpers.Gcf, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.NavigationToolbar2, matplotlib.backend_bases.TimerBase, matplotlib.backend_bases.cursors, matplotlib.backend_bases.ToolContainerBase, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases.CloseEvent, matplotlib.backend_bases.KeyEvent, matplotlib.backend_bases.LocationEvent, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.ResizeEvent, matplotlib.backend_bases._allow_interrupt, matplotlib.backends.qt_editor.figureoptions, .qt_compat, qt_compat.QtCore, qt_compat.QtGui, qt_compat.QtWidgets, qt_compat.__version__, qt_compat.QT_API, qt_compat._to_int, qt_compat._isdeleted"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_qt5.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _BackendQT5",
        "Contains 1 functions: __getattr__",
        "Imports: .backends, backend_qt.SPECIAL_KEYS, backend_qt.cursord, backend_qt._create_qApp, backend_qt._BackendQT, backend_qt.TimerQT, backend_qt.MainWindow, backend_qt.FigureCanvasQT, backend_qt.FigureManagerQT, backend_qt.ToolbarQt, backend_qt.NavigationToolbar2QT, backend_qt.SubplotToolQt, backend_qt.SaveFigureQt, backend_qt.ConfigureSubplotsQt, backend_qt.RubberbandQt, backend_qt.HelpQt, backend_qt.ToolCopyToClipboardQT, backend_qt.FigureCanvasBase, backend_qt.FigureManagerBase, backend_qt.MouseButton, backend_qt.NavigationToolbar2, backend_qt.TimerBase, backend_qt.ToolContainerBase, backend_qt.figureoptions, backend_qt.Gcf, .backend_qt"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_qt5agg.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _BackendQT5Agg",
        "Contains 0 functions: ",
        "Imports: .backends, backend_qtagg._BackendQTAgg, backend_qtagg.FigureCanvasQTAgg, backend_qtagg.FigureManagerQT, backend_qtagg.NavigationToolbar2QT, backend_qtagg.FigureCanvasAgg, backend_qtagg.FigureCanvasQT"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_qt5cairo.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _BackendQT5Cairo",
        "Contains 0 functions: ",
        "Imports: .backends, backend_qtcairo._BackendQTCairo, backend_qtcairo.FigureCanvasQTCairo, backend_qtcairo.FigureCanvasCairo, backend_qtcairo.FigureCanvasQT"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_qtagg.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasQTAgg, _BackendQTAgg",
        "Contains 2 functions: paintEvent, print_figure",
        "Imports: ctypes, matplotlib.transforms.Bbox, qt_compat.QT_API, qt_compat.QtCore, qt_compat.QtGui, backend_agg.FigureCanvasAgg, backend_qt._BackendQT, backend_qt.FigureCanvasQT, backend_qt.FigureManagerQT, backend_qt.NavigationToolbar2QT, PyQt6.sip"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_qtcairo.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasQTCairo, _BackendQTCairo",
        "Contains 2 functions: draw, paintEvent",
        "Imports: ctypes, backend_cairo.cairo, backend_cairo.FigureCanvasCairo, backend_qt._BackendQT, backend_qt.FigureCanvasQT, qt_compat.QT_API, qt_compat.QtCore, qt_compat.QtGui, PyQt6.sip"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_svg.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: XMLWriter, RendererSVG, FigureCanvasSVG, _BackendSVG",
        "Contains 59 functions: _escape_cdata, _escape_comment, _escape_attrib, _quote_escape_attrib, _short_float_fmt, _generate_transform, _generate_css, _check_is_str, _check_is_iterable_of_str, __init__, __flush, start, comment, data, end, close, element, flush, __init__, _get_clippath_id, finalize, _write_metadata, _write_default_style, _make_id, _make_flip_transform, _get_hatch, _write_hatches, _get_style_dict, _get_style, _get_clip_attrs, _write_clips, open_group, close_group, option_image_nocomposite, _convert_path, draw_path, draw_markers, draw_path_collection, _draw_gouraud_triangle, draw_gouraud_triangles, option_scale_image, get_image_magnification, draw_image, _update_glyph_map_defs, _adjust_char_id, _draw_text_as_path, _draw_text_as_text, draw_text, flipy, get_canvas_width_height, get_text_width_height_descent, print_svg, print_svgz, get_default_filetype, draw, ensure_metadata, _normalize_sans, _expand_family_entry, _get_all_quoted_names",
        "Imports: base64, codecs, datetime, gzip, hashlib, io.BytesIO, itertools, logging, os, re, uuid, numpy, PIL.Image, matplotlib, matplotlib.cbook, matplotlib.font_manager, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.RendererBase, matplotlib.backends.backend_mixed.MixedModeRenderer, matplotlib.colors.rgb2hex, matplotlib.dates.UTC, matplotlib.path.Path, matplotlib._path, matplotlib.transforms.Affine2D, matplotlib.transforms.Affine2DBase"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_template.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: RendererTemplate, GraphicsContextTemplate, FigureManagerTemplate, FigureCanvasTemplate",
        "Contains 12 functions: __init__, draw_path, draw_image, draw_text, flipy, get_canvas_width_height, get_text_width_height_descent, new_gc, points_to_pixels, draw, print_foo, get_default_filetype",
        "Imports: matplotlib._api, matplotlib._pylab_helpers.Gcf, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.GraphicsContextBase, matplotlib.backend_bases.RendererBase, matplotlib.figure.Figure"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_tkagg.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasTkAgg, _BackendTkAgg",
        "Contains 2 functions: draw, blit",
        "Imports: ._backend_tk, backend_agg.FigureCanvasAgg, _backend_tk._BackendTk, _backend_tk.FigureCanvasTk, _backend_tk.FigureManagerTk, _backend_tk.NavigationToolbar2Tk"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_tkcairo.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasTkCairo, _BackendTkCairo",
        "Contains 1 functions: draw",
        "Imports: sys, numpy, ._backend_tk, backend_cairo.cairo, backend_cairo.FigureCanvasCairo, _backend_tk._BackendTk, _backend_tk.FigureCanvasTk"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg.py": {
      "entityType": "file",
      "observations": [
        "Contains 10 classes: FigureManagerWebAgg, FigureCanvasWebAgg, WebAggApplication, _BackendWebAgg, FavIcon, SingleFigurePage, AllFiguresPage, MplJs, Download, WebSocket",
        "Contains 20 functions: ipython_inline_display, pyplot_show, __init__, initialize, start, get, __init__, get, __init__, get, get, get, open, on_close, on_message, send_json, send_binary, random_ports, shutdown, catch_sigint",
        "Imports: contextlib.contextmanager, errno, io.BytesIO, json, mimetypes, pathlib.Path, random, sys, signal, threading, tornado.web, tornado.ioloop, tornado.websocket, matplotlib, matplotlib.backend_bases._Backend, matplotlib._pylab_helpers.Gcf, .backend_webagg_core, backend_webagg_core.TimerAsyncio, backend_webagg_core.TimerTornado, tornado, tornado.template, asyncio, asyncio, webbrowser"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg_core.py": {
      "entityType": "file",
      "observations": [
        "Contains 6 classes: TimerTornado, TimerAsyncio, FigureCanvasWebAggCore, NavigationToolbar2WebAgg, FigureManagerWebAgg, _BackendWebAggCoreAgg",
        "Contains 51 functions: _handle_key, __init__, _timer_start, _timer_stop, _timer_set_interval, __init__, _timer_start, _timer_stop, _timer_set_interval, __init__, show, draw, blit, draw_idle, set_cursor, set_image_mode, get_diff_image, handle_event, handle_unknown_event, handle_ack, handle_draw, _handle_mouse, _handle_key, handle_toolbar_button, handle_refresh, handle_resize, handle_send_image_mode, handle_set_device_pixel_ratio, handle_set_dpi_ratio, _handle_set_device_pixel_ratio, send_event, __init__, set_message, draw_rubberband, remove_rubberband, save_figure, pan, zoom, set_history_buttons, __init__, show, resize, set_window_title, get_window_title, add_web_socket, remove_web_socket, handle_json, refresh_all, get_javascript, get_static_file_path, _send_event",
        "Imports: asyncio, datetime, io.BytesIO, io.StringIO, json, logging, os, pathlib.Path, numpy, PIL.Image, matplotlib._api, matplotlib.backend_bases, matplotlib.backend_tools, matplotlib.backends.backend_agg, matplotlib.backend_bases._Backend, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases.KeyEvent, matplotlib.backend_bases.LocationEvent, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.ResizeEvent, tornado, tornado, matplotlib.pyplot.show"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_wx.py": {
      "entityType": "file",
      "observations": [
        "Contains 16 classes: TimerWx, RendererWx, GraphicsContextWx, _FigureCanvasWxBase, FigureCanvasWx, FigureFrameWx, FigureManagerWx, NavigationToolbar2Wx, ToolbarWx, ConfigureSubplotsWx, SaveFigureWx, RubberbandWx, _HelpDialog, HelpWx, ToolCopyToClipboardWx, _BackendWx",
        "Contains 91 functions: _create_wxapp, _load_bitmap, _set_frame_icon, __init__, _timer_start, _timer_stop, _timer_set_interval, __init__, flipy, get_text_width_height_descent, get_canvas_width_height, handle_clip_rectangle, convert_path, draw_path, draw_image, draw_text, new_gc, get_wx_font, points_to_pixels, __init__, select, unselect, set_foreground, set_linewidth, set_capstyle, set_joinstyle, get_wxcolour, __init__, Copy_to_Clipboard, _update_device_pixel_ratio, draw_idle, flush_events, start_event_loop, stop_event_loop, _get_imagesave_wildcards, gui_repaint, _on_paint, _on_size, _mpl_buttons, _mpl_modifiers, _get_key, _mpl_coords, _on_key_down, _on_key_up, set_cursor, _set_capture, _on_capture_lost, _on_mouse_button, _on_mouse_wheel, _on_motion, _on_enter, _on_leave, draw, _print_image, __init__, _on_close, __init__, create_with_canvas, start_main_loop, show, destroy, full_screen_toggle, get_window_title, set_window_title, resize, __init__, _icon, _update_buttons_checked, zoom, pan, save_figure, draw_rubberband, remove_rubberband, set_message, set_history_buttons, __init__, _get_tool_pos, add_toolitem, toggle_toolitem, remove_toolitem, set_message, trigger, trigger, draw_rubberband, remove_rubberband, __init__, _on_close, show, trigger, trigger, handler",
        "Imports: functools, logging, math, pathlib, sys, weakref, numpy, PIL.Image, matplotlib, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.GraphicsContextBase, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases.NavigationToolbar2, matplotlib.backend_bases.RendererBase, matplotlib.backend_bases.TimerBase, matplotlib.backend_bases.ToolContainerBase, matplotlib.backend_bases.cursors, matplotlib.backend_bases.CloseEvent, matplotlib.backend_bases.KeyEvent, matplotlib.backend_bases.LocationEvent, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.ResizeEvent, matplotlib._api, matplotlib.cbook, matplotlib.backend_tools, matplotlib._c_internal_utils, matplotlib._pylab_helpers.Gcf, matplotlib.path.Path, matplotlib.transforms.Affine2D, wx, wx.svg"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_wxagg.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasWxAgg, _BackendWxAgg",
        "Contains 3 functions: draw, blit, _create_bitmap",
        "Imports: wx, backend_agg.FigureCanvasAgg, backend_wx._BackendWx, backend_wx._FigureCanvasWxBase, backend_wx.NavigationToolbar2Wx"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_wxcairo.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: FigureCanvasWxCairo, _BackendWxCairo",
        "Contains 1 functions: draw",
        "Imports: wx.lib.wxcairo, backend_cairo.cairo, backend_cairo.FigureCanvasCairo, backend_wx._BackendWx, backend_wx._FigureCanvasWxBase, backend_wx.NavigationToolbar2Wx"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\qt_compat.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: _setup_pyqt5plus, _exec, _isdeleted, _isdeleted",
        "Imports: operator, os, platform, sys, packaging.version.parse, matplotlib, ._QT_FORCE_QT5_BINDING, PyQt6.QtCore, PyQt6.QtGui, PyQt6.QtWidgets, PyQt6.sip, PySide6.QtCore, PySide6.QtGui, PySide6.QtWidgets, PySide6.__version__, shiboken6, PyQt5.QtCore, PyQt5.QtGui, PyQt5.QtWidgets, sip, PySide2.QtCore, PySide2.QtGui, PySide2.QtWidgets, PySide2.__version__, PySide2.shiboken2, shiboken2"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\registry.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: BackendFilter, BackendRegistry",
        "Contains 16 functions: __init__, _backend_module_name, _clear, _ensure_entry_points_loaded, _get_gui_framework_by_loading, _read_entry_points, _validate_and_store_entry_points, backend_for_gui_framework, is_valid_backend, list_all, list_builtin, list_gui_frameworks, load_backend_module, resolve_backend, resolve_gui_or_backend, backward_compatible_entry_points",
        "Imports: enum.Enum, importlib, importlib.metadata, matplotlib._parse_to_version_info, matplotlib.get_backend"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\_backend_gtk.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: TimerGTK, _FigureCanvasGTK, _FigureManagerGTK, _NavigationToolbar2GTK, RubberbandGTK, ConfigureSubplotsGTK, _BackendGTK",
        "Contains 26 functions: _shutdown_application, _create_application, mpl_to_gtk_cursor_name, __init__, _timer_start, _timer_stop, _timer_set_interval, _on_timer, __init__, destroy, start_main_loop, show, full_screen_toggle, get_window_title, set_window_title, resize, set_message, draw_rubberband, remove_rubberband, _update_buttons_checked, pan, zoom, set_history_buttons, draw_rubberband, remove_rubberband, trigger",
        "Imports: logging, sys, matplotlib, matplotlib._api, matplotlib.backend_tools, matplotlib.cbook, matplotlib._pylab_helpers.Gcf, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.NavigationToolbar2, matplotlib.backend_bases.TimerBase, matplotlib.backend_tools.Cursors, gi, gi.repository.Gdk, gi.repository.Gio, gi.repository.GLib, gi.repository.Gtk"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\_backend_pdf_ps.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: CharacterTracker, RendererPDFPSBase",
        "Contains 14 functions: _cached_get_afm_from_fname, get_glyphs_subset, font_as_file, __init__, track, track_glyph, __init__, flipy, option_scale_image, option_image_nocomposite, get_canvas_width_height, get_text_width_height_descent, _get_font_afm, _get_font_ttf",
        "Imports: io.BytesIO, functools, logging, fontTools.subset, matplotlib, .font_manager, .ft2font, _afm.AFM, backend_bases.RendererBase"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\_backend_tk.py": {
      "entityType": "file",
      "observations": [
        "Contains 10 classes: TimerTk, FigureCanvasTk, FigureManagerTk, NavigationToolbar2Tk, RubberbandTk, ToolbarTk, SaveFigureTk, ConfigureSubplotsTk, HelpTk, _BackendTk",
        "Contains 79 functions: _restore_foreground_window_at_end, _blit, blit, add_tooltip, __init__, _timer_start, _timer_stop, _on_timer, __init__, _update_device_pixel_ratio, resize, draw_idle, get_tk_widget, _event_mpl_coords, motion_notify_event, enter_notify_event, leave_notify_event, button_press_event, button_dblclick_event, button_release_event, scroll_event, scroll_event_windows, _mpl_buttons, _mpl_modifiers, _get_key, key_press, key_release, new_timer, flush_events, start_event_loop, stop_event_loop, set_cursor, __init__, create_with_canvas, start_main_loop, _update_window_dpi, resize, show, destroy, get_window_title, set_window_title, full_screen_toggle, __init__, _rescale, _update_buttons_checked, pan, zoom, set_message, draw_rubberband, remove_rubberband, _set_image_for_button, _Button, _Spacer, save_figure, set_history_buttons, showtip, hidetip, draw_rubberband, remove_rubberband, __init__, _rescale, add_toolitem, _get_groupframe, _add_separator, _button_click, toggle_toolitem, remove_toolitem, set_message, trigger, trigger, trigger, scroll_event_windows, filter_destroy, idle_draw, delayed_destroy, _get_color, _is_dark, _recolor_icon, destroy",
        "Imports: uuid, weakref, contextlib.contextmanager, logging, math, os.path, pathlib, sys, tkinter, tkinter.filedialog, tkinter.font, tkinter.messagebox, tkinter.simpledialog.SimpleDialog, numpy, PIL.Image, PIL.ImageTk, matplotlib, matplotlib._api, matplotlib.backend_tools, matplotlib.cbook, matplotlib._c_internal_utils, matplotlib.backend_bases._Backend, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.FigureManagerBase, matplotlib.backend_bases.NavigationToolbar2, matplotlib.backend_bases.TimerBase, matplotlib.backend_bases.ToolContainerBase, matplotlib.backend_bases.cursors, matplotlib.backend_bases._Mode, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases.CloseEvent, matplotlib.backend_bases.KeyEvent, matplotlib.backend_bases.LocationEvent, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.ResizeEvent, matplotlib._pylab_helpers.Gcf, ._tkagg, _tkagg.TK_PHOTO_COMPOSITE_OVERLAY, _tkagg.TK_PHOTO_COMPOSITE_SET"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: registry.BackendFilter, registry.backend_registry"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\qt_editor\\figureoptions.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: figure_edit, convert_limits, prepare_data, apply_callback",
        "Imports: itertools.chain, matplotlib.cbook, matplotlib.cm, matplotlib.colors, matplotlib.markers, matplotlib.image, matplotlib.backends.qt_compat.QtGui, matplotlib.backends.qt_editor._formlayout, matplotlib.dates.DateConverter, matplotlib.dates.num2date"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\qt_editor\\_formlayout.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: ColorButton, ColorLayout, FontLayout, FormWidget, FormComboWidget, FormTabWidget, FormDialog",
        "Contains 36 functions: to_qcolor, font_is_installed, tuple_to_qfont, qfont_to_tuple, is_edit_valid, fedit, __init__, choose_color, get_color, set_color, __init__, update_color, update_text, text, __init__, get_font, __init__, get_dialog, setup, get, __init__, setup, get, __init__, setup, get, __init__, register_float_field, update_buttons, accept, reject, apply, get, create_datalist_example, create_datagroup_example, apply_test",
        "Imports: ast.literal_eval, copy, datetime, logging, numbers.Integral, numbers.Real, matplotlib._api, matplotlib.colors, matplotlib.backends.qt_compat._to_int, matplotlib.backends.qt_compat.QtGui, matplotlib.backends.qt_compat.QtWidgets, matplotlib.backends.qt_compat.QtCore"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\backends\\qt_editor\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\projections\\geo.py": {
      "entityType": "file",
      "observations": [
        "Contains 15 classes: GeoAxes, _GeoTransform, AitoffAxes, HammerAxes, MollweideAxes, LambertAxes, ThetaFormatter, AitoffTransform, InvertedAitoffTransform, HammerTransform, InvertedHammerTransform, MollweideTransform, InvertedMollweideTransform, LambertTransform, InvertedLambertTransform",
        "Contains 59 functions: _init_axis, clear, _set_lim_and_transforms, _get_affine_transform, get_xaxis_transform, get_xaxis_text1_transform, get_xaxis_text2_transform, get_yaxis_transform, get_yaxis_text1_transform, get_yaxis_text2_transform, _gen_axes_patch, _gen_axes_spines, set_yscale, set_xlim, invert_xaxis, format_coord, set_longitude_grid, set_latitude_grid, set_longitude_grid_ends, get_data_ratio, can_zoom, can_pan, start_pan, end_pan, drag_pan, __init__, __str__, transform_path_non_affine, __init__, _get_core_transform, __init__, _get_core_transform, __init__, _get_core_transform, __init__, clear, _get_core_transform, _get_affine_transform, __init__, __call__, transform_non_affine, inverted, transform_non_affine, inverted, transform_non_affine, inverted, transform_non_affine, inverted, transform_non_affine, inverted, transform_non_affine, inverted, __init__, transform_non_affine, inverted, __init__, transform_non_affine, inverted, d",
        "Imports: numpy, matplotlib, matplotlib._api, matplotlib.axes.Axes, matplotlib.axis, matplotlib.patches.Circle, matplotlib.path.Path, matplotlib.spines, matplotlib.ticker.Formatter, matplotlib.ticker.NullLocator, matplotlib.ticker.FixedLocator, matplotlib.ticker.NullFormatter, matplotlib.transforms.Affine2D, matplotlib.transforms.BboxTransformTo, matplotlib.transforms.Transform"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\projections\\polar.py": {
      "entityType": "file",
      "observations": [
        "Contains 14 classes: PolarTransform, PolarAffine, InvertedPolarTransform, ThetaFormatter, _AxisWrapper, ThetaLocator, ThetaTick, ThetaAxis, RadialLocator, _ThetaShift, RadialTick, RadialAxis, _WedgeBbox, PolarAxes",
        "Contains 96 functions: _apply_theta_transforms_warn, _is_full_circle_deg, _is_full_circle_rad, __init__, _get_rorigin, transform_non_affine, transform_path_non_affine, inverted, __init__, get_matrix, __init__, transform_non_affine, inverted, __call__, __init__, get_view_interval, set_view_interval, get_minpos, get_data_interval, set_data_interval, get_tick_space, __init__, set_axis, __call__, view_limits, __init__, _apply_params, _update_padding, update_position, _wrap_locator_formatter, clear, _set_scale, _copy_tick_props, __init__, set_axis, __call__, _zero_in_bounds, nonsingular, view_limits, __init__, get_matrix, __init__, _determine_anchor, update_position, __init__, _wrap_locator_formatter, clear, _set_scale, __init__, get_points, __init__, clear, _init_axis, _set_lim_and_transforms, get_xaxis_transform, get_xaxis_text1_transform, get_xaxis_text2_transform, get_yaxis_transform, get_yaxis_text1_transform, get_yaxis_text2_transform, draw, _gen_axes_patch, _gen_axes_spines, set_thetamax, get_thetamax, set_thetamin, get_thetamin, set_thetalim, set_theta_offset, get_theta_offset, set_theta_zero_location, set_theta_direction, get_theta_direction, set_rmax, get_rmax, set_rmin, get_rmin, set_rorigin, get_rorigin, get_rsign, set_rlim, get_rlabel_position, set_rlabel_position, set_yscale, set_rscale, set_rticks, set_thetagrids, set_rgrids, format_coord, get_data_ratio, can_zoom, can_pan, start_pan, end_pan, drag_pan, format_sig",
        "Imports: math, types, numpy, matplotlib, matplotlib._api, matplotlib.cbook, matplotlib.axes.Axes, matplotlib.axis, matplotlib.markers, matplotlib.patches, matplotlib.path.Path, matplotlib.ticker, matplotlib.transforms, matplotlib.spines.Spine"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\projections\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ProjectionRegistry",
        "Contains 6 functions: register_projection, get_projection_class, __init__, register, get_projection_class, get_projection_names",
        "Imports: .axes, ._docstring, geo.AitoffAxes, geo.HammerAxes, geo.LambertAxes, geo.MollweideAxes, polar.PolarAxes, mpl_toolkits.mplot3d.Axes3D, warnings"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\figmpl_directive.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: figmplnode, FigureMpl",
        "Contains 9 functions: _parse_srcsetNodes, _copy_images_figmpl, visit_figmpl_html, visit_figmpl_latex, depart_figmpl_html, depart_figmpl_latex, figurempl_addnode, setup, run",
        "Imports: os, os.path.relpath, pathlib.PurePath, pathlib.Path, shutil, docutils.nodes, docutils.parsers.rst.directives, docutils.parsers.rst.directives.images.Figure, docutils.parsers.rst.directives.images.Image, sphinx.errors.ExtensionError, matplotlib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\mathmpl.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: latex_math, MathDirective",
        "Contains 11 functions: fontset_choice, math_role, latex2png, latex2html, _config_inited, setup, run, visit_latex_math_html, depart_latex_math_html, visit_latex_math_latex, depart_latex_math_latex",
        "Imports: hashlib, pathlib.Path, docutils.nodes, docutils.parsers.rst.Directive, docutils.parsers.rst.directives, sphinx, sphinx.errors.ConfigError, sphinx.errors.ExtensionError, matplotlib, matplotlib._api, matplotlib.mathtext, matplotlib.rcsetup.validate_float_or_None"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\plot_directive.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: PlotDirective, ImageFile, PlotError",
        "Contains 20 functions: _option_boolean, _option_context, _option_format, mark_plot_labels, _copy_css_file, setup, contains_doctest, _split_code_at_show, out_of_date, _run_code, clear_state, get_plot_formats, _parse_srcset, render_figures, run, run, __init__, filename, filenames, out_of_date_one",
        "Imports: contextlib, doctest, io.StringIO, itertools, os, os.path.relpath, pathlib.Path, re, shutil, sys, textwrap, traceback, docutils.parsers.rst.directives, docutils.parsers.rst.Directive, docutils.parsers.rst.directives.images.Image, jinja2, sphinx.errors.ExtensionError, matplotlib, matplotlib.backend_bases.FigureManagerBase, matplotlib.pyplot, matplotlib._pylab_helpers, matplotlib.cbook"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\roles.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _QueryReference",
        "Contains 6 functions: _visit_query_reference_node, _depart_query_reference_node, _rcparam_role, _mpltype_role, setup, to_query_string",
        "Imports: urllib.parse.urlsplit, urllib.parse.urlunsplit, docutils.nodes, matplotlib, matplotlib.rcParamsDefault"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\style\\core.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 6 functions: use, context, update_user_library, read_style_directory, update_nested_dict, reload_library",
        "Imports: contextlib, importlib.resources, logging, os, pathlib.Path, warnings, matplotlib, matplotlib._api, matplotlib._docstring, matplotlib._rc_params_in_file, matplotlib.rcParamsDefault"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\style\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: core.available, core.context, core.library, core.reload_library, core.use"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\compare.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: _ConverterError, _Converter, _GSConverter, _SVGConverter, _SVGWithMatplotlibFontsConverter",
        "Contains 22 functions: make_test_filename, _get_cache_path, get_cache_dir, get_file_hash, _update_converter, comparable_formats, convert, _clean_conversion_cache, _register_conversion_cache_cleaner_once, crop_to_same, calculate_rms, _load_image, compare_images, save_diff_image, __init__, __del__, _read_until, __call__, __call__, __del__, __call__, encode_and_escape",
        "Imports: atexit, functools, hashlib, logging, os, pathlib.Path, shutil, subprocess, sys, tempfile.TemporaryDirectory, tempfile.TemporaryFile, weakref, re, numpy, PIL.Image, matplotlib, matplotlib.cbook, matplotlib.testing.exceptions.ImageComparisonFailure, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\conftest.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 8 functions: pytest_configure, pytest_unconfigure, mpl_test_settings, pd, xr, text_placeholders, patched_get_text_metrics_with_cache, patched_text_draw",
        "Imports: pytest, sys, matplotlib, matplotlib._api, matplotlib.testing.decorators._cleanup_cm, matplotlib.patches.Rectangle, pandas.plotting.deregister_matplotlib_converters, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\decorators.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _ImageComparisonBase",
        "Contains 18 functions: _cleanup_cm, _check_freetype_version, _checked_on_freetype_version, remove_ticks_and_titles, _collect_new_figures, _raise_on_image_difference, _pytest_image_comparison, image_comparison, check_figures_equal, _image_directories, remove_ticks, __init__, copy_baseline, compare, decorator, decorator, wrapper, wrapper",
        "Imports: contextlib, functools, inspect, os, platform.uname, pathlib.Path, shutil, string, sys, warnings, packaging.version.parse, matplotlib.style, matplotlib.units, matplotlib.testing, matplotlib._pylab_helpers, matplotlib.cbook, matplotlib.ft2font, matplotlib.pyplot, matplotlib.ticker, compare.comparable_formats, compare.compare_images, compare.make_test_filename, exceptions.ImageComparisonFailure, pytest, pytest, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\exceptions.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: ImageComparisonFailure",
        "Contains 0 functions: ",
        "Imports: "
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\widgets.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: get_ax, noop, mock_event, do_event, click_and_drag",
        "Imports: unittest.mock, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\_markers.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: _checkdep_usetex",
        "Imports: logging, shutil, pytest, matplotlib.testing, matplotlib.testing.compare, matplotlib._get_executable_info, matplotlib.ExecutableNotFoundError"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 9 functions: set_font_settings_for_testing, set_reproducibility_for_testing, setup, subprocess_run_for_testing, subprocess_run_helper, _check_for_pgf, _has_tex_package, ipython_in_subprocess, is_ci_environment",
        "Imports: pathlib.Path, tempfile.TemporaryDirectory, locale, logging, os, subprocess, sys, matplotlib, matplotlib._api, pytest, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\jpl_units\\Duration.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Duration",
        "Contains 13 functions: __init__, frame, __abs__, __neg__, seconds, __bool__, _cmp, __add__, __sub__, __mul__, __str__, __repr__, checkSameFrame",
        "Imports: functools, operator, matplotlib._api, matplotlib.testing.jpl_units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\jpl_units\\Epoch.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Epoch",
        "Contains 11 functions: __init__, convert, frame, julianDate, secondsPast, _cmp, __add__, __sub__, __str__, __repr__, range",
        "Imports: functools, operator, math, datetime, matplotlib._api, matplotlib.dates.date2num, matplotlib.testing.jpl_units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\jpl_units\\EpochConverter.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: EpochConverter",
        "Contains 6 functions: axisinfo, float2epoch, epoch2float, duration2float, convert, default_units",
        "Imports: matplotlib.cbook, matplotlib.units, matplotlib.dates, matplotlib.testing.jpl_units, matplotlib.testing.jpl_units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\jpl_units\\StrConverter.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: StrConverter",
        "Contains 3 functions: axisinfo, convert, default_units",
        "Imports: numpy, matplotlib.units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\jpl_units\\UnitDbl.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: UnitDbl",
        "Contains 13 functions: __init__, convert, __abs__, __neg__, __bool__, _cmp, _binop_unit_unit, _binop_unit_scalar, __str__, __repr__, type, range, checkSameUnits",
        "Imports: functools, operator, matplotlib._api"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\jpl_units\\UnitDblConverter.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: UnitDblConverter",
        "Contains 4 functions: rad_fn, axisinfo, convert, default_units",
        "Imports: numpy, matplotlib.cbook, matplotlib.units, matplotlib.projections.polar, matplotlib.testing.jpl_units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\jpl_units\\UnitDblFormatter.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: UnitDblFormatter",
        "Contains 3 functions: __call__, format_data_short, format_data",
        "Imports: matplotlib.ticker"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\testing\\jpl_units\\__init__.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: register",
        "Imports: Duration.Duration, Epoch.Epoch, UnitDbl.UnitDbl, StrConverter.StrConverter, EpochConverter.EpochConverter, UnitDblConverter.UnitDblConverter, UnitDblFormatter.UnitDblFormatter, matplotlib.units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\conftest.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 0 functions: ",
        "Imports: matplotlib.testing.conftest.mpl_test_settings, matplotlib.testing.conftest.pytest_configure, matplotlib.testing.conftest.pytest_unconfigure, matplotlib.testing.conftest.pd, matplotlib.testing.conftest.text_placeholders, matplotlib.testing.conftest.xr"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_afm.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 7 functions: test_nonascii_str, test_parse_header, test_parse_char_metrics, test_get_familyname_guessed, test_font_manager_weight_normalization, test_bad_afm, test_malformed_header",
        "Imports: io.BytesIO, pytest, logging, matplotlib._afm, matplotlib.font_manager"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_agg.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: BaseFilter, OffsetFilter, GaussianFilter, DropShadowFilter",
        "Contains 29 functions: test_repeated_save_with_alpha, test_large_single_path_collection, test_marker_with_nan, test_long_path, test_agg_filter, test_too_large_image, test_chunksize, test_jpeg_dpi, test_pil_kwargs_png, test_pil_kwargs_tiff, test_pil_kwargs_webp, test_webp_alpha, test_draw_path_collection_error_handling, test_chunksize_fails, test_non_tuple_rgbaface, smooth1d, smooth2d, get_pad, process_image, __call__, __init__, get_pad, process_image, __init__, get_pad, process_image, __init__, get_pad, process_image",
        "Imports: io, numpy, numpy.testing.assert_array_almost_equal, PIL.features, PIL.Image, PIL.TiffTags, pytest, matplotlib.collections, matplotlib.patheffects, matplotlib.pyplot, matplotlib.transforms, matplotlib.rcParams, matplotlib.rc_context, matplotlib.backends.backend_agg.RendererAgg, matplotlib.figure.Figure, matplotlib.image.imread, matplotlib.path.Path, matplotlib.testing.decorators.image_comparison, matplotlib.transforms.IdentityTransform, PIL.PngImagePlugin.PngInfo"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_agg_filter.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: test_agg_filter_alpha, manual_alpha",
        "Imports: numpy, matplotlib.pyplot, matplotlib.testing.decorators.image_comparison"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_animation.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: NullMovieWriter, RegisteredNullMovieWriter, DummyMovieWriter, Frame",
        "Contains 39 functions: anim, test_null_movie_writer, test_animation_delete, test_movie_writer_dpi_default, gen_writers, test_save_animation_smoketest, test_grabframe, test_animation_repr_html, test_no_length_frames, test_movie_writer_registry, test_embed_limit, test_cleanup_temporaries, test_failing_ffmpeg, test_funcanimation_cache_frame_data, test_draw_frame, test_exhausted_animation, test_no_frame_warning, test_animation_frame, test_save_count_override_warnings_has_length, test_save_count_override_warnings_scaler, test_disable_cache_warning, test_movie_writer_invalid_path, test_animation_with_transparency, init, animate, setup, grab_frame, finish, __init__, isAvailable, init, animate, frames_generator, animate, update, update, init, animate, _run",
        "Imports: os, pathlib.Path, platform, re, shutil, subprocess, sys, weakref, numpy, pytest, matplotlib, matplotlib.pyplot, matplotlib.animation, matplotlib.animation.PillowWriter, matplotlib.testing.decorators.check_figures_equal, matplotlib.animation._validate_grabframe_kwargs"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_api.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: A, C",
        "Contains 16 functions: test_check_shape, test_classproperty_deprecation, test_warn_deprecated, test_deprecate_privatize_attribute, test_delete_parameter, test_make_keyword_only, test_deprecation_alternative, test_empty_check_in_list, func1, func2, pyplot_wrapper, func, f, f, __init__, _meth",
        "Imports: __future__.annotations, collections.abc.Callable, re, typing, typing.Any, typing.TypeVar, numpy, pytest, matplotlib, matplotlib._api, typing_extensions.Self"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_arrow_patches.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 10 functions: draw_arrow, test_fancyarrow, test_boxarrow, __prepare_fancyarrow_dpi_cor_test, test_fancyarrow_dpi_cor_100dpi, test_fancyarrow_dpi_cor_200dpi, test_fancyarrow_dash, test_arrow_styles, test_connection_styles, test_invalid_intersection",
        "Imports: pytest, platform, matplotlib.pyplot, matplotlib.testing.decorators.image_comparison, matplotlib.patches"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_artist.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: TestArtist, MyArtist1, MyArtist2, MyArtist3, MyArtist4, Gen1, Gen2, TestKlass",
        "Contains 28 functions: test_patch_transform_of_none, test_collection_transform_of_none, test_clipping, test_clipping_zoom, test_cull_markers, test_hatching, test_remove, test_default_edges, test_properties, test_setp, test_None_zorder, test_artist_inspector_get_valid_values, test_artist_inspector_get_aliases, test_set_alpha, test_set_alpha_for_array, test_callbacks, test_set_signature, test_set_is_overwritten, test_format_cursor_data_BoundaryNorm, test_auto_no_rasterize, test_draw_wraper_forward_input, test_get_figure, func, set_f, set_myparam1, set_myparam2, set, draw",
        "Imports: io, itertools.chain, numpy, pytest, matplotlib.colors, matplotlib.pyplot, matplotlib.patches, matplotlib.lines, matplotlib.path, matplotlib.transforms, matplotlib.collections, matplotlib.artist, matplotlib.backend_bases, matplotlib, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_axes.py": {
      "entityType": "file",
      "observations": [
        "Contains 9 classes: TestScatter, _Translation, SubClaAxes, ClearAxes, ClearSuperAxes, SubClearAxes, Polar, ClaAxes, ClaSuperAxes",
        "Contains 627 functions: test_invisible_axes, test_get_labels, test_repr, test_label_loc_vertical, test_label_loc_horizontal, test_label_loc_rc, test_label_shift, test_acorr, test_acorr_integers, test_spy, test_spy_invalid_kwargs, test_matshow, test_formatter_ticker, test_funcformatter_auto_formatter, test_strmethodformatter_auto_formatter, test_twin_axis_locators_formatters, test_twinx_cla, test_twin_units, test_twin_logscale, test_twinx_axis_scales, test_twin_inherit_autoscale_setting, test_inverted_cla, test_subclass_clear_cla, test_cla_not_redefined_internally, test_minorticks_on_rcParams_both, test_autoscale_tiny_range, test_autoscale_tight, test_autoscale_log_shared, test_use_sticky_edges, test_sticky_shared_axes, test_sticky_tolerance, test_sticky_tolerance_contourf, test_nargs_stem, test_nargs_legend, test_nargs_pcolorfast, test_basic_annotate, test_arrow_simple, test_arrow_empty, test_arrow_in_view, test_annotate_default_arrow, test_annotate_signature, test_fill_units, test_plot_format_kwarg_redundant, test_errorbar_dashes, test_errorbar_mapview_kwarg, test_single_point, test_single_date, test_shaped_data, test_structured_data, test_aitoff_proj, test_axvspan_epoch, test_axhspan_epoch, test_hexbin_extent, test_hexbin_bad_extents, test_hexbin_string_norm, test_hexbin_empty, test_hexbin_pickable, test_hexbin_log, test_hexbin_log_offsets, test_hexbin_linear, test_hexbin_log_clim, test_hexbin_mincnt_behavior_upon_C_parameter, test_inverted_limits, test_nonfinite_limits, test_limits_empty_data, test_imshow, test_imshow_clip, test_imshow_norm_vminvmax, test_polycollection_joinstyle, test_fill_between_input, test_fill_betweenx_input, test_fill_between_interpolate, test_fill_between_interpolate_decreasing, test_fill_between_interpolate_nan, test_symlog, test_symlog2, test_pcolorargs_5205, test_pcolormesh, test_pcolormesh_small, test_pcolormesh_alpha, test_pcolormesh_rgba, test_pcolormesh_nearest_noargs, test_pcolormesh_datetime_axis, test_pcolor_datetime_axis, test_pcolorargs, test_pcolormesh_underflow_error, test_pcolorargs_with_read_only, test_pcolornearest, test_pcolornearestunits, test_pcolorflaterror, test_samesizepcolorflaterror, test_pcolorauto, test_canonical, test_arc_angles, test_arc_ellipse, test_marker_as_markerstyle, test_markevery, test_markevery_line, test_markevery_linear_scales, test_markevery_linear_scales_zoomed, test_markevery_log_scales, test_markevery_polar, test_markevery_linear_scales_nans, test_marker_edges, test_bar_tick_label_single, test_nan_bar_values, test_bar_ticklabel_fail, test_bar_tick_label_multiple, test_bar_tick_label_multiple_old_alignment, test_bar_decimal_center, test_barh_decimal_center, test_bar_decimal_width, test_barh_decimal_height, test_bar_color_none_alpha, test_bar_edgecolor_none_alpha, test_barh_tick_label, test_bar_timedelta, test_bar_datetime_start, test_boxplot_dates_pandas, test_boxplot_capwidths, test_pcolor_regression, test_bar_pandas, test_bar_pandas_indexed, test_bar_hatches, test_bar_labels, test_bar_labels_length, test_pandas_minimal_plot, test_hist_log, test_hist_log_2, test_hist_log_barstacked, test_hist_bar_empty, test_hist_float16, test_hist_step_empty, test_hist_step_filled, test_hist_density, test_hist_unequal_bins_density, test_hist_datetime_datasets, test_hist_datetime_datasets_bins, test_hist_with_empty_input, test_hist_zorder, test_stairs_no_baseline_fill_warns, test_stairs, test_stairs_fill, test_stairs_update, test_stairs_baseline_None, test_stairs_empty, test_stairs_invalid_nan, test_stairs_invalid_mismatch, test_stairs_invalid_update, test_stairs_invalid_update2, test_stairs_options, test_stairs_datetime, test_stairs_edge_handling, contour_dat, test_contour_hatching, test_contour_colorbar, test_hist2d, test_hist2d_transpose, test_hist2d_density, _params, test_parse_scatter_color_args, test_parse_scatter_color_args_edgecolors, test_parse_scatter_color_args_error, test_parse_c_facecolor_warning_direct, test_scatter_c_facecolor_warning_integration, test_as_mpl_axes_api, test_pyplot_axes, test_log_scales, test_log_scales_no_data, test_log_scales_invalid, test_stackplot, test_stackplot_baseline, test_stackplot_hatching, test_stackplot_subfig_legend, _bxp_test_helper, test_bxp_baseline, test_bxp_rangewhis, test_bxp_percentilewhis, test_bxp_with_xlabels, test_bxp_horizontal, test_bxp_with_ylabels, test_bxp_patchartist, test_bxp_custompatchartist, test_bxp_customoutlier, test_bxp_showcustommean, test_bxp_custombox, test_bxp_custommedian, test_bxp_customcap, test_bxp_customwhisker, test_boxplot_median_bound_by_box, test_bxp_shownotches, test_bxp_nocaps, test_bxp_nobox, test_bxp_no_flier_stats, test_bxp_showmean, test_bxp_showmeanasline, test_bxp_scalarwidth, test_bxp_customwidths, test_bxp_custompositions, test_bxp_bad_widths, test_bxp_bad_positions, test_bxp_custom_capwidths, test_bxp_custom_capwidth, test_bxp_bad_capwidths, test_boxplot, test_boxplot_masked, test_boxplot_custom_capwidths, test_boxplot_sym2, test_boxplot_sym, test_boxplot_autorange_whiskers, _rc_test_bxp_helper, test_boxplot_rc_parameters, test_boxplot_with_CIarray, test_boxplot_no_weird_whisker, test_boxplot_bad_medians, test_boxplot_bad_ci, test_boxplot_zorder, test_boxplot_marker_behavior, test_boxplot_mod_artist_after_plotting, test_vert_violinplot_baseline, test_vert_violinplot_showmeans, test_vert_violinplot_showextrema, test_vert_violinplot_showmedians, test_vert_violinplot_showall, test_vert_violinplot_custompoints_10, test_vert_violinplot_custompoints_200, test_horiz_violinplot_baseline, test_horiz_violinplot_showmedians, test_horiz_violinplot_showmeans, test_horiz_violinplot_showextrema, test_horiz_violinplot_showall, test_horiz_violinplot_custompoints_10, test_horiz_violinplot_custompoints_200, test_violinplot_sides, test_violinplot_bad_positions, test_violinplot_bad_widths, test_violinplot_bad_quantiles, test_violinplot_outofrange_quantiles, test_violinplot_single_list_quantiles, test_violinplot_pandas_series, test_manage_xticks, test_boxplot_not_single, test_tick_space_size_0, test_errorbar, test_mixed_errorbar_polar_caps, test_errorbar_colorcycle, test_errorbar_cycle_ecolor, test_errorbar_shape, test_errorbar_limits, test_errorbar_nonefmt, test_errorbar_remove, test_errorbar_line_specific_kwargs, test_errorbar_with_prop_cycle, test_errorbar_every_invalid, test_xerr_yerr_not_negative, test_xerr_yerr_not_none, test_errorbar_every, test_errorbar_linewidth_type, test_errorbar_nan, test_errorbar_masked_negative, test_hist_stacked_stepfilled, test_hist_offset, test_hist_step, test_hist_step_horiz, test_hist_stacked_weighted, test_stem, test_stem_args, test_stem_markerfmt, test_stem_dates, test_stem_orientation, test_hist_stacked_stepfilled_alpha, test_hist_stacked_step, test_hist_stacked_density, test_hist_step_bottom, test_hist_step_geometry, test_hist_step_bottom_geometry, test_hist_stacked_step_geometry, test_hist_stacked_step_bottom_geometry, test_hist_stacked_bar, test_hist_vectorized_params, test_hist_sequence_type_styles, test_hist_color_none, test_hist_color_semantics, test_hist_barstacked_bottom_unchanged, test_hist_emptydata, test_hist_unused_labels, test_hist_labels, test_transparent_markers, test_rgba_markers, test_mollweide_grid, test_mollweide_forward_inverse_closure, test_mollweide_inverse_forward_closure, test_alpha, test_eventplot, test_eventplot_defaults, test_eventplot_colors, test_eventplot_alpha, test_eventplot_problem_kwargs, test_empty_eventplot, test_eventplot_orientation, test_eventplot_units_list, test_marker_styles, test_markers_fillstyle_rcparams, test_vertex_markers, test_eb_line_zorder, test_axline_loglog, test_axline, test_axline_transaxes, test_axline_transaxes_panzoom, test_axline_args, test_vlines, test_vlines_default, test_hlines, test_hlines_default, test_lines_with_colors, test_vlines_hlines_blended_transform, test_step_linestyle, test_mixed_collection, test_subplot_key_hash, test_specgram, test_specgram_magnitude, test_specgram_angle, test_specgram_fs_none, test_specgram_origin_rcparam, test_specgram_origin_kwarg, test_psd_csd, test_spectrum, test_psd_csd_edge_cases, test_twin_remove, test_twin_spines, test_twin_spines_on_top, test_rcparam_grid_minor, test_grid, test_reset_grid, test_reset_ticks, test_context_ticks, test_vline_limit, test_axline_minmax, test_empty_shared_subplots, test_shared_with_aspect_1, test_shared_with_aspect_2, test_shared_with_aspect_3, test_shared_aspect_error, test_axis_errors, test_axis_method_errors, test_twin_with_aspect, test_relim_visible_only, test_text_labelsize, test_pie_default, test_pie_linewidth_0, test_pie_center_radius, test_pie_linewidth_2, test_pie_ccw_true, test_pie_frame_grid, test_pie_rotatelabels_true, test_pie_nolabel_but_legend, test_pie_shadow, test_pie_textprops, test_pie_get_negative_values, test_pie_invalid_explode, test_pie_invalid_labels, test_pie_invalid_radius, test_normalize_kwarg_pie, test_pie_hatch_single, test_pie_hatch_multi, test_set_get_ticklabels, test_set_ticks_kwargs_raise_error_without_labels, test_set_ticks_with_labels, test_xticks_bad_args, test_subsampled_ticklabels, test_mismatched_ticklabels, test_empty_ticks_fixed_loc, test_retain_tick_visibility, test_warn_too_few_labels, test_tick_label_update, test_o_marker_path_snap, test_margins, test_margin_getters, test_set_margin_updates_limits, test_margins_errors, test_length_one_hist, test_set_xy_bound, test_pathological_hexbin, test_color_None, test_color_alias, test_numerical_hist_label, test_unicode_hist_label, test_move_offsetlabel, test_rc_spines, test_rc_grid, test_rc_tick, test_rc_major_minor_tick, test_square_plot, test_bad_plot_args, test_pcolorfast, test_pcolorfast_bad_dims, test_pcolorfast_regular_xy_incompatible_size, test_shared_scale, test_shared_bool, test_violin_point_mass, generate_errorbar_inputs, test_errorbar_inputs_shotgun, test_dash_offset, test_title_pad, test_title_location_roundtrip, test_title_location_shared, test_loglog, test_loglog_nonpos, test_axes_margins, shared_axis_remover, shared_axes_generator, test_remove_shared_axes, test_remove_shared_axes_relim, test_shared_axes_autoscale, test_adjust_numtick_aspect, test_auto_numticks, test_auto_numticks_log, test_broken_barh_empty, test_broken_barh_timedelta, test_pandas_pcolormesh, test_pandas_indexing_dates, test_pandas_errorbar_indexing, test_pandas_index_shape, test_pandas_indexing_hist, test_pandas_bar_align_center, test_axis_get_tick_params, test_axis_set_tick_params_labelsize_labelcolor, test_axes_tick_params_gridlines, test_axes_tick_params_ylabelside, test_axes_tick_params_xlabelside, test_none_kwargs, test_bar_uint8, test_date_timezone_x, test_date_timezone_y, test_date_timezone_x_and_y, test_axisbelow, test_titletwiny, test_titlesetpos, test_title_xticks_top, test_title_xticks_top_both, test_title_above_offset, test_title_no_move_off_page, test_title_inset_ax, test_offset_label_color, test_offset_text_visible, test_large_offset, test_barb_units, test_quiver_units, test_bar_color_cycle, test_tick_param_label_rotation, test_fillbetween_cycle, test_log_margins, test_color_length_mismatch, test_eventplot_legend, test_eventplot_errors, test_bar_broadcast_args, test_invalid_axis_limits, test_minorticks_on, test_twinx_knows_limits, test_zero_linewidth, test_empty_errorbar_legend, test_plot_decimal, test_markerfacecolor_none_alpha, test_tick_padding_tightbbox, test_inset, test_zoom_inset, test_inset_polar, test_inset_projection, test_inset_subclass, test_indicate_inset_inverted, test_set_position, test_spines_properbbox_after_zoom, test_limits_after_scroll_zoom, test_gettightbbox_ignore_nan, test_scatter_series_non_zero_index, test_scatter_empty_data, test_annotate_across_transforms, test_secondary_xy, test_secondary_fail, test_secondary_resize, test_secondary_minorloc, test_secondary_formatter, test_secondary_repr, test_axis_options, color_boxes, test_normal_axes, test_nodecorator, test_displaced_spine, test_tickdirs, test_minor_accountedfor, test_axis_bool_arguments, test_axis_extent_arg, test_axis_extent_arg2, test_hist_auto_bins, test_hist_nan_data, test_hist_range_and_density, test_bar_errbar_zorder, test_set_ticks_inverted, test_aspect_nonlinear_adjustable_box, test_aspect_nonlinear_adjustable_datalim, test_box_aspect, test_box_aspect_custom_position, test_bbox_aspect_axes_init, test_set_aspect_negative, test_redraw_in_frame, test_invisible_axes_events, test_xtickcolor_is_not_markercolor, test_ytickcolor_is_not_markercolor, test_unautoscale, test_polar_interpolation_steps_variable_r, test_autoscale_tiny_sticky, test_xtickcolor_is_not_xticklabelcolor, test_ytickcolor_is_not_yticklabelcolor, test_xaxis_offsetText_color, test_yaxis_offsetText_color, test_relative_ticklabel_sizes, test_multiplot_autoscale, test_sharing_does_not_link_positions, test_2dcolor_plot, test_shared_axes_clear, test_shared_axes_retick, test_ylabel_ha_with_position, test_bar_label_location_vertical, test_bar_label_location_vertical_yinverted, test_bar_label_location_horizontal, test_bar_label_location_horizontal_yinverted, test_bar_label_location_horizontal_xinverted, test_bar_label_location_horizontal_xyinverted, test_bar_label_location_center, test_centered_bar_label_nonlinear, test_centered_bar_label_label_beyond_limits, test_bar_label_location_errorbars, test_bar_label_fmt, test_bar_label_fmt_error, test_bar_label_labels, test_bar_label_nan_ydata, test_bar_label_nan_ydata_inverted, test_nan_barlabels, test_patch_bounds, test_warn_ignored_scatter_kwargs, test_artist_sublists, test_empty_line_plots, test_plot_format_errors, test_plot_format, test_automatic_legend, test_plot_errors, test_clim, test_bezier_autoscale, test_small_autoscale, test_get_xticklabel, test_bar_leading_nan, test_bar_all_nan, test_extent_units, test_cla_clears_children_axes_and_fig, test_child_axes_removal, test_scatter_color_repr_error, test_zorder_and_explicit_rasterization, test_preset_clip_paths, test_rc_axes_label_formatting, test_ecdf, test_ecdf_invalid, test_fill_between_axes_limits, test_tick_param_labelfont, test_set_secondary_axis_color, test_xylim_changed_shared, test_axhvlinespan_interpolation, test_axes_clear_behavior, test_axes_clear_reference_cycle, test_boxplot_tick_labels, test_latex_pie_percent, test_violinplot_orientation, test_boxplot_orientation, test_use_colorizer_keyword, test_wrong_use_colorizer, test_bar_color_precedence, test_axes_set_position_external_bbox_unchanged, test_caps_color, test_caps_no_ecolor, _formfunc, test_scatter_plot, test_scatter_marker, test_scatter_2D, test_scatter_decimal, test_scatter_color, test_scatter_color_warning, test_scatter_unfilled, test_scatter_unfillable, test_scatter_size_arg_size, test_scatter_edgecolor_RGB, test_scatter_invalid_color, test_scatter_no_invalid_color, test_scatter_norm_vminvmax, test_scatter_single_point, test_scatter_different_shapes, test_scatter_c, test_scatter_single_color_c, test_scatter_linewidths, test_scatter_singular_plural_arguments, get_next_color, get_next_color, get_next_color, get_next_color, layers, transform, transform, transform, _assert_equal, _assert_equal, make_patch_spines_invisible, formatter_func, _helper_x, _helper_y, __init__, transform, inverted, invert, invert, invert, get_next_color, assert_not_in_reference_cycle, clear, clear, get_next_color, __init__, _as_mpl_axes, cla, cla",
        "Imports: contextlib, collections.namedtuple, collections.deque, datetime, decimal.Decimal, functools.partial, gc, inspect, io, itertools.product, platform, sys, types.SimpleNamespace, dateutil.tz, numpy, numpy.ma, cycler.cycler, pytest, matplotlib, matplotlib, matplotlib.rc_context, matplotlib.patheffects, matplotlib.colors, matplotlib.dates, matplotlib.figure.Figure, matplotlib.axes.Axes, matplotlib.lines.Line2D, matplotlib.collections.PathCollection, matplotlib.font_manager, matplotlib.markers, matplotlib.patches, matplotlib.path, matplotlib.projections.geo.HammerAxes, matplotlib.projections.polar.PolarAxes, matplotlib.pyplot, matplotlib.text, matplotlib.ticker, matplotlib.transforms, mpl_toolkits.axisartist, numpy.testing.assert_allclose, numpy.testing.assert_array_equal, numpy.testing.assert_array_almost_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.remove_ticks_and_titles, matplotlib.testing._markers.needs_usetex, matplotlib.testing.jpl_units, matplotlib.testing.jpl_units, matplotlib.testing.jpl_units, matplotlib.testing.jpl_units, pandas.plotting.register_matplotlib_converters, pandas.plotting.deregister_matplotlib_converters, matplotlib.lines"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_axis.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: test_tick_labelcolor_array, test_axis_not_in_layout, test_translate_tick_params_reverse",
        "Imports: numpy, matplotlib.pyplot, matplotlib.axis.XTick"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backends_interactive.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: _WaitForStringPopen, CustomTool",
        "Contains 34 functions: _get_available_interactive_backends, _get_testable_interactive_backends, _test_toolbar_button_la_mode_icon, _test_interactive_impl, test_interactive_backend, _test_thread_impl, test_interactive_thread_safety, _impl_test_lazy_auto_backend_selection, test_lazy_auto_backend_selection, _implqt5agg, _implcairo, _implcore, test_qt5backends_uses_qt5, _impl_missing, test_qt_missing, _impl_test_cross_Qt_imports, qt5_and_qt6_pairs, test_cross_Qt_imports, test_webagg, _lazy_headless, test_lazy_linux_headless, _test_number_of_draws_script, test_blitting_events, _impl_test_interactive_timers, test_interactive_timers, _test_sigint_impl, test_sigint, _test_other_signal_before_sigint_impl, test_other_signal_before_sigint, __init__, wait_for, interrupter, custom_signal_handler, check_alt_backend",
        "Imports: functools, importlib, importlib.util, inspect, json, os, platform, signal, subprocess, sys, tempfile, time, urllib.request, PIL.Image, pytest, matplotlib, matplotlib._c_internal_utils, matplotlib.backend_tools.ToolToggleBase, matplotlib.testing.subprocess_run_helper, matplotlib.testing.is_ci_environment, importlib.util, io, json, sys, pytest, matplotlib, matplotlib.pyplot, matplotlib.backend_bases.KeyEvent, concurrent.futures.ThreadPoolExecutor, matplotlib, matplotlib.pyplot, matplotlib, matplotlib.pyplot, matplotlib.backends.backend_qt5agg, sys, matplotlib.backends.backend_qt5cairo, sys, matplotlib.backends.backend_qt5, sys, sys, matplotlib.pyplot, importlib, sys, warnings, matplotlib.backends.backend_qt, os, sys, matplotlib.pyplot, matplotlib.pyplot, unittest.mock.Mock, matplotlib.pyplot, sys, matplotlib.pyplot, os, threading, signal, matplotlib.pyplot, win32api, signal, packaging.version.parse, gi"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_bases.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 22 functions: test_uses_per_path, test_canvas_ctor, test_get_default_filename, test_canvas_change, test_non_gui_warning, test_grab_clear, test_location_event_position, test_location_event_position_twin, test_pick, test_interactive_zoom, test_widgetlock_zoompan, test_interactive_colorbar, test_toolbar_zoompan, test_toolbar_home_restores_autoscale, test_draw, test_interactive_pan, test_toolmanager_remove, test_toolmanager_get_tool, test_toolmanager_update_keymap, test_interactive_pan_zoom_events, check, handle_pick",
        "Imports: importlib, matplotlib.path, matplotlib.transforms, matplotlib.backend_bases.FigureCanvasBase, matplotlib.backend_bases.KeyEvent, matplotlib.backend_bases.LocationEvent, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.NavigationToolbar2, matplotlib.backend_bases.RendererBase, matplotlib.backend_tools.RubberbandBase, matplotlib.figure.Figure, matplotlib.testing._markers.needs_pgf_xelatex, matplotlib.pyplot, numpy, pytest, matplotlib.figure.Figure, matplotlib.backends.backend_agg.FigureCanvas"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_cairo.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_patch_alpha_coloring",
        "Imports: numpy, pytest, matplotlib.testing.decorators.check_figures_equal, matplotlib.collections, matplotlib.patches, matplotlib.path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_gtk3.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: test_correct_key, test_save_figure_return, send, receive",
        "Imports: os, matplotlib.pyplot, pytest, unittest.mock, gi.repository.Gdk, gi.repository.Gtk, gi.repository.Gtk"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_inline.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_ipynb",
        "Imports: os, pathlib.Path, tempfile.TemporaryDirectory, pytest, matplotlib.testing.subprocess_run_for_testing, IPython"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_macosx.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: test_cached_renderer, test_savefig_rcparam, test_ipython, test_save_figure_return, new_choose_save_file",
        "Imports: os, pytest, unittest.mock, matplotlib, matplotlib.pyplot, matplotlib.backends._macosx, matplotlib.testing.ipython_in_subprocess"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_nbagg.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_ipynb",
        "Imports: os, pathlib.Path, tempfile.TemporaryDirectory, pytest, matplotlib.testing.subprocess_run_for_testing, IPython"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_pdf.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 25 functions: test_use14corefonts, test_embed_fonts, test_multipage_pagecount, test_multipage_properfinalize, test_multipage_keep_empty, test_composite_image, test_indexed_image, test_savefig_metadata, test_invalid_metadata, test_multipage_metadata, test_text_urls, test_text_rotated_urls, test_text_urls_tex, test_pdfpages_fspath, test_hatching_legend, test_grayscale_alpha, test_pdf_eps_savefig_when_color_is_none, test_failing_latex, test_empty_rasterized, test_kerning, test_glyphs_subset, test_multi_font_type3, test_multi_font_type42, test_otf_font_smoke, test_truetype_conversion",
        "Imports: datetime, decimal, io, os, pathlib.Path, numpy, pytest, matplotlib, matplotlib.pyplot, matplotlib.rcParams, matplotlib.font_manager, matplotlib.cbook._get_data_path, matplotlib.ft2font.FT2Font, matplotlib.font_manager.findfont, matplotlib.font_manager.FontProperties, matplotlib.backends._backend_pdf_ps.get_glyphs_subset, matplotlib.backends._backend_pdf_ps.font_as_file, matplotlib.backends.backend_pdf.PdfPages, matplotlib.patches.Rectangle, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing._markers.needs_usetex"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_pgf.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 19 functions: compare_figure, test_tex_special_chars, create_figure, test_xelatex, test_pdflatex, test_rcupdate, test_pathclip, test_mixedmode, test_bbox_inches, test_pdf_pages, test_pdf_pages_metadata_check, test_multipage_keep_empty, test_tex_restart_after_error, test_bbox_inches_tight, test_png_transparency, test_unknown_font, test_minus_signs_with_tex, test_sketch_params, test_document_font_size",
        "Imports: datetime, io.BytesIO, os, shutil, numpy, packaging.version.parse, pytest, matplotlib, matplotlib.pyplot, matplotlib.testing._has_tex_package, matplotlib.testing._check_for_pgf, matplotlib.testing.exceptions.ImageComparisonFailure, matplotlib.testing.compare.compare_images, matplotlib.backends.backend_pgf.PdfPages, matplotlib.testing.decorators._image_directories, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing._markers.needs_ghostscript, matplotlib.testing._markers.needs_pgf_lualatex, matplotlib.testing._markers.needs_pgf_pdflatex, matplotlib.testing._markers.needs_pgf_xelatex"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_ps.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 24 functions: test_savefig_to_stringio, test_patheffects, test_tilde_in_tempfilename, test_transparency, test_transparency_tex, test_bbox, test_failing_latex, test_partial_usetex, test_usetex_preamble, test_useafm, test_type3_font, test_colored_hatch_zero_linewidth, test_text_clip, test_d_glyph, test_type42_font_without_prep, test_fonttype, test_linedash, test_empty_line, test_no_duplicate_definition, test_multi_font_type3, test_multi_font_type42, test_path_collection, test_colorbar_shift, test_auto_papersize_removal",
        "Imports: collections.Counter, pathlib.Path, io, re, tempfile, numpy, pytest, matplotlib.cbook, matplotlib.path, matplotlib.patheffects, matplotlib.font_manager, matplotlib.figure.Figure, matplotlib.patches.Ellipse, matplotlib.testing._markers.needs_ghostscript, matplotlib.testing._markers.needs_usetex, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib, matplotlib.collections, matplotlib.colors, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_qt.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: _Event",
        "Contains 21 functions: qt_core, test_fig_close, test_correct_key, test_device_pixel_ratio_change, test_subplottool, test_figureoptions, test_save_figure_return, test_figureoptions_with_datetime_axes, test_double_resize, test_canvas_reinit, test_form_widget_get_with_datetime_and_date_fields, _get_testable_qt_backends, test_fig_sigint_override, test_ipython, on_key_press, crashing_callback, fire_signal_and_quit, custom_handler, isAutoRepeat, key, set_device_pixel_ratio",
        "Imports: copy, importlib, os, signal, sys, datetime.date, datetime.datetime, unittest.mock, pytest, matplotlib, matplotlib.pyplot, matplotlib._pylab_helpers.Gcf, matplotlib._c_internal_utils, matplotlib.backends.qt_compat.QtGui, matplotlib.backends.qt_compat.QtWidgets, matplotlib.backends.qt_editor._formlayout, matplotlib.backends.qt_compat.QtCore, matplotlib.backends.qt_compat._to_int, matplotlib.backends.qt_compat.QtCore, matplotlib.backends.backend_qtagg.FigureCanvasQTAgg, matplotlib.backends.backend_qt._create_qApp, matplotlib.backends.backend_qt5._BackendQT5, matplotlib.testing.ipython_in_subprocess"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_registry.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 18 functions: clear_backend_registry, has_duplicates, test_backend_for_gui_framework, test_list_builtin, test_list_builtin_with_filter, test_list_gui_frameworks, test_is_valid_backend, test_backend_normalization, test_deprecated_rcsetup_attributes, test_entry_points_inline, test_entry_points_ipympl, test_entry_point_name_shadows_builtin, test_entry_point_name_duplicate, test_entry_point_identical, test_entry_point_name_is_module, test_load_entry_points_only_if_needed, test_resolve_gui_or_backend, test_resolve_gui_or_backend_invalid",
        "Imports: collections.abc.Sequence, typing.Any, pytest, matplotlib, matplotlib.backends.BackendFilter, matplotlib.backends.backend_registry"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_svg.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 30 functions: test_visibility, test_fill_black_with_alpha, test_noscale, test_text_urls, test_bold_font_output, test_bold_font_output_with_none_fonttype, test_rasterized, test_rasterized_ordering, test_prevent_rasterization, test_count_bitmaps, test_unicode_won, test_svgnone_with_data_coordinates, test_gid, test_clip_path_ids_reuse, test_savefig_tight, test_url, test_url_tick, test_svg_default_metadata, test_svg_clear_default_metadata, test_svg_clear_all_metadata, test_svg_metadata, test_multi_font_type3, test_multi_font_type42, test_svg_incorrect_metadata, test_svg_escape, test_svg_font_string, test_annotationbbox_gid, test_svgid, count_tag, include",
        "Imports: datetime, io.BytesIO, pathlib.Path, xml.etree.ElementTree, xml.parsers.expat, pytest, numpy, matplotlib, matplotlib.figure.Figure, matplotlib.patches.Circle, matplotlib.text.Text, matplotlib.pyplot, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing._markers.needs_usetex, matplotlib.font_manager, matplotlib.offsetbox.OffsetImage, matplotlib.offsetbox.AnnotationBbox, matplotlib.offsetbox.OffsetBox, matplotlib.axis.Tick"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_template.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: test_load_template, test_load_old_api, test_show, test_show_old_global_api, test_load_case_sensitive",
        "Imports: sys, types.SimpleNamespace, unittest.mock.MagicMock, matplotlib, matplotlib.pyplot, matplotlib.backends.backend_template, matplotlib.backends.backend_template.FigureCanvasTemplate, matplotlib.backends.backend_template.FigureManagerTemplate"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_tk.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: Toolbar",
        "Contains 15 functions: _isolated_tk_test, test_blit, test_figuremanager_preserves_host_mainloop, test_figuremanager_cleans_own_mainloop, test_never_update, test_missing_back_button, test_save_figure_return, test_canvas_focus, test_embedding, test_func, do_plot, legitimate_quit, target, check_focus, test_figure",
        "Imports: functools, importlib, os, platform, subprocess, sys, pytest, matplotlib._c_internal_utils, matplotlib.testing.subprocess_run_helper, matplotlib.pyplot, numpy, matplotlib.backends.backend_tkagg, matplotlib.backends._backend_tk, matplotlib.backends._tkagg, tkinter, matplotlib.pyplot, tkinter, time, matplotlib.pyplot, threading, matplotlib.cbook._get_running_interactive_framework, tkinter, matplotlib.pyplot, matplotlib.pyplot, matplotlib.backends.backend_tkagg.NavigationToolbar2Tk, matplotlib.pyplot, unittest.mock, tkinter, matplotlib.pyplot, tkinter, matplotlib.backends.backend_tkagg.FigureCanvasTkAgg, matplotlib.backends.backend_tkagg.NavigationToolbar2Tk, matplotlib.backend_bases.key_press_handler, matplotlib.figure.Figure"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_tools.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_format_shortcut",
        "Imports: pytest, matplotlib.backend_tools.ToolHelpBase"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_backend_webagg.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: test_webagg_fallback, test_webagg_core_no_toolbar",
        "Imports: os, sys, pytest, matplotlib.backends.backend_webagg_core, matplotlib.testing.subprocess_run_for_testing"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_basic.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: test_simple, test_override_builtins, test_lazy_imports",
        "Imports: builtins, os, sys, textwrap, matplotlib.testing.subprocess_run_for_testing, pylab"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_bbox_tight.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 12 functions: test_bbox_inches_tight, test_bbox_inches_tight_suptile_legend, test_bbox_inches_tight_suptitle_non_default, test_bbox_inches_tight_layout_constrained, test_bbox_inches_tight_layout_notconstrained, test_bbox_inches_tight_clipping, test_bbox_inches_tight_raster, test_only_on_non_finite_bbox, test_tight_pcolorfast, test_noop_tight_bbox, test_bbox_inches_fixed_aspect, y_formatter",
        "Imports: io.BytesIO, platform, numpy, matplotlib.testing.decorators.image_comparison, matplotlib.pyplot, matplotlib.path, matplotlib.patches, matplotlib.ticker.FuncFormatter, PIL.Image"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_bezier.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_split_bezier_with_large_values",
        "Imports: matplotlib.bezier.inside_circle, matplotlib.bezier.split_bezier_intersecting_with_closedpath"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_category.py": {
      "entityType": "file",
      "observations": [
        "Contains 8 classes: TestUnitData, FakeAxis, TestStrCategoryConverter, TestStrCategoryLocator, TestStrCategoryFormatter, TestPlotBytes, TestPlotNumlike, TestPlotTypes",
        "Contains 31 functions: axis_test, test_overriding_units_in_plot, test_no_deprecation_on_empty_data, test_hist, test_set_lim, test_unit, test_update, test_non_string_fails, test_non_string_update_fails, __init__, mock_axis, test_convert, test_convert_one_string, test_convert_fail, test_axisinfo, test_default_units, test_StrCategoryLocator, test_StrCategoryLocatorPlot, test_StrCategoryFormatter, test_StrCategoryFormatterPlot, test_plot_bytes, test_plot_numlike, test_plot_unicode, test_data, test_plot_xaxis, test_plot_yaxis, test_plot_xyaxis, test_update_plot, test_update_plot_heterogenous_plotter, test_mixed_type_exception, test_mixed_type_update_exception",
        "Imports: warnings, pytest, numpy, matplotlib, matplotlib.axes.Axes, matplotlib.pyplot, matplotlib.category, matplotlib.testing.decorators.check_figures_equal, datetime.datetime"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_cbook.py": {
      "entityType": "file",
      "observations": [
        "Contains 15 classes: Test_delete_masked_points, Test_boxplot_stats, Hashable, Unhashable, Test_callback_registry, TestException, Dummy, Dummy, Dummy, ArraySubclass, A, B, Tensor, Array, Tensor",
        "Contains 95 functions: test_callbackregistry_default_exception_handler, raising_cb_reg, test_callbackregistry_custom_exception_handler, test_callbackregistry_signals, test_callbackregistry_blocking, test_strip_comment, test_strip_comment_invalid, test_sanitize_sequence, test_normalize_kwargs_fail, test_normalize_kwargs_pass, test_warn_external, test_warn_external_frame_embedded_python, test_to_prestep, test_to_prestep_empty, test_to_poststep, test_to_poststep_empty, test_to_midstep, test_to_midstep_empty, test_step_fails, test_grouper, test_grouper_private, test_flatiter, test__safe_first_finite_all_nan, test__safe_first_finite_all_inf, test_reshape2d, test_reshape2d_pandas, test_reshape2d_xarray, test_index_of_pandas, test_index_of_xarray, test_contiguous_regions, test_safe_first_element_pandas_series, test_array_patch_perimeters, test_setattr_cm, test_format_approx, test_safe_first_element_with_none, test_strip_math, test_auto_format_str, test_unpack_to_numpy_from_torch, test_unpack_to_numpy_from_jax, test_unpack_to_numpy_from_tensorflow, test_bad_first_arg, test_string_seq, test_datetime, test_rgba, setup_method, test_form_main_list, test_form_each_dict, test_form_dict_keys, test_results_baseline, test_results_bootstrapped, test_results_whiskers_float, test_results_whiskers_range, test_results_whiskers_percentiles, test_results_withlabels, test_label_error, test_bad_dims, test_boxplot_stats_autorange_false, dummy, dummy, setup_method, connect, disconnect, count, is_empty, is_not_empty, test_cid_restore, test_callback_complete, test_callback_disconnect, test_callback_wrong_disconnect, test_registration_on_non_empty_registry, test_pickling, raise_runtime_error, raise_value_error, transformer, cb, raise_handler, test_func1, test_func2, check, divisors, verify_pre_post_state, __iter__, __getitem__, __init__, meth, classy, static, prop, prop, __init__, __array__, __init__, __array__, __init__, __array__",
        "Imports: __future__.annotations, itertools, pathlib, pickle, sys, typing.Any, unittest.mock.patch, unittest.mock.Mock, datetime.datetime, datetime.date, datetime.timedelta, numpy, numpy.testing.assert_array_equal, numpy.testing.assert_approx_equal, numpy.testing.assert_array_almost_equal, pytest, matplotlib._api, matplotlib.cbook, matplotlib.colors, matplotlib.cbook.delete_masked_points, matplotlib.cbook.strip_math, types.ModuleType"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_collections.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SquareCollection",
        "Contains 73 functions: pcfunc, generate_EventCollection_plot, test__EventCollection__get_props, test__EventCollection__set_positions, test__EventCollection__add_positions, test__EventCollection__append_positions, test__EventCollection__extend_positions, test__EventCollection__switch_orientation, test__EventCollection__switch_orientation_2x, test__EventCollection__set_orientation, test__EventCollection__set_linelength, test__EventCollection__set_lineoffset, test__EventCollection__set_prop, test__EventCollection__set_color, check_segments, test_collection_norm_autoscale, test_null_collection_datalim, test_no_offsets_datalim, test_add_collection, test_collection_log_datalim, test_quiver_limits, test_barb_limits, test_EllipseCollection, test_EllipseCollection_setter_getter, test_polycollection_close, test_regularpolycollection_rotate, test_regularpolycollection_scale, test_picking, test_quadmesh_contains, test_quadmesh_contains_concave, test_quadmesh_cursor_data, test_quadmesh_cursor_data_multiple_points, test_linestyle_single_dashes, test_size_in_xy, test_pandas_indexing, test_lslw_bcast, test_set_wrong_linestyle, test_capstyle, test_joinstyle, test_cap_and_joinstyle_image, test_scatter_post_alpha, test_scatter_alpha_array, test_pathcollection_legend_elements, test_EventCollection_nosort, test_collection_set_verts_array, test_fill_between_poly_collection_set_data, test_fill_between_poly_collection_raise, test_collection_set_array, test_blended_collection_autolim, test_singleton_autolim, test_autolim_with_zeros, test_quadmesh_set_array_validation, test_polyquadmesh_masked_vertices_array, test_quadmesh_get_coordinates, test_quadmesh_set_array, test_quadmesh_vmin_vmax, test_quadmesh_alpha_array, test_alpha_validation, test_legend_inverse_size_label_relationship, test_color_logic, test_LineCollection_args, test_array_dimensions, test_get_segments, test_set_offsets_late, test_set_offset_transform, test_set_offset_units, test_check_masked_offsets, test_masked_set_offsets, test_check_offsets_dtype, test_striped_lines, test_hatch_linewidth, __init__, get_transform",
        "Imports: datetime.datetime, io, itertools, platform, re, types.SimpleNamespace, numpy, numpy.testing.assert_array_equal, numpy.testing.assert_array_almost_equal, pytest, matplotlib, matplotlib.pyplot, matplotlib.collections, matplotlib.colors, matplotlib.path, matplotlib.transforms, matplotlib.collections.Collection, matplotlib.collections.LineCollection, matplotlib.collections.EventCollection, matplotlib.collections.PolyCollection, matplotlib.collections.FillBetweenPolyCollection, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, mpl_toolkits.mplot3d.Axes3D"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_colorbar.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 61 functions: _get_cmap_norms, _colorbar_extension_shape, _colorbar_extension_length, test_colorbar_extension_shape, test_colorbar_extension_length, test_colorbar_extension_inverted_axis, test_colorbar_positioning, test_colorbar_single_ax_panchor_false, test_colorbar_single_ax_panchor_east, test_contour_colorbar, test_gridspec_make_colorbar, test_colorbar_single_scatter, test_remove_from_figure, test_remove_from_figure_cl, test_colorbarbase, test_parentless_mappable, test_colorbar_closed_patch, test_colorbar_ticks, test_colorbar_minorticks_on_off, test_cbar_minorticks_for_rc_xyminortickvisible, test_colorbar_autoticks, test_colorbar_autotickslog, test_colorbar_get_ticks, test_colorbar_lognorm_extension, test_colorbar_powernorm_extension, test_colorbar_axes_kw, test_colorbar_log_minortick_labels, test_colorbar_renorm, test_colorbar_format, test_colorbar_scale_reset, test_colorbar_get_ticks_2, test_colorbar_inverted_ticks, test_mappable_no_alpha, test_mappable_2d_alpha, test_colorbar_label, test_keeping_xlabel, test_colorbar_int, test_anchored_cbar_position_using_specgrid, test_colorbar_change_lim_scale, test_axes_handles_same_functions, test_inset_colorbar_layout, test_twoslope_colorbar, test_remove_cb_whose_mappable_has_no_figure, test_aspects, test_proportional_colorbars, test_colorbar_extend_drawedges, test_colorbar_contourf_extend_patches, test_negative_boundarynorm, test_centerednorm, test_nonorm, test_boundaries, test_colorbar_no_warning_rcparams_grid_true, test_colorbar_set_formatter_locator, test_colorbar_extend_alpha, test_offset_text_loc, test_title_text_loc, test_passing_location, test_colorbar_errors, test_colorbar_axes_parmeters, test_colorbar_wrong_figure, test_colorbar_format_string_and_old",
        "Imports: platform, numpy, pytest, matplotlib.cm, matplotlib.colors, matplotlib, matplotlib.rc_context, matplotlib.testing.decorators.image_comparison, matplotlib.pyplot, matplotlib.colors.BoundaryNorm, matplotlib.colors.LogNorm, matplotlib.colors.PowerNorm, matplotlib.colors.Normalize, matplotlib.colors.NoNorm, matplotlib.colorbar.Colorbar, matplotlib.ticker.FixedLocator, matplotlib.ticker.LogFormatter, matplotlib.ticker.StrMethodFormatter, matplotlib.testing.decorators.check_figures_equal"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_colors.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TestAsinhNorm, MyArray",
        "Contains 110 functions: test_create_lookup_table, test_index_dtype, test_resampled, test_colormaps_get_cmap, test_double_register_builtin_cmap, test_colormap_copy, test_colormap_equals, test_colormap_endian, test_colormap_invalid, test_colormap_return_types, test_BoundaryNorm, test_CenteredNorm, test_lognorm_invalid, test_LogNorm, test_LogNorm_inverse, test_PowerNorm, test_PowerNorm_translation_invariance, test_powernorm_cbar_limits, test_Normalize, test_FuncNorm, test_TwoSlopeNorm_autoscale, test_TwoSlopeNorm_autoscale_None_vmin, test_TwoSlopeNorm_autoscale_None_vmax, test_TwoSlopeNorm_scale, test_TwoSlopeNorm_scaleout_center, test_TwoSlopeNorm_scaleout_center_max, test_TwoSlopeNorm_Even, test_TwoSlopeNorm_Odd, test_TwoSlopeNorm_VminEqualsVcenter, test_TwoSlopeNorm_VmaxEqualsVcenter, test_TwoSlopeNorm_VminGTVcenter, test_TwoSlopeNorm_TwoSlopeNorm_VminGTVmax, test_TwoSlopeNorm_VcenterGTVmax, test_TwoSlopeNorm_premature_scaling, test_SymLogNorm, test_SymLogNorm_colorbar, test_SymLogNorm_single_zero, _inverse_tester, _scalar_tester, _mask_tester, test_cmap_and_norm_from_levels_and_colors, test_boundarynorm_and_colorbarbase, test_cmap_and_norm_from_levels_and_colors2, test_rgb_hsv_round_trip, test_autoscale_masked, test_light_source_topo_surface, test_light_source_shading_default, test_light_source_shading_empty_mask, test_light_source_masked_shading, test_light_source_hillshading, test_light_source_planar_hillshading, test_color_names, _sph2cart, _azimuth2math, test_pandas_iterable, test_colormap_reversing, test_has_alpha_channel, test_cn, test_conversions, test_conversions_masked, test_to_rgba_array_single_str, test_to_rgba_array_2tuple_str, test_to_rgba_array_alpha_array, test_to_rgba_array_accepts_color_alpha_tuple, test_to_rgba_array_explicit_alpha_overrides_tuple_alpha, test_to_rgba_array_accepts_color_alpha_tuple_with_multiple_colors, test_to_rgba_array_error_with_color_invalid_alpha_tuple, test_to_rgba_accepts_color_alpha_tuple, test_to_rgba_explicit_alpha_overrides_tuple_alpha, test_to_rgba_error_with_color_invalid_alpha_tuple, test_scalarmappable_to_rgba, test_scalarmappable_nan_to_rgba, test_failed_conversions, test_grey_gray, test_tableau_order, test_ndarray_subclass_norm, test_same_color, test_hex_shorthand_notation, test_repr_png, test_repr_html, test_get_under_over_bad, test_non_mutable_get_values, test_colormap_alpha_array, test_colormap_bad_data_with_alpha, test_2d_to_rgba, test_set_dict_to_rgba, test_norm_deepcopy, test_set_clim_emits_single_callback, test_norm_callback, test_scalarmappable_norm_update, test_norm_update_figs, test_make_norm_from_scale_name, test_color_sequences, test_cm_set_cmap_error, test_set_cmap_mismatched_name, test_cmap_alias_names, test_to_rgba_array_none_color_with_alpha_param, test_is_color_like, test_colorizer_vmin_vmax, forward, inverse, forward, inverse, test_init, test_norm, alternative_hillshade, plane, angled_plane, __isub__, __add__",
        "Imports: copy, itertools, unittest.mock, io.BytesIO, numpy, PIL.Image, pytest, base64, numpy.testing.assert_array_equal, numpy.testing.assert_array_almost_equal, matplotlib.cbook, matplotlib.cm, matplotlib, matplotlib, matplotlib.colors, matplotlib.colorbar, matplotlib.colorizer, matplotlib.pyplot, matplotlib.scale, matplotlib.rcsetup.cycler, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal, matplotlib.colors.is_color_like, matplotlib.colors.to_rgba_array"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_compare_images.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_image_comparison_expect_rms",
        "Imports: pathlib.Path, shutil, pytest, pytest.approx, matplotlib.testing.compare.compare_images, matplotlib.testing.decorators._image_directories"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_constrainedlayout.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 47 functions: example_plot, example_pcolor, test_constrained_layout1, test_constrained_layout2, test_constrained_layout3, test_constrained_layout4, test_constrained_layout5, test_constrained_layout6, test_identical_subgridspec, test_constrained_layout7, test_constrained_layout8, test_constrained_layout9, test_constrained_layout10, test_constrained_layout11, test_constrained_layout11rat, test_constrained_layout12, test_constrained_layout13, test_constrained_layout14, test_constrained_layout15, test_constrained_layout16, test_constrained_layout17, test_constrained_layout18, test_constrained_layout19, test_constrained_layout20, test_constrained_layout21, test_constrained_layout22, test_constrained_layout23, test_colorbar_location, test_hidden_axes, test_colorbar_align, test_colorbars_no_overlapV, test_colorbars_no_overlapH, test_manually_set_position, test_bboxtight, test_bbox, test_align_labels, test_suplabels, test_gridspec_addressing, test_discouraged_api, test_kwargs, test_rect, test_compressed1, test_compressed_suptitle, test_set_constrained_layout, test_constrained_toggle, test_layout_leak, test_submerged_subfig",
        "Imports: gc, platform, numpy, pytest, matplotlib, matplotlib.testing.decorators.image_comparison, matplotlib.pyplot, matplotlib.transforms, matplotlib.gridspec, matplotlib.ticker"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_container.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: test_stem_remove, test_errorbar_remove, test_nonstring_label",
        "Imports: numpy, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_contour.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 48 functions: test_contour_shape_1d_valid, test_contour_shape_2d_valid, test_contour_shape_error, test_contour_no_valid_levels, test_contour_Nlevels, test_contour_set_paths, test_contour_manual_labels, test_contour_manual_moveto, test_contour_label_with_disconnected_segments, test_given_colors_levels_and_extends, test_hatch_colors, test_single_color_and_extend, test_log_locator_levels, test_contour_datetime_axis, test_labels, test_label_contour_start, test_corner_mask, test_contourf_decreasing_levels, test_contourf_symmetric_locator, test_circular_contour_warning, test_clabel_zorder, test_clabel_with_large_spacing, test_contourf_log_extension, test_contour_addlines, test_contour_uneven, test_contour_linewidth, test_label_nonagg, test_contour_closed_line_loop, test_quadcontourset_reuse, test_contour_manual, test_contour_line_start_on_corner_edge, test_find_nearest_contour, test_find_nearest_contour_no_filled, test_contour_autolabel_beyond_powerlimits, test_contourf_legend_elements, test_contour_legend_elements, test_algorithm_name, test_algorithm_supports_corner_mask, test_all_algorithms, test_subfigure_clabel, test_linestyles, test_negative_linestyles, test_contour_remove, test_contour_no_args, test_contour_clip_path, test_bool_autolevel, test_all_nan, test_allsegs_allkinds",
        "Imports: datetime, platform, re, unittest.mock, contourpy, numpy, numpy.testing.assert_array_almost_equal, numpy.testing.assert_array_almost_equal_nulp, matplotlib, matplotlib.pyplot, matplotlib.rc_context, matplotlib.ticker, matplotlib.colors.LogNorm, matplotlib.colors.same_color, matplotlib.patches, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, pytest, matplotlib.contour.ContourSet, matplotlib.patches.Rectangle"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_cycles.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 12 functions: test_colorcycle_basic, test_marker_cycle, test_valid_marker_cycles, test_marker_cycle_kwargs_arrays_iterators, test_linestylecycle_basic, test_fillcycle_basic, test_fillcycle_ignore, test_property_collision_plot, test_property_collision_fill, test_valid_input_forms, test_cycle_reset, test_invalid_input_forms",
        "Imports: contextlib, io.StringIO, matplotlib, matplotlib.pyplot, numpy, pytest, cycler.cycler"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_dates.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: _Locator, dt_tzaware",
        "Contains 80 functions: test_date_numpyx, test_date_date2num_numpy, test_date2num_NaT, test_date2num_NaT_scalar, test_date2num_masked, test_date_empty, test_date_not_empty, test_axhline, test_date_axhspan, test_date_axvspan, test_date_axhline, test_date_axvline, test_too_many_date_ticks, _new_epoch_decorator, test_RRuleLocator, test_RRuleLocator_dayrange, test_RRuleLocator_close_minmax, test_DateFormatter, test_locator_set_formatter, test_date_formatter_callable, test_date_formatter_usetex, test_drange, test_auto_date_locator, test_auto_date_locator_intmult, test_concise_formatter_subsecond, test_concise_formatter, test_concise_formatter_show_offset, test_concise_formatter_show_offset_inverted, test_concise_converter_stays, test_offset_changes, test_concise_formatter_usetex, test_concise_formatter_formats, test_concise_formatter_zformats, test_concise_formatter_tz, test_auto_date_locator_intmult_tz, test_date_inverted_limit, _test_date2num_dst, test_date2num_dst, test_date2num_dst_pandas, _test_rrulewrapper, test_rrulewrapper, test_rrulewrapper_pytz, test_yearlocator_pytz, test_YearLocator, test_DayLocator, test_tz_utc, test_num2timedelta, test_datetime64_in_list, test_change_epoch, test_warn_notintervals, test_change_converter, test_change_interval_multiples, test_DateLocator, test_datestr2num, test_concise_formatter_exceptions, test_concise_formatter_call, test_datetime_masked, test_num2date_error, test_num2date_roundoff, test_DateFormatter_settz, wrapper, callable_formatting_function, _create_auto_date_locator, _create_auto_date_locator, _create_auto_date_locator, _create_auto_date_locator, _create_auto_date_locator, _create_auto_date_locator, _create_auto_date_locator, date_range, tz_convert, tz_convert, attach_tz, attach_tz, _create_year_locator, _get_unit, __sub__, __add__, astimezone, mk_tzaware",
        "Imports: datetime, dateutil.tz, dateutil.rrule, functools, numpy, pytest, matplotlib.rc_context, matplotlib.style, matplotlib.dates, matplotlib.pyplot, matplotlib.testing.decorators.image_comparison, matplotlib.ticker, matplotlib.testing.jpl_units, matplotlib.testing.jpl_units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_datetime.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TestDatetimePlotting",
        "Contains 51 functions: test_annotate, test_arrow, test_axhline, test_axhspan, test_axline, test_axvline, test_axvspan, test_bar, test_bar_label, test_barbs, test_barh, test_boxplot, test_broken_barh, test_bxp, test_clabel, test_contour, test_contourf, test_errorbar, test_eventplot, test_fill, test_fill_between, test_fill_betweenx, test_hexbin, test_hist, test_hist2d, test_hlines, test_imshow, test_loglog, test_matshow, test_pcolor, test_pcolorfast, test_pcolormesh, test_plot, test_plot_date, test_quiver, test_scatter, test_semilogx, test_semilogy, test_stackplot, test_stairs, test_stem, test_step, test_streamplot, test_text, test_tricontour, test_tricontourf, test_tripcolor, test_triplot, test_violin, test_violinplot, test_vlines",
        "Imports: datetime, numpy, pytest, matplotlib.pyplot, matplotlib"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_determinism.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: PathClippedImagePatch",
        "Contains 6 functions: _save_figure, test_determinism_check, test_determinism_source_date_epoch, __init__, set_facecolor, draw",
        "Imports: os, sys, pytest, matplotlib, matplotlib.pyplot, matplotlib.cbook.get_sample_data, matplotlib.collections.PathCollection, matplotlib.image.BboxImage, matplotlib.offsetbox.AnchoredOffsetbox, matplotlib.offsetbox.AuxTransformBox, matplotlib.patches.Circle, matplotlib.patches.PathPatch, matplotlib.path.Path, matplotlib.testing.subprocess_run_for_testing, matplotlib.testing._markers.needs_ghostscript, matplotlib.testing._markers.needs_usetex, matplotlib.testing.compare, matplotlib.text.TextPath, matplotlib.transforms.IdentityTransform"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_doc.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_sphinx_gallery_example_header",
        "Imports: pytest, sphinx_gallery.gen_rst"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_dviread.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 2 functions: test_PsfontsMap, test_dviread",
        "Imports: json, pathlib.Path, shutil, matplotlib.dviread, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_figure.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: TestSubplotMosaic, MyAxes, MyClass",
        "Contains 106 functions: test_align_labels, test_align_titles, test_align_labels_stray_axes, test_figure_label, test_figure_label_replaced, test_figure_no_label, test_fignum_exists, test_clf_keyword, test_figure, test_figure_legend, test_gca, test_add_subplot_subclass, test_add_subplot_invalid, test_suptitle, test_suptitle_fontproperties, test_suptitle_subfigures, test_get_suptitle_supxlabel_supylabel, test_alpha, test_too_many_figures, test_iterability_axes_argument, test_set_fig_size, test_axes_remove, test_figaspect, test_autofmt_xdate, test_autofmt_xdate_colorbar_constrained, test_change_dpi, test_invalid_figure_size, test_invalid_figure_add_axes, test_subplots_shareax_loglabels, test_savefig, test_savefig_warns, test_savefig_backend, test_savefig_pixel_ratio, test_savefig_preserve_layout_engine, test_savefig_locate_colorbar, test_savefig_transparent, test_figure_repr, test_valid_layouts, test_invalid_layouts, test_tightlayout_autolayout_deconflict, test_layout_change_warning, test_repeated_tightlayout, test_add_artist, test_fspath, test_tightbbox, test_axes_removal, test_removed_axis, test_figure_clear, test_clf_not_redefined, test_picking_does_not_stale, test_add_subplot_twotuple, test_tightbbox_box_aspect, test_animated_with_canvas_change, test_reused_gridspec, test_subfigure, test_subfigure_tightbbox, test_subfigure_dpi, test_subfigure_ss, test_subfigure_double, test_subfigure_spanning, test_subfigure_ticks, test_subfigure_scatter_size, test_subfigure_pdf, test_subfigures_wspace_hspace, test_subfigure_remove, test_add_subplot_kwargs, test_add_axes_kwargs, test_ginput, test_waitforbuttonpress, test_kwargs_pass, test_rcparams, test_deepcopy, test_unpickle_with_device_pixel_ratio, test_gridspec_no_mutate_input, test_savefig_metadata, test_savefig_metadata_error, test_get_constrained_layout_pads, test_not_visible_figure, test_warn_colorbar_mismatch, test_set_figure, test_subfigure_row_order, test_subfigure_stale_propagation, test_basic, test_all_nested, test_nested, test_nested_tuple, test_nested_width_ratios, test_nested_height_ratios, test_empty, test_fail_list_of_str, test_subplot_kw, test_per_subplot_kw, test_string_parser, test_per_subplot_kw_expander, test_extra_per_subplot_kw, test_single_str_input, test_fail, test_hashable_keys, test_user_order, test_nested_user_order, test_share_all, single_press, multi_presses, __init__, __getitem__, _as_mpl_axes",
        "Imports: copy, datetime.datetime, io, pickle, platform, threading.Timer, types.SimpleNamespace, warnings, numpy, pytest, PIL.Image, matplotlib, matplotlib.gridspec, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal, matplotlib.axes.Axes, matplotlib.backend_bases.KeyEvent, matplotlib.backend_bases.MouseEvent, matplotlib.figure.Figure, matplotlib.figure.FigureBase, matplotlib.layout_engine.ConstrainedLayoutEngine, matplotlib.layout_engine.TightLayoutEngine, matplotlib.layout_engine.PlaceHolderLayoutEngine, matplotlib.ticker.AutoMinorLocator, matplotlib.ticker.FixedFormatter, matplotlib.ticker.ScalarFormatter, matplotlib.pyplot, matplotlib.dates"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_fontconfig_pattern.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: test_fontconfig_pattern, test_fontconfig_str, test_fontconfig_unknown_constant",
        "Imports: pytest, matplotlib.font_manager.FontProperties"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_font_manager.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SomeObject",
        "Contains 27 functions: test_font_priority, test_score_weight, test_json_serialization, test_otf, test_get_fontconfig_fonts, test_hinting_factor, test_utf16m_sfnt, test_find_ttc, test_find_noto, test_find_invalid, test_user_fonts_linux, test_addfont_as_path, test_user_fonts_win32, _model_handler, test_fork, test_missing_family, _test_threading, test_fontcache_thread_safe, test_lockfilefailure, test_fontentry_dataclass, test_fontentry_dataclass_invalid_path, test_get_font_names, test_donot_cache_tracebacks, test_fontproperties_init_deprecation, loud_excepthook, bad_idea, inner",
        "Imports: io.BytesIO, io.StringIO, gc, multiprocessing, os, pathlib.Path, PIL.Image, shutil, sys, warnings, numpy, pytest, matplotlib, matplotlib.font_manager.findfont, matplotlib.font_manager.findSystemFonts, matplotlib.font_manager.FontEntry, matplotlib.font_manager.FontProperties, matplotlib.font_manager.fontManager, matplotlib.font_manager.json_dump, matplotlib.font_manager.json_load, matplotlib.font_manager.get_font, matplotlib.font_manager.is_opentype_cff_font, matplotlib.font_manager.MSUserFontDirectories, matplotlib.font_manager._get_fontconfig_fonts, matplotlib.font_manager.ttfFontProperty, matplotlib.cbook, matplotlib.ft2font, matplotlib.pyplot, matplotlib.rc_context, matplotlib.figure, matplotlib.testing.subprocess_run_helper, matplotlib.testing.subprocess_run_for_testing, matplotlib.ft2font.FT2Font, threading, matplotlib.ft2font.LoadFlags, matplotlib.font_manager"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_ft2font.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 20 functions: test_ft2image_draw_rect_filled, test_ft2font_dejavu_attrs, test_ft2font_cm_attrs, test_ft2font_stix_bold_attrs, test_ft2font_invalid_args, test_ft2font_clear, test_ft2font_set_size, test_ft2font_charmaps, test_ft2font_get_sfnt, test_ft2font_get_sfnt_table, test_ft2font_get_kerning, test_ft2font_set_text, test_ft2font_loading, test_ft2font_drawing, test_ft2font_get_path, test_fallback_smoke, test_font_fallback_chinese, test_fallback_missing, test__get_fontmap, enc",
        "Imports: itertools, io, pathlib.Path, numpy, pytest, matplotlib, matplotlib.ft2font, matplotlib.testing.decorators.check_figures_equal, matplotlib.font_manager, matplotlib.path, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_getattr.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_getattr",
        "Imports: importlib.import_module, pkgutil.walk_packages, matplotlib, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_gridspec.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 5 functions: test_equal, test_width_ratios, test_height_ratios, test_repr, test_subplotspec_args",
        "Imports: matplotlib.gridspec, matplotlib.pyplot, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_image.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: QuantityND",
        "Contains 99 functions: test_alpha_interp, test_interp_nearest_vs_none, test_figimage, test_image_python_io, test_imshow_antialiased, test_imshow_zoom, test_imshow_pil, test_imread_pil_uint16, test_imread_fspath, test_imsave, test_imsave_python_sequences, test_imsave_rgba_origin, test_imsave_fspath, test_imsave_color_alpha, test_imsave_pil_kwargs_png, test_imsave_pil_kwargs_tiff, test_image_alpha, test_imshow_alpha, test_cursor_data, test_cursor_data_nonuniform, test_format_cursor_data, test_image_clip, test_image_cliprect, test_imshow_10_10_1, test_imshow_10_10_2, test_imshow_10_10_5, test_no_interpolation_origin, test_image_shift, test_image_edges, test_image_composite_background, test_image_composite_alpha, test_clip_path_disables_compositing, test_rasterize_dpi, test_bbox_image_inverted, test_get_window_extent_for_AxisImage, test_zoom_and_clip_upper_origin, test_nonuniformimage_setcmap, test_nonuniformimage_setnorm, test_jpeg_2d, test_jpeg_alpha, test_axesimage_setdata, test_figureimage_setdata, test_setdata_xya, test_minimized_rasterized, test_load_from_url, test_log_scale_image, test_rotate_image, test_image_preserve_size, test_image_preserve_size2, test_mask_image_over_under, test_mask_image, test_mask_image_all, test_imshow_endianess, test_imshow_masked_interpolation, test_imshow_no_warn_invalid, test_imshow_clips_rgb_to_valid_range, test_imshow_flatfield, test_imshow_bignumbers, test_imshow_bignumbers_real, test_empty_imshow, test_imshow_float16, test_imshow_float128, test_imshow_bool, test_full_invalid, test_composite, test_relim, test_unclipped, test_respects_bbox, test_image_cursor_formatting, test_image_array_alpha, test_image_array_alpha_validation, test_exact_vmin, test_image_placement, test_quantitynd, test_imshow_quantitynd, test_norm_change, test_huge_range_log, test_spy_box, test_nonuniform_and_pcolor, test_nonuniform_logscale, test_rgba_antialias, test_upsample_interpolation_stage, test_downsample_interpolation_stage, test_rc_interpolation_stage, test_large_image, test_str_norms, test__resample_valid_output, test_axesimage_get_shape, test_non_transdata_image_does_not_touch_aspect, test_downsampling, test_downsampling_speckle, test_upsampling, test_resample_dtypes, test_interpolation_stage_rgba_respects_alpha_param, __new__, __array_finalize__, __getitem__, __array_ufunc__, v",
        "Imports: contextlib.ExitStack, copy.copy, functools, io, os, pathlib.Path, platform, sys, urllib.request, numpy, numpy.testing.assert_array_equal, PIL.Image, matplotlib, matplotlib.colors, matplotlib.image, matplotlib.patches, matplotlib.pyplot, matplotlib.style, matplotlib.rcParams, matplotlib.image.AxesImage, matplotlib.image.BboxImage, matplotlib.image.FigureImage, matplotlib.image.NonUniformImage, matplotlib.image.PcolorImage, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.transforms.Bbox, matplotlib.transforms.Affine2D, matplotlib.transforms.TransformedBbox, matplotlib.ticker, pytest, PIL.PngImagePlugin.PngInfo, PIL.TiffTags.TAGS_V2, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.MouseEvent, matplotlib.backend_bases.MouseEvent, xml.etree.ElementTree"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_legend.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TestLegendFunction, TestLegendFigureFunction",
        "Contains 112 functions: test_legend_ordereddict, test_legend_generator, test_legend_auto1, test_legend_auto2, test_legend_auto3, test_legend_auto4, test_legend_auto5, test_various_labels, test_labels_first, test_multiple_keys, test_alpha_rgba, test_alpha_rcparam, test_fancy, test_framealpha, test_rc, test_legend_expand, test_hatching, test_legend_remove, test_reverse_legend_handles_and_labels, test_reverse_legend_display, test_figure_legend_outside, test_legend_stackplot, test_cross_figure_patch_legend, test_nanscatter, test_legend_repeatcheckok, test_not_covering_scatter, test_not_covering_scatter_transform, test_linecollection_scaled_dashes, test_handler_numpoints, test_text_nohandler_warning, test_empty_bar_chart_with_legend, test_shadow_argument_types, test_shadow_invalid_argument, test_shadow_framealpha, test_legend_title_empty, test_legend_proper_window_extent, test_window_extent_cached_renderer, test_legend_title_fontprop_fontsize, test_legend_alignment, test_ax_legend_set_loc, test_fig_legend_set_loc, test_legend_set_alignment, test_legend_labelcolor_single, test_legend_labelcolor_list, test_legend_labelcolor_linecolor, test_legend_pathcollection_labelcolor_linecolor, test_legend_pathcollection_labelcolor_linecolor_iterable, test_legend_pathcollection_labelcolor_linecolor_cmap, test_legend_labelcolor_markeredgecolor, test_legend_pathcollection_labelcolor_markeredgecolor, test_legend_pathcollection_labelcolor_markeredgecolor_iterable, test_legend_pathcollection_labelcolor_markeredgecolor_cmap, test_legend_labelcolor_markerfacecolor, test_legend_pathcollection_labelcolor_markerfacecolor, test_legend_pathcollection_labelcolor_markerfacecolor_iterable, test_legend_pathcollection_labelcolor_markfacecolor_cmap, test_legend_labelcolor_rcparam_single, test_legend_labelcolor_rcparam_linecolor, test_legend_labelcolor_rcparam_markeredgecolor, test_legend_labelcolor_rcparam_markeredgecolor_short, test_legend_labelcolor_rcparam_markerfacecolor, test_legend_labelcolor_rcparam_markerfacecolor_short, test_get_set_draggable, test_legend_draggable, test_alpha_handles, test_usetex_no_warn, test_warn_big_data_best_loc, test_no_warn_big_data_when_loc_specified, test_plot_multiple_input_multiple_label, test_plot_multiple_input_single_label, test_plot_single_input_multiple_label, test_plot_single_input_list_label, test_plot_multiple_label_incorrect_length_exception, test_legend_face_edgecolor, test_legend_text_axes, test_handlerline2d, test_subfigure_legend, test_setting_alpha_keeps_polycollection_color, test_legend_markers_from_line2d, test_ncol_ncols, test_loc_invalid_tuple_exception, test_loc_valid_tuple, test_loc_valid_list, test_loc_invalid_list_exception, test_loc_invalid_type, test_loc_validation_numeric_value, test_loc_validation_string_value, test_legend_handle_label_mismatch, test_legend_handle_label_mismatch_no_len, test_legend_nolabels_warning, test_legend_nolabels_draw, test_legend_loc_polycollection, test_legend_text, test_legend_annotate, test_boxplot_legend_labels, test_legend_no_args, test_legend_positional_handles_labels, test_legend_positional_handles_only, test_legend_positional_labels_only, test_legend_three_args, test_legend_handler_map, test_legend_kwargs_handles_only, test_legend_kwargs_labels_only, test_legend_kwargs_handles_labels, test_warn_mixed_args_and_kwargs, test_parasite, test_legend_handle_label, test_legend_no_args, test_legend_label_arg, test_legend_label_three_args, test_legend_kw_args, test_warn_args_kwargs",
        "Imports: collections, io, itertools, platform, time, unittest.mock, warnings, numpy, numpy.testing.assert_allclose, pytest, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing._markers.needs_usetex, matplotlib.pyplot, matplotlib, matplotlib.patches, matplotlib.transforms, matplotlib.collections, matplotlib.lines, matplotlib.legend_handler.HandlerTuple, matplotlib.legend, matplotlib.rc_context, matplotlib.font_manager.FontProperties, mpl_toolkits.axes_grid1.host_subplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_lines.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 33 functions: test_segment_hits, test_invisible_Line_rendering, test_set_line_coll_dash, test_invalid_line_data, test_line_dashes, test_line_colors, test_valid_colors, test_linestyle_variants, test_valid_linestyles, test_drawstyle_variants, test_no_subslice_with_transform, test_valid_drawstyles, test_set_drawstyle, test_set_line_coll_dash_image, test_marker_fill_styles, test_markerfacecolor_fillstyle, test_lw_scaling, test_is_sorted_and_has_non_nan, test_step_markers, test_markevery, test_markevery_figure_line_unsupported_relsize, test_marker_as_markerstyle, test_striped_lines, test_odd_dashes, test_picking, test_input_copy, test_markevery_prop_cycle, test_axline_setters, test_axline_small_slope, add_test, add_ref, add_test, add_ref",
        "Imports: itertools, platform, timeit, types.SimpleNamespace, cycler.cycler, numpy, numpy.testing.assert_array_equal, pytest, matplotlib, matplotlib, matplotlib._path, matplotlib.lines, matplotlib.markers.MarkerStyle, matplotlib.path.Path, matplotlib.pyplot, matplotlib.transforms, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_marker.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: UnsnappedMarkerStyle",
        "Contains 18 functions: test_marker_fillstyle, test_markers_valid, test_markers_invalid, test_poly_marker, test_star_marker, test_asterisk_marker, test_text_marker, test_marker_clipping, test_marker_init_transforms, test_marker_init_joinstyle, test_marker_init_captyle, test_marker_transformed, test_marker_rotated_invalid, test_marker_rotated, test_marker_scaled, test_alt_transform, _recache, draw_ref_marker",
        "Imports: numpy, matplotlib.pyplot, matplotlib.markers, matplotlib.path.Path, matplotlib.testing.decorators.check_figures_equal, matplotlib.transforms.Affine2D, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_mathtext.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 24 functions: baseline_images, test_mathtext_rendering, test_mathtext_rendering_svgastext, test_mathtext_rendering_lightweight, test_mathfont_rendering, test_short_long_accents, test_fontinfo, test_mathtext_exceptions, test_get_unicode_index_exception, test_single_minus_sign, test_spaces, test_operator_space, test_inverted_delimiters, test_genfrac_displaystyle, test_mathtext_fallback_valid, test_mathtext_fallback_invalid, test_mathtext_fallback, test_math_to_image, test_math_fontfamily, test_default_math_fontfamily, test_argument_order, test_mathtext_cmr10_minus_sign, test_mathtext_operators, test_boldsymbol",
        "Imports: __future__.annotations, io, pathlib.Path, platform, re, xml.etree.ElementTree, typing.Any, numpy, packaging.version.parse, pyparsing, pytest, matplotlib, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.pyplot, matplotlib.mathtext, matplotlib._mathtext"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_matplotlib.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 7 functions: test_parse_to_version_info, test_tmpconfigdir_warning, test_importable_with_no_home, test_use_doc_standard_backends, test_importable_with__OO, test_get_executable_info_timeout, parse",
        "Imports: os, subprocess, sys, unittest.mock.patch, pytest, matplotlib, matplotlib.testing.subprocess_run_for_testing, matplotlib.backends.BackendFilter, matplotlib.backends.backend_registry"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_mlab.py": {
      "entityType": "file",
      "observations": [
        "Contains 5 classes: TestDetrend, TestSpectral, TestGaussianKDE, TestGaussianKDECustom, TestGaussianKDEEvaluate",
        "Contains 57 functions: test_window, test_cohere, test_psd_onesided_norm, test_psd_oversampling, setup_method, allclose, test_detrend_none, test_detrend_mean, test_detrend_mean_1d_base_slope_off_list_andor_axis0, test_detrend_mean_2d, test_detrend_ValueError, test_detrend_mean_ValueError, test_detrend_linear, test_detrend_str_linear_1d, test_detrend_linear_2d, stim, check_freqs, check_maxfreq, test_spectral_helper_raises, test_single_spectrum_helper_unsupported_modes, test_spectral_helper_psd, test_csd, test_csd_padding, test_psd, test_psd_detrend, test_psd_window_hanning, test_psd_window_hanning_detrend_linear, test_psd_window_flattop, test_psd_windowarray, test_psd_windowarray_scale_by_freq, test_spectrum, test_specgram, test_specgram_warn_only1seg, test_psd_csd_equal, test_specgram_auto_default_psd_equal, test_specgram_complex_equivalent, test_psd_windowarray_equal, test_kde_integer_input, test_gaussian_kde_covariance_caching, test_kde_bandwidth_method, test_no_data, test_single_dataset_element, test_silverman_multidim_dataset, test_silverman_singledim_dataset, test_scott_multidim_dataset, test_scott_singledim_dataset, test_scalar_empty_dataset, test_scalar_covariance_dataset, test_callable_covariance_dataset, test_callable_singledim_dataset, test_wrong_bw_method, test_evaluate_diff_dim, test_evaluate_inv_dim, test_evaluate_dim_and_num, test_evaluate_point_dim_not_one, test_evaluate_equal_dim_and_num_lt, callable_fun",
        "Imports: numpy.testing.assert_allclose, numpy.testing.assert_almost_equal, numpy.testing.assert_array_equal, numpy.testing.assert_array_almost_equal_nulp, numpy, pytest, matplotlib.mlab"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_multivariate_colormaps.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 19 functions: test_bivariate_cmap_shapes, test_multivar_creation, test_multivar_alpha_mixing, test_multivar_cmap_call, test_multivar_bad_mode, test_multivar_resample, test_bivar_cmap_call_tuple, test_bivar_cmap_call, test_bivar_getitem, test_bivar_cmap_bad_shape, test_bivar_cmap_bad_lut, test_bivar_cmap_from_image, test_bivar_resample, test_bivariate_repr_png, test_bivariate_repr_html, test_multivariate_repr_png, test_multivariate_repr_html, test_bivar_eq, test_multivar_eq",
        "Imports: numpy, numpy.testing.assert_array_equal, numpy.testing.assert_allclose, matplotlib.pyplot, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.remove_ticks_and_titles, matplotlib, pytest, pathlib.Path, io.BytesIO, PIL.Image, base64"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_offsetbox.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 22 functions: test_offsetbox_clipping, test_offsetbox_clip_children, test_offsetbox_loc_codes, test_expand_with_tight_layout, test_get_packed_offsets, test_get_packed_offsets_fixed, test_get_packed_offsets_expand, test_get_packed_offsets_equal, test_get_packed_offsets_equal_total_none_sep_none, test_picking, test_anchoredtext_horizontal_alignment, test_annotationbbox_extents, test_zorder, test_arrowprops_copied, test_packers, test_paddedbox_default_values, test_annotationbbox_properties, test_textarea_properties, test_textarea_set_text, test_paddedbox, test_remove_draggable, test_draggable_in_subfigure",
        "Imports: collections.namedtuple, io, numpy, numpy.testing.assert_allclose, pytest, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.pyplot, matplotlib.patches, matplotlib.lines, matplotlib.backend_bases.MouseButton, matplotlib.backend_bases.MouseEvent, matplotlib.offsetbox.AnchoredOffsetbox, matplotlib.offsetbox.AnnotationBbox, matplotlib.offsetbox.AnchoredText, matplotlib.offsetbox.DrawingArea, matplotlib.offsetbox.HPacker, matplotlib.offsetbox.OffsetBox, matplotlib.offsetbox.OffsetImage, matplotlib.offsetbox.PaddedBox, matplotlib.offsetbox.TextArea, matplotlib.offsetbox.VPacker, matplotlib.offsetbox._get_packed_offsets"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_patches.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 49 functions: test_Polygon_close, test_corner_center, test_ellipse_vertices, test_rotate_rect, test_rotate_rect_draw, test_dash_offset_patch_draw, test_negative_rect, test_clip_to_bbox, test_patch_alpha_coloring, test_patch_alpha_override, test_patch_color_none, test_patch_custom_linestyle, test_patch_linestyle_accents, test_patch_linestyle_none, test_wedge_movement, test_wedge_range, test_patch_str, test_multi_color_hatch, test_units_rectangle, test_connection_patch, test_connection_patch_fig, test_connection_patch_pixel_points, test_datetime_rectangle, test_datetime_datetime_fails, test_contains_point, test_contains_points, test_shadow, test_fancyarrow_units, test_fancyarrow_setdata, test_large_arc, test_rotated_arcs, test_fancyarrow_shape_error, test_boxstyle_errors, test_annulus, test_annulus_setters, test_annulus_setters2, test_degenerate_polygon, test_color_override_warning, test_empty_verts, test_default_antialiased, test_default_linestyle, test_default_capstyle, test_default_joinstyle, test_autoscale_arc, test_arc_in_collection, test_modifying_arc, test_arrow_set_data, test_set_and_get_hatch_linewidth, test_empty_fancyarrow",
        "Imports: platform, numpy, numpy.testing.assert_almost_equal, numpy.testing.assert_array_equal, pytest, matplotlib, matplotlib.patches.Annulus, matplotlib.patches.Ellipse, matplotlib.patches.Patch, matplotlib.patches.Polygon, matplotlib.patches.Rectangle, matplotlib.patches.FancyArrowPatch, matplotlib.patches.FancyArrow, matplotlib.patches.BoxStyle, matplotlib.patches.Arc, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal, matplotlib.transforms.Bbox, matplotlib.pyplot, matplotlib.collections, matplotlib.colors, matplotlib.patches, matplotlib.path, matplotlib.transforms, matplotlib.rcParams, matplotlib.testing.jpl_units, datetime.datetime, datetime.timedelta, datetime.datetime, datetime.datetime"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_path.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: PathWithCycle, PathWithCycle2",
        "Contains 36 functions: test_empty_closed_path, test_readonly_path, test_path_exceptions, test_point_in_path, test_contains_path, test_contains_points_negative_radius, test_exact_extents, test_extents_with_ignored_codes, test_point_in_path_nan, test_nonlinear_containment, test_arrow_contains_point, test_path_clipping, test_log_transform_with_zero, test_make_compound_path_empty, test_make_compound_path_stops, test_xkcd, test_xkcd_marker, test_marker_paths_pdf, test_nan_isolated_points, test_path_no_doubled_point_in_to_polygon, test_path_to_polygons, test_path_deepcopy, test_path_deepcopy_cycle, test_path_shallowcopy, test_path_intersect_path, test_full_arc, test_disjoint_zero_length_segment, test_intersect_zero_length_segment, test_cleanup_closepoly, test_interpolated_moveto, test_interpolated_closepoly, test_interpolated_moveto_closepoly, test_interpolated_empty_path, modify_vertices, __init__, __init__",
        "Imports: platform, re, numpy, numpy.testing.assert_array_equal, pytest, matplotlib.patches, matplotlib.path.Path, matplotlib.patches.Polygon, matplotlib.testing.decorators.image_comparison, matplotlib.pyplot, matplotlib.transforms, matplotlib.backend_bases.MouseEvent"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_patheffects.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: CustomRenderer",
        "Contains 13 functions: test_patheffect1, test_patheffect2, test_patheffect3, test_patheffects_stroked_text, test_PathEffect_points_to_pixels, test_SimplePatchShadow_offset, test_collection, test_tickedstroke, test_patheffects_spaces_and_newlines, test_patheffects_overridden_methods_open_close_group, __init__, open_group, close_group",
        "Imports: platform, numpy, matplotlib.testing.decorators.image_comparison, matplotlib.pyplot, matplotlib.patheffects, matplotlib.path.Path, matplotlib.patches, matplotlib.backend_bases.RendererBase, matplotlib.patheffects.PathEffectRenderer"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_pickle.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TransformBlob",
        "Contains 24 functions: test_simple, _generate_complete_test_figure, test_complete, _pickle_load_subprocess, test_pickle_load_from_subprocess, test_gcf, test_no_pyplot, test_renderer, test_image, test_polar, test_transform, test_rrulewrapper, test_shared, test_inset_and_secondary, test_cmap, test_unpickle_canvas, test_mpl_toolkits, test_standard_norm, test_dynamic_norm, test_vertexselector, test_cycler, _test_axeswidget_interactive, test_axeswidget_interactive, __init__",
        "Imports: io.BytesIO, ast, os, sys, pickle, pickletools, numpy, pytest, matplotlib, matplotlib.cm, matplotlib.testing.subprocess_run_helper, matplotlib.testing.is_ci_environment, matplotlib.testing.decorators.check_figures_equal, matplotlib.dates.rrulewrapper, matplotlib.lines.VertexSelector, matplotlib.pyplot, matplotlib.transforms, matplotlib.figure, mpl_toolkits.axes_grid1.axes_divider, mpl_toolkits.axes_grid1.parasite_axes, os, pickle, matplotlib.backends.backend_pdf.FigureCanvasPdf, matplotlib.backends.backend_agg.RendererAgg, matplotlib.backends.backend_agg.new_figure_manager"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_png.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 3 functions: test_pngsuite, test_truncated_file, test_truncated_buffer",
        "Imports: io.BytesIO, pathlib.Path, pytest, matplotlib.testing.decorators.image_comparison, matplotlib.cm, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_polar.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 40 functions: test_polar_annotations, test_polar_coord_annotations, test_polar_alignment, test_polar_twice, test_polar_wrap, test_polar_units_1, test_polar_units_2, test_polar_rmin, test_polar_negative_rmin, test_polar_rorigin, test_polar_invertedylim, test_polar_invertedylim_rorigin, test_polar_theta_position, test_polar_rlabel_position, test_polar_title_position, test_polar_theta_limits, test_polar_rlim, test_polar_rlim_bottom, test_polar_rlim_zero, test_polar_no_data, test_polar_default_log_lims, test_polar_not_datalim_adjustable, test_polar_gridlines, test_get_tightbbox_polar, test_polar_interpolation_steps_constant_r, test_polar_interpolation_steps_variable_r, test_thetalim_valid_invalid, test_thetalim_args, test_default_thetalocator, test_axvspan, test_remove_shared_polar, test_shared_polar_keeps_ticklabels, test_axvline_axvspan_do_not_modify_rlims, test_cursor_precision, test_custom_fmt_data, test_polar_log, test_polar_log_rorigin, test_polar_neg_theta_lims, test_polar_errorbar, millions",
        "Imports: numpy, numpy.testing.assert_allclose, pytest, matplotlib, matplotlib.pyplot, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.jpl_units, matplotlib.testing.jpl_units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_preprocess_data.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TestPlotTypes",
        "Contains 25 functions: plot_func, test_compiletime_checks, test_function_call_without_data, test_function_call_with_dict_input, test_function_call_with_dict_data, test_function_call_with_dict_data_not_in_data, test_function_call_with_pandas_data, test_function_call_replace_all, test_no_label_replacements, test_more_args_than_pos_parameter, test_docstring_addition, test_data_parameter_replacement, func, func_args, func_kwargs, func_no_ax_args, func_replace_all, func_no_label, func, funcy, funcy, funcy, funcy, test_dict_unpack, test_data_kwarg",
        "Imports: re, sys, numpy, pytest, matplotlib._preprocess_data, matplotlib.axes.Axes, matplotlib.testing.subprocess_run_for_testing, matplotlib.testing.decorators.check_figures_equal"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_pyplot.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 33 functions: test_pyplot_up_to_date, test_copy_docstring_and_deprecators, test_pyplot_box, test_stackplot_smoke, test_nrows_error, test_ioff, test_ion, test_nested_ion_ioff, test_close, test_subplot_reuse, test_axes_kwargs, test_subplot_replace_projection, test_subplot_kwarg_collision, test_gca, test_subplot_projection_reuse, test_subplot_polar_normalization, test_subplot_change_projection, test_polar_second_call, test_fallback_position, test_set_current_figure_via_subfigure, test_set_current_axes_on_subfigure, test_pylab_integration, test_doc_pyplot_summary, test_minor_ticks, test_switch_backend_no_close, figure_hook_example, test_figure_hook, test_multiple_same_figure_calls, test_close_all_warning, test_matshow, func, wrapper_func, extract_documented_functions",
        "Imports: difflib, numpy, sys, pathlib.Path, pytest, matplotlib, matplotlib.testing.subprocess_run_for_testing, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_quiver.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 27 functions: draw_quiver, test_quiver_memory_leak, test_quiver_key_memory_leak, test_quiver_number_of_args, test_quiver_arg_sizes, test_no_warnings, test_zero_headlength, test_quiver_animate, test_quiver_with_key, test_quiver_single, test_quiver_copy, test_quiver_key_pivot, test_quiver_key_xy, test_barbs, test_barbs_pivot, test_barbs_flip, test_barb_copy, test_bad_masked_sizes, test_angles_and_scale, test_quiver_xy, test_quiverkey_angles, test_quiverkey_angles_xy_aitoff, test_quiverkey_angles_scale_units_cartesian, test_quiver_setuvc_numbers, draw_quiverkey_zorder_argument, draw_quiverkey_setzorder, test_quiverkey_zorder",
        "Imports: platform, sys, numpy, pytest, matplotlib.pyplot, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_rcparams.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 30 functions: test_rcparams, test_RcParams_class, test_rcparams_update, test_rcparams_init, test_nargs_cycler, test_Bug_2543, test_legend_colors, test_mfc_rcparams, test_mec_rcparams, test_axes_titlecolor_rcparams, test_Issue_1713, test_animation_frame_formats, generate_validator_testcases, test_validator_valid, test_validator_invalid, test_validate_fontweight, test_validate_fontstretch, test_keymaps, test_no_backend_reset_rccontext, test_rcparams_reset_after_fail, test_backend_fallback_headless_invalid_backend, test_backend_fallback_headless_auto_backend, test_backend_fallback_headful, test_deprecation, test_rcparams_legend_loc, test_rcparams_legend_loc_from_file, test_validate_sketch, test_validate_sketch_error, test_rcparams_path_sketch_from_file, func",
        "Imports: copy, os, subprocess, sys, unittest.mock, cycler.cycler, cycler.Cycler, packaging.version.parse, pytest, matplotlib, matplotlib._api, matplotlib._c_internal_utils, matplotlib.pyplot, matplotlib.colors, numpy, matplotlib.rcsetup.validate_bool, matplotlib.rcsetup.validate_color, matplotlib.rcsetup.validate_colorlist, matplotlib.rcsetup._validate_color_or_linecolor, matplotlib.rcsetup.validate_cycler, matplotlib.rcsetup.validate_float, matplotlib.rcsetup.validate_fontstretch, matplotlib.rcsetup.validate_fontweight, matplotlib.rcsetup.validate_hatch, matplotlib.rcsetup.validate_hist_bins, matplotlib.rcsetup.validate_int, matplotlib.rcsetup.validate_markevery, matplotlib.rcsetup.validate_stringlist, matplotlib.rcsetup.validate_sketch, matplotlib.rcsetup._validate_linestyle, matplotlib.rcsetup._listify_validator, matplotlib.testing.subprocess_run_for_testing, matplotlib.rcsetup.cycler"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_sankey.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 8 functions: test_sankey, test_label, test_format_using_callable, test_sankey_errors, test_sankey_add_errors, test_sankey2, test_sankey3, show_three_decimal_places",
        "Imports: pytest, numpy.testing.assert_allclose, numpy.testing.assert_array_equal, matplotlib.sankey.Sankey, matplotlib.testing.decorators.check_figures_equal"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_scale.py": {
      "entityType": "file",
      "observations": [
        "Contains 2 classes: TestAsinhScale, DummyAxis",
        "Contains 24 functions: test_log_scales, test_symlog_mask_nan, test_logit_scales, test_log_scatter, test_logscale_subs, test_logscale_mask, test_extra_kwargs_raise, test_logscale_invert_transform, test_logscale_transform_repr, test_logscale_nonpos_values, test_invalid_log_lims, test_function_scale, test_pass_scale, test_scale_deepcopy, inverse, forward, test_transforms, test_init, test_base_init, test_fmtloc, test_bad_scale, __init__, set, set_major_formatter",
        "Imports: copy, matplotlib.pyplot, matplotlib.scale.AsinhScale, matplotlib.scale.AsinhTransform, matplotlib.scale.LogTransform, matplotlib.scale.InvertedLogTransform, matplotlib.scale.SymmetricalLogTransform, matplotlib.scale, matplotlib.ticker.AsinhLocator, matplotlib.ticker.LogFormatterSciNotation, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, numpy, numpy.testing.assert_allclose, io, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_simplification.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 21 functions: test_clipping, test_overflow, test_diamond, test_clipping_out_of_bounds, test_noise, test_antiparallel_simplification, test_angled_antiparallel, test_sine_plus_noise, test_simplify_curve, test_closed_path_nan_removal, test_closed_path_clipping, test_hatch, test_fft_peaks, test_start_with_moveto, test_throw_rendering_complexity_exceeded, test_clipper, test_para_equal_perp, test_clipping_with_nans, test_clipping_full, test_simplify_closepoly, _get_simplified",
        "Imports: base64, io, platform, numpy, numpy.testing.assert_array_almost_equal, numpy.testing.assert_array_equal, pytest, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.remove_ticks_and_titles, matplotlib.pyplot, matplotlib.patches, matplotlib.transforms, matplotlib.path.Path"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_skew.py": {
      "entityType": "file",
      "observations": [
        "Contains 4 classes: SkewXTick, SkewXAxis, SkewSpine, SkewXAxes",
        "Contains 12 functions: test_set_line_coll_dash_image, test_skew_rectangle, draw, get_view_interval, _get_tick, get_view_interval, _adjust_location, _init_axis, _gen_axes_spines, _set_lim_and_transforms, lower_xlim, upper_xlim",
        "Imports: contextlib.ExitStack, itertools, platform, matplotlib.pyplot, matplotlib.testing.decorators.image_comparison, matplotlib.axes.Axes, matplotlib.transforms, matplotlib.axis, matplotlib.spines, matplotlib.patches, matplotlib.projections.register_projection"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_sphinxext.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 9 functions: build_sphinx_html, test_tinypages, test_plot_html_show_source_link, test_show_source_link_true, test_show_source_link_false, test_srcset_version, plot_file, plot_directive_file, plot_file",
        "Imports: filecmp, os, pathlib.Path, shutil, sys, matplotlib.testing.subprocess_run_for_testing, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_spines.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: SpineMock",
        "Contains 11 functions: test_spine_class, test_spines_axes_positions, test_spines_data_positions, test_spine_nonlinear_data_positions, test_spines_capstyle, test_label_without_ticks, test_spines_black_axes, test_arc_spine_inner_no_axis, __init__, set, set_val",
        "Imports: numpy, pytest, matplotlib.pyplot, matplotlib.spines.Spines, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_streamplot.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 12 functions: velocity_field, swirl_velocity_field, test_startpoints, test_colormap, test_linewidth, test_masks_and_nans, test_maxlength, test_maxlength_no_broken, test_direction, test_streamplot_limits, test_streamplot_grid, test_streamplot_inputs",
        "Imports: numpy, numpy.testing.assert_array_almost_equal, pytest, matplotlib.pyplot, matplotlib.testing.decorators.image_comparison, matplotlib.transforms"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_style.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 17 functions: temp_style, test_invalid_rc_warning_includes_filename, test_available, test_use, test_use_url, test_single_path, test_context, test_context_with_dict, test_context_with_dict_after_namedstyle, test_context_with_dict_before_namedstyle, test_context_with_union_of_dict_and_namedstyle, test_context_with_badparam, test_alias, test_xkcd_no_cm, test_xkcd_cm, test_up_to_date_blacklist, test_style_from_module",
        "Imports: contextlib.contextmanager, pathlib.Path, tempfile.TemporaryDirectory, sys, numpy, pytest, matplotlib, matplotlib.pyplot, matplotlib.style, matplotlib.style.core.USER_LIBRARY_PATHS, matplotlib.style.core.STYLE_EXTENSION"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_subplots.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 18 functions: check_shared, check_ticklabel_visible, check_tick1_visible, test_shared, test_label_outer, test_label_outer_span, test_label_outer_non_gridspec, test_shared_and_moved, test_exceptions, test_subplots_offsettext, test_subplots_hide_ticklabels, test_subplots_hide_axislabels, test_get_gridspec, test_dont_mutate_kwargs, test_width_and_height_ratios, test_width_and_height_ratios_mosaic, test_ratio_overlapping_kws, test_old_subplot_compat",
        "Imports: itertools, platform, numpy, pytest, matplotlib, matplotlib.axes.Axes, matplotlib.axes.SubplotBase, matplotlib.pyplot, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_table.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: FakeUnit",
        "Contains 13 functions: test_non_square, test_zorder, test_label_colours, test_diff_cell_table, test_customcell, test_auto_column, test_table_cells, test_table_bbox, test_table_unit, test_table_dataframe, test_table_fontsize, __init__, __repr__",
        "Imports: datetime, unittest.mock.Mock, numpy, matplotlib.pyplot, matplotlib.path.Path, matplotlib.table.CustomCell, matplotlib.table.Table, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal, matplotlib.transforms.Bbox, matplotlib.units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_testing.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 6 functions: test_warn_to_fail, test_parametrize_with_check_figure_equal, test_wrap_failure, test_check_figures_equal_extra_fig, test_check_figures_equal_closed_fig, should_fail",
        "Imports: warnings, pytest, matplotlib.pyplot, matplotlib.testing.decorators.check_figures_equal"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_texmanager.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 4 functions: test_fontconfig_preamble, test_font_selection, test_unicode_characters, test_openin_any_paranoid",
        "Imports: os, pathlib.Path, re, sys, pytest, matplotlib.pyplot, matplotlib.testing.subprocess_run_for_testing, matplotlib.testing._markers.needs_usetex, matplotlib.texmanager.TexManager"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_text.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 74 functions: test_font_styles, test_multiline, test_multiline2, test_antialiasing, test_afm_kerning, test_contains, test_annotation_contains, test_annotate_errors, test_titles, test_alignment, test_axes_titles, test_set_position, test_char_index_at, test_non_default_dpi, test_get_rotation_string, test_get_rotation_float, test_get_rotation_int, test_get_rotation_raises, test_get_rotation_none, test_get_rotation_mod360, test_null_rotation_with_rotation_mode, test_bbox_clipping, test_annotation_negative_ax_coords, test_annotation_negative_fig_coords, test_text_stale, test_agg_text_clip, test_text_size_binding, test_font_scaling, test_two_2line_texts, test_validate_linespacing, test_nonfinite_pos, test_hinting_factor_backends, test_usetex_is_copied, test_single_artist_usetex, test_single_artist_usenotex, test_text_as_path_opacity, test_text_as_text_opacity, test_text_repr, test_annotation_update, test_annotation_units, test_large_subscript_title, test_wrap, test_mathwrap, test_get_window_extent_wrapped, test_long_word_wrap, test_wrap_no_wrap, test_buffer_size, test_fontproperties_kwarg_precedence, test_transform_rotates_text, test_update_mutate_input, test_invalid_rotation_values, test_invalid_color, test_pdf_kerning, test_unsupported_script, test_parse_math, test_parse_math_rcparams, test_pdf_font42_kerning, test_pdf_chars_beyond_bmp, test_metrics_cache, test_annotate_offset_fontsize, test_get_set_antialiased, test_annotation_antialiased, test_annotate_and_offsetfrom_copy_input, test_text_antialiased_off_default_vs_manual, test_text_antialiased_on_default_vs_manual, test_text_annotation_get_window_extent, test_text_with_arrow_annotation_get_window_extent, test_arrow_annotation_get_window_extent, test_empty_annotation_get_window_extent, test_basic_wrap, test_font_wrap, find_matplotlib_font, draw_box, call",
        "Imports: datetime.datetime, io, warnings, numpy, numpy.testing.assert_almost_equal, packaging.version.parse, pyparsing, pytest, matplotlib, matplotlib.backend_bases.MouseEvent, matplotlib.backends.backend_agg.RendererAgg, matplotlib.figure.Figure, matplotlib.font_manager.FontProperties, matplotlib.patches, matplotlib.pyplot, matplotlib.gridspec.GridSpec, matplotlib.transforms, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing._markers.needs_usetex, matplotlib.text.Text, matplotlib.text.Annotation, matplotlib.text.OffsetFrom, matplotlib.font_manager.FontProperties, matplotlib.font_manager.findfont"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_textpath.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 1 functions: test_copy",
        "Imports: copy, matplotlib.textpath.TextPath"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_ticker.py": {
      "entityType": "file",
      "observations": [
        "Contains 22 classes: TestMaxNLocator, TestLinearLocator, TestMultipleLocator, TestAutoMinorLocator, TestLogLocator, TestNullLocator, _LogitHelper, TestLogitLocator, TestFixedLocator, TestIndexLocator, TestSymmetricalLogLocator, TestAsinhLocator, TestScalarFormatter, TestLogFormatterExponent, TestLogFormatterMathtext, TestLogFormatterSciNotation, TestLogFormatter, TestLogitFormatter, TestFormatStrFormatter, TestStrMethodFormatter, TestEngFormatter, TestPercentFormatter",
        "Contains 110 functions: test_engformatter_usetex_useMathText, test_engformatter_offset_oom, _impl_locale_comma, test_locale_comma, test_majformatter_type, test_minformatter_type, test_majlocator_type, test_minlocator_type, test_minorticks_rc, test_minorticks_toggle, test_remove_overlap, test_bad_locator_subs, test_small_range_loglocator, test_NullFormatter, test_set_offset_string, test_minorticks_on_multi_fig, test_basic, test_integer, test_errors, test_padding, test_basic, test_zero_numticks, test_set_params, test_presets, test_basic, test_basic_with_offset, test_view_limits, test_view_limits_round_numbers, test_view_limits_round_numbers_with_offset, test_view_limits_single_bin, test_set_params, test_basic, test_first_and_last_minorticks, test_low_number_of_majorticks, test_using_all_default_major_steps, test_number_of_minor_ticks, test_additional, test_number_of_minor_ticks_auto, test_number_of_minor_ticks_int, test_basic, test_polar_axes, test_switch_to_autolocator, test_set_params, test_tick_values_correct, test_tick_values_not_empty, test_multiple_shared_axes, test_set_params, isclose, assert_almost_equal, test_basic_major, test_maxn_major, test_nbins_major, test_minor, test_minor_attr, test_nonsingular_ok, test_nonsingular_nok, test_set_params, test_set_params, test_set_params, test_values, test_subs, test_extending, test_init, test_set_params, test_linear_values, test_wide_values, test_near_zero, test_fallback, test_symmetrizing, test_base_rounding, test_unicode_minus, test_offset_value, test_use_offset, test_useMathText, test_set_use_offset_float, test_use_locale, test_scilimits, test_format_data, test_cursor_precision, test_cursor_dummy_axis, test_mathtext_ticks, test_cmr10_substitutions, test_empty_locs, test_basic, test_blank, test_min_exponent, test_basic, test_pprint, test_format_data, _sub_labels, test_sublabel, test_LogFormatter_call, test_LogFormatter_call_tiny, logit_deformatter, test_logit_deformater, test_basic, test_invalid, test_variablelength, test_minor_vs_major, test_minor_number, test_use_overline, test_one_half, test_format_data_short, test_basic, test_basic, test_params, test_basic, test_latex, minorticksubplot, minortickstoggle",
        "Imports: contextlib.nullcontext, itertools, locale, logging, re, packaging.version.parse, numpy, numpy.testing.assert_almost_equal, numpy.testing.assert_array_equal, pytest, matplotlib, matplotlib.pyplot, matplotlib.ticker"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_tightlayout.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 28 functions: example_plot, test_tight_layout1, test_tight_layout2, test_tight_layout3, test_tight_layout4, test_tight_layout5, test_tight_layout6, test_tight_layout7, test_tight_layout8, test_tight_layout9, test_outward_ticks, add_offsetboxes, test_tight_layout_offsetboxes, test_empty_layout, test_verybig_decorators, test_big_decorators_horizontal, test_big_decorators_vertical, test_badsubplotgrid, test_collapsed, test_suptitle, test_non_agg_renderer, test_manual_colorbar, test_clipped_to_axes, test_tight_pads, test_tight_kwargs, test_tight_toggle, _subplots, __init__",
        "Imports: warnings, numpy, numpy.testing.assert_array_equal, pytest, matplotlib, matplotlib.testing.decorators.image_comparison, matplotlib.pyplot, matplotlib.offsetbox.AnchoredOffsetbox, matplotlib.offsetbox.DrawingArea, matplotlib.patches.Rectangle"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_transforms.py": {
      "entityType": "file",
      "observations": [
        "Contains 7 classes: TestAffine2D, TestAffineDeltaTransform, NonAffineForTest, TestBasicTransform, TestTransformPlotInterface, AssertingNonAffineTransform, ScaledBy",
        "Contains 73 functions: test_non_affine_caching, test_external_transform_api, test_pre_transform_plotting, test_contour_pre_transform_limits, test_pcolor_pre_transform_limits, test_pcolormesh_pre_transform_limits, test_pcolormesh_gouraud_nans, test_Affine2D_from_values, test_affine_inverted_invalidated, test_clipping_of_log, assert_bbox_eq, test_bbox_frozen_copies_minpos, test_bbox_intersection, test_bbox_as_strings, test_str_transform, test_transform_single_point, test_log_transform, test_nan_overlap, test_transform_angles, test_nonsingular, test_transformed_path, test_transformed_patch_path, test_lockable_bbox, test_transformwrapper, test_scale_swapping, test_offset_copy_errors, test_transformedbbox_contains, test_interval_contains, test_interval_contains_open, test_scaledrotation_initialization, test_scaledrotation_get_matrix_invalid, test_init, test_values, test_modify_inplace, test_clear, test_rotate, test_rotate_around, test_scale, test_skew, test_translate, test_rotate_plus_other, test_rotate_around_plus_other, test_scale_plus_other, test_skew_plus_other, test_translate_plus_other, test_invalid_transform, test_copy, test_deepcopy, test_invalidate, __init__, transform_non_affine, transform_path_non_affine, setup_method, test_transform_depth, test_left_to_right_iteration, test_transform_shortcuts, test_contains_branch, test_affine_simplification, test_line_extent_axes_coords, test_line_extent_data_coords, test_line_extent_compound_coords1, test_line_extent_predata_transform_coords, test_line_extent_compound_coords2, test_line_extents_affine, test_line_extents_non_affine, test_pathc_extents_non_affine, test_pathc_extents_affine, test_line_extents_for_non_affine_transData, __init__, transform_path_non_affine, transform_non_affine, __init__, _as_mpl_transform",
        "Imports: copy, numpy, numpy.testing.assert_allclose, numpy.testing.assert_almost_equal, numpy.testing.assert_array_equal, numpy.testing.assert_array_almost_equal, pytest, matplotlib.scale, matplotlib.pyplot, matplotlib.patches, matplotlib.transforms, matplotlib.transforms.Affine2D, matplotlib.transforms.Bbox, matplotlib.transforms.TransformedBbox, matplotlib.transforms._ScaledRotation, matplotlib.path.Path, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal, unittest.mock.MagicMock"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_triangulation.py": {
      "entityType": "file",
      "observations": [
        "Contains 1 classes: TestTriangulationParams",
        "Contains 50 functions: test_extract_triangulation_positional_mask, test_triangulation_init, test_triangulation_set_mask, test_delaunay, test_delaunay_duplicate_points, test_delaunay_points_in_line, test_delaunay_insufficient_points, test_delaunay_robust, test_tripcolor, test_tripcolor_color, test_tripcolor_clim, test_tripcolor_warnings, test_no_modify, test_trifinder, test_triinterp, test_triinterpcubic_C1_continuity, test_triinterpcubic_cg_solver, test_triinterpcubic_geom_weights, test_triinterp_colinear, test_triinterp_transformations, test_tri_smooth_contouring, test_tri_smooth_gradient, test_tritools, test_trirefine, test_trirefine_masked, meshgrid_triangles, test_triplot_return, test_trirefiner_fortran_contiguous_triangles, test_qhull_triangle_orientation, test_trianalyzer_mismatched_indices, test_tricontourf_decreasing_levels, test_internal_cpp_api, test_qhull_large_offset, test_tricontour_non_finite_z, test_tricontourset_reuse, test_triplot_with_ls, test_triplot_label, test_tricontour_path, test_tricontourf_path, test_extract_triangulation_params, tri_contains_point, tris_contain_point, quad, gradient_quad, check_continuity, poisson_sparse_matrix, z, z, dipole_potential, power",
        "Imports: numpy, numpy.testing.assert_array_equal, numpy.testing.assert_array_almost_equal, numpy.testing.assert_array_less, numpy.ma.testutils, pytest, matplotlib, matplotlib.pyplot, matplotlib.tri, matplotlib.path.Path, matplotlib.testing.decorators.image_comparison, matplotlib.testing.decorators.check_figures_equal, matplotlib._tri"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_type1font.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 8 functions: test_Type1Font, test_Type1Font_2, test_tokenize, test_tokenize_errors, test_overprecision, test_encrypt_decrypt_roundtrip, convert, bin_after",
        "Imports: matplotlib._type1font, os.path, difflib, pytest"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_units.py": {
      "entityType": "file",
      "observations": [
        "Contains 3 classes: Quantity, Kernel, subdate",
        "Contains 29 functions: quantity_converter, test_numpy_facade, test_plot_masked_units, test_empty_set_limits_with_units, test_jpl_bar_units, test_jpl_barh_units, test_jpl_datetime_units_consistent, test_empty_arrays, test_scatter_element0_masked, test_errorbar_mixed_units, test_subclass, test_shared_axis_quantity, test_shared_axis_datetime, test_shared_axis_categorical, test_explicit_converter, test_empty_default_limits, test_plot_kernel, test_connection_patch_units, __init__, to, __copy__, __getattr__, __getitem__, __array__, convert, default_units, __init__, __array__, shape",
        "Imports: datetime.datetime, datetime.timezone, datetime.timedelta, platform, unittest.mock.MagicMock, matplotlib.pyplot, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.patches, matplotlib.units, matplotlib.category.StrCategoryConverter, matplotlib.category.UnitData, matplotlib.dates.DateConverter, numpy, pytest, matplotlib.testing.jpl_units, matplotlib.testing.jpl_units, matplotlib.testing.jpl_units"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_usetex.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 11 functions: test_usetex, test_empty, test_unicode_minus, test_mathdefault, test_multiline_eqnarray, test_minus_no_descent, test_usetex_packages, test_latex_pkg_already_loaded, test_usetex_with_underscore, test_missing_psfont, test_rotation",
        "Imports: tempfile.TemporaryFile, numpy, packaging.version.parse, pytest, matplotlib, matplotlib.dviread, matplotlib.testing._has_tex_package, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing._markers.needs_usetex, matplotlib.pyplot"
      ]
    },
    "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_widgets.py": {
      "entityType": "file",
      "observations": [
        "Contains 0 classes: ",
        "Contains 71 functions: ax, test_save_blitted_widget_as_pdf, test_rectangle_selector, test_rectangle_minspan, test_rectangle_drag, test_rectangle_selector_set_props_handle_props, test_rectangle_resize, test_rectangle_add_state, test_rectangle_resize_center, test_rectangle_resize_square, test_rectangle_resize_square_center, test_rectangle_rotate, test_rectangle_add_remove_set, test_rectangle_resize_square_center_aspect, test_ellipse, test_rectangle_handles, test_rectangle_selector_onselect, test_rectangle_selector_ignore_outside, test_span_selector, test_span_selector_onselect, test_span_selector_ignore_outside, test_span_selector_drag, test_span_selector_direction, test_span_selector_set_props_handle_props, test_selector_clear, test_selector_clear_method, test_span_selector_add_state, test_tool_line_handle, test_span_selector_bound, test_span_selector_animated_artists_callback, test_snapping_values_span_selector, test_span_selector_snap, test_span_selector_extents, test_lasso_selector, test_lasso_selector_set_props, test_lasso_set_props, test_CheckButtons, test_TextBox, test_RadioButtons, test_check_radio_buttons_image, test_radio_buttons, test_radio_buttons_props, test_radio_button_active_conflict, test_radio_buttons_activecolor_change, test_check_buttons, test_check_button_props, test_slider_slidermin_slidermax_invalid, test_slider_slidermin_slidermax, test_slider_valmin_valmax, test_slider_valstep_snapping, test_slider_horizontal_vertical, test_slider_reset, test_range_slider, test_range_slider_same_init_values, check_polygon_selector, polygon_place_vertex, polygon_remove_vertex, test_polygon_selector, test_polygon_selector_set_props_handle_props, test_rect_visibility, test_polygon_selector_remove, test_polygon_selector_remove_first_point, test_polygon_selector_redraw, test_polygon_selector_verts_setter, test_polygon_selector_box, test_polygon_selector_clear_method, test_MultiCursor, mean, onselect, onselect, handle_positions",
        "Imports: functools, io, operator, unittest.mock, matplotlib.backend_bases.MouseEvent, matplotlib.colors, matplotlib.widgets, matplotlib.pyplot, matplotlib.testing.decorators.check_figures_equal, matplotlib.testing.decorators.image_comparison, matplotlib.testing.widgets.click_and_drag, matplotlib.testing.widgets.do_event, matplotlib.testing.widgets.get_ax, matplotlib.testing.widgets.mock_event, matplotlib.testing.widgets.noop, numpy, numpy.testing.assert_allclose, pytest, matplotlib.widgets.CheckButtons, matplotlib.widgets.RadioButtons, matplotlib.cbook._get_running_interactive_framework"
      ]
    }
  },
  "relations": [
    {
      "from": "janitor.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "shutil",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "subprocess",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "glob",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "fnmatch",
      "relationType": "imports"
    },
    {
      "from": "janitor.py",
      "to": "yaml",
      "relationType": "imports"
    },
    {
      "from": "mcp_server.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "mcp_server.py",
      "to": "uvicorn",
      "relationType": "imports"
    },
    {
      "from": "mcp_server.py",
      "to": "fastapi.FastAPI",
      "relationType": "imports"
    },
    {
      "from": "mcp_server.py",
      "to": "fastapi.Response",
      "relationType": "imports"
    },
    {
      "from": "mcp_server.py",
      "to": "pydantic.BaseModel",
      "relationType": "imports"
    },
    {
      "from": "queensgambit.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "queensgambit.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "queensgambit.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "queensgambit.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "queensgambit.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "queensgambit.py",
      "to": "glob",
      "relationType": "imports"
    },
    {
      "from": "queensgambit.py",
      "to": "yaml",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "fastapi.FastAPI",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "fastapi.middleware.cors.CORSMiddleware",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "fastapi.responses.JSONResponse",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "dotenv.load_dotenv",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "app.core.validation.provenance_enforcer.ProvenanceEnforcerMiddleware",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "app.api.routes.system_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "app.api.routes.auth_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "app.domains.science.science_module.science_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "app.domains.commerce.commerce_module.commerce_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "app.domains.arts.arts_module.arts_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "app.domains.commerce.finance.finance_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "uvicorn",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "core.validation.provenance_enforcer.ProvenanceEnforcerMiddleware",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "api.routes.system_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "api.routes.auth_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "domains.science.science_module.science_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "domains.commerce.commerce_module.commerce_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "domains.arts.arts_module.arts_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main.py",
      "to": "domains.commerce.finance.finance_router",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "fastapi.FastAPI",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "fastapi.middleware.httpsredirect.HTTPSRedirectMiddleware",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "fastapi.middleware.trustedhost.TrustedHostMiddleware",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "app.main.app",
      "relationType": "imports"
    },
    {
      "from": "app\\main_production.py",
      "to": "uvicorn",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "enum.Enum",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "pydantic.BaseModel",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "pydantic.Field",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "pydantic.HttpUrl",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\schemas.py",
      "to": "pydantic.validator",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "fastapi.APIRouter",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "fastapi.Depends",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "fastapi.HTTPException",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "fastapi.status",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "app.core.auth.ACCESS_TOKEN_EXPIRE_MINUTES",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "app.core.auth.LoginRequest",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "app.core.auth.TokenResponse",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "app.core.auth.User",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "app.core.auth.authenticate_user",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "app.core.auth.create_access_token",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\auth.py",
      "to": "app.core.auth.get_current_active_user",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "fastapi.APIRouter",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "fastapi.BackgroundTasks",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "fastapi.HTTPException",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "fastapi.Depends",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "pydantic.BaseModel",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "pydantic.Field",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "app.core.auth.User",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "app.core.auth.get_current_active_user",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "app.core.auth.require_role",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "core.auth.User",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "core.auth.get_current_active_user",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\system.py",
      "to": "core.auth.require_role",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\__init__.py",
      "to": "auth.router",
      "relationType": "imports"
    },
    {
      "from": "app\\api\\routes\\__init__.py",
      "to": "system.router",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\audit.py",
      "to": "typer",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\audit.py",
      "to": "rich.console.Console",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\audit.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\audit.py",
      "to": "app.domains.audit.audit_core.AuditEngine",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\audit.py",
      "to": "app.domains.audit.audit_core.AuditConfig",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\main.py",
      "to": "typer",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\main.py",
      "to": "rich.console.Console",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\main.py",
      "to": ".audit",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\main.py",
      "to": ".tour",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "typer",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "rich.console.Console",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "yaml",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "harmony.swing_scheduler.SamplerState",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "harmony.swing_scheduler.SamplerState",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "domains.arts.investlab.hub_investlab.hub.highway.highway",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "domains.arts.investlab.hub_investlab.hub.highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "domains.arts.investlab.hub_investlab.hub.highway.highway",
      "relationType": "imports"
    },
    {
      "from": "app\\cli\\tour.py",
      "to": "domains.arts.investlab.hub_investlab.hub.highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "hashlib",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "secrets",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "fastapi.Depends",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "fastapi.HTTPException",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "fastapi.status",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "fastapi.security.HTTPAuthorizationCredentials",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "fastapi.security.HTTPBearer",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\auth.py",
      "to": "pydantic.BaseModel",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\knowledge_graph_memory.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\knowledge_graph_memory.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\knowledge_graph_memory.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\knowledge_graph_memory.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\knowledge_graph_memory.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\test_runner.py",
      "to": "subprocess",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\test_runner.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\test_runner.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\test_runner.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\test_runner.py",
      "to": "defusedxml.ElementTree",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\test_runner.py",
      "to": "security_guardrails.SecurityGuardrails",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\validation\\provenance_enforcer.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\validation\\provenance_enforcer.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\validation\\provenance_enforcer.py",
      "to": "fastapi.Request",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\validation\\provenance_enforcer.py",
      "to": "fastapi.Response",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\validation\\provenance_enforcer.py",
      "to": "starlette.middleware.base.BaseHTTPMiddleware",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\validation\\provenance_enforcer.py",
      "to": "starlette.types.ASGIApp",
      "relationType": "imports"
    },
    {
      "from": "app\\core\\validation\\__init__.py",
      "to": "provenance_enforcer.ProvenanceEnforcerMiddleware",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "fastapi.APIRouter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "fastapi.HTTPException",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "pydantic.BaseModel",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "hall_of_fame.router",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "harmony.get_harmony_engine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "intelligence.get_intelligence_engine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\arts_module.py",
      "to": "resonance.get_resonance_engine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\hall_of_fame.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\hall_of_fame.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\hall_of_fame.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\hall_of_fame.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\hall_of_fame.py",
      "to": "pydantic.BaseModel",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\hall_of_fame.py",
      "to": "fastapi.APIRouter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\security_monitor.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\security_monitor.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\security_monitor.py",
      "to": "subprocess",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\security_monitor.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\security_monitor.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\security_monitor.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\config.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\config.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\config.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\config.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\config.py",
      "to": "dotenv.load_dotenv",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\dashboard_launcher.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\dashboard_launcher.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\dashboard_launcher.py",
      "to": "subprocess",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\dashboard_launcher.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\dashboard_launcher.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "dotenv.load_dotenv",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "fetchers.microsoft_fetcher.MicrosoftFetcher",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "fetchers.google_fetcher.GoogleFetcher",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "fetchers.x_fetcher.XFetcher",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "aggregator.data_aggregator.DataAggregator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "aggregator.scheduler.DataScheduler",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "web.dashboard.create_dashboard",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_hub.py",
      "to": "config.Config",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "researchlab_dashboard.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "researchlab.get_research_lab",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "unified_hub.get_unified_hub",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "researchlab_dashboard",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "research.advanced_research.get_advanced_research",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "research.advanced_research.get_advanced_research",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "entertainment.nudges.music_nudges.get_music_nudges",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "highway.monitor.get_highway_monitor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "researchlab.get_research_lab",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "unified_hub.get_unified_hub",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "research.advanced_research.get_advanced_research",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "entertainment.nudges.music_nudges.get_music_nudges",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "streamlit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "plotly",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\ecosystem_demo.py",
      "to": "pandas",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\final_hub.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\final_hub.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\final_hub.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\final_hub.py",
      "to": "urllib.request",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\final_hub.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "research.ai_service.AIService",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "entertainment.media_service.MediaService",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "entertainment.nudges.music_nudges.MusicNudges",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "finance.finance_service.FinanceService",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "insights.social_service.SocialService",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "master_hub.MasterHub",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\hub_cli.py",
      "to": "entertainment.nudges.music_nudges.MusicNudges",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "highway.router.get_highway_router",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "highway.monitor.get_highway_monitor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "research.advanced_research.get_advanced_research",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab.py",
      "to": "entertainment.nudges.music_nudges.get_music_nudges",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "streamlit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "plotly.express",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "plotly.graph_objects",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "altair",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "pandas",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "threading",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "random",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "researchlab.get_research_lab",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "unified_hub.get_unified_hub",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "highway.monitor.get_highway_monitor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "research.advanced_research.get_advanced_research",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\researchlab_dashboard.py",
      "to": "entertainment.nudges.music_nudges.get_music_nudges",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\run_complete.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\run_complete.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\run_complete.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\run_complete.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "urllib.request",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\simple_hub.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\test_hub.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\test_hub.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\test_hub.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\test_hub.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\test_hub.py",
      "to": "data_hub.DataHub",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "highway.router.get_highway_router",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "highway.monitor.get_highway_monitor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "highway.development_bridge.get_development_bridge",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "researchlab.get_research_lab",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "research.advanced_research.get_advanced_research",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\unified_hub.py",
      "to": "entertainment.nudges.music_nudges.get_music_nudges",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "research.advanced_research.get_advanced_research",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "researchlab.get_research_lab",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "researchlab.initiate_project",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "researchlab.conduct_research",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "researchlab.collaborate",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "entertainment.nudges.music_nudges.get_music_nudges",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "highway.router.get_highway_router",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "highway.development_bridge.get_development_bridge",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "researchlab.analyze_impact",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\validate_researchlab.py",
      "to": "researchlab.initiate_project",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "enum.Enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "intelligence.get_intelligence_engine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\__init__.py",
      "to": "analytics.get_portfolio_analytics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "pandas",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "schedule",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\data_aggregator.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\scheduler.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\scheduler.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\scheduler.py",
      "to": "schedule",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\scheduler.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\scheduler.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\scheduler.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\data_management\\scheduler.py",
      "to": "threading",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\media_service.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\media_service.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\media_service.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\media_service.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\media_service.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\media_service.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "subprocess",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\entertainment\\nudges\\music_nudges.py",
      "to": "random",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py",
      "to": "urllib.request",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py",
      "to": "urllib.parse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\finance\\finance_service.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "shutil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "hashlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "highway.Highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\development_bridge.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "highway.Highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "highway.router.get_highway_router",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\monitor.py",
      "to": "highway.development_bridge.get_development_bridge",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\quick_start.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\quick_start.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\quick_start.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\quick_start.py",
      "to": "highway.router.get_highway_router",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\quick_start.py",
      "to": "highway.development_bridge.get_development_bridge",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\quick_start.py",
      "to": "highway.monitor.get_highway_monitor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "highway.Highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\router.py",
      "to": "highway.RoutePriority",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "enum.Enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "hashlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "threading",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\highway\\__init__.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\insights\\social_service.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\insights\\social_service.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\insights\\social_service.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\insights\\social_service.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\insights\\social_service.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\insights\\social_service.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "flask.Flask",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "flask.render_template",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "flask.jsonify",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "flask.request",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "flask_cors.CORS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\interface\\dashboard.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "hashlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\advanced_research.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py",
      "to": "requests",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\research\\ai_service.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\auth_hub.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\auth_hub.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\auth_hub.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\auth_hub.py",
      "to": "auth.web_app.create_auth_app",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\auth_hub.py",
      "to": "auth.user_manager.UserManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\auth_hub.py",
      "to": "auth.oauth_manager.OAuthManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\oauth_manager.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\oauth_manager.py",
      "to": "secrets",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\oauth_manager.py",
      "to": "urllib.parse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\oauth_manager.py",
      "to": "urllib.request",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\oauth_manager.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\oauth_manager.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\oauth_manager.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\user_manager.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\user_manager.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\user_manager.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\user_manager.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\user_manager.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\user_manager.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\user_manager.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "flask.Flask",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "flask.render_template",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "flask.request",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "flask.redirect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "flask.url_for",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "flask.session",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "flask.jsonify",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\hub_investlab\\hub\\security\\web_app.py",
      "to": "auth.oauth_manager.OAuthManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "pandas",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\analytics\\__init__.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "enum.Enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "random",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\harmony\\__init__.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "highway.router.get_highway_router",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\intelligence\\__init__.py",
      "to": "highway.monitor.get_highway_monitor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "uuid",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "decimal.Decimal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "analytics.get_portfolio_analytics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\investlab\\portfolio\\__init__.py",
      "to": "random",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "pandas",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "dotenv.load_dotenv",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "fetchers.microsoft_fetcher.MicrosoftFetcher",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "fetchers.google_fetcher.GoogleFetcher",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "fetchers.x_fetcher.XFetcher",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "aggregator.data_aggregator.DataAggregator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\data_hub.py",
      "to": "web.dashboard.create_dashboard",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "aiohttp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "feedparser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\google_fetcher.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "aiohttp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "feedparser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "requests",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\microsoft_fetcher.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "aiohttp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "feedparser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\fetchers\\x_fetcher.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "feedparser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "requests",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "enum.Enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "highway.get_highway",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\news_investlab\\resonance\\__init__.py",
      "to": "highway.DataType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "fnmatch",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "functools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "ntpath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "posixpath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "collections.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "contextlib.contextmanager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "errno.EINVAL",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "errno.ENOENT",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "operator.attrgetter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "stat.S_ISDIR",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "stat.S_ISLNK",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "stat.S_ISREG",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "stat.S_ISSOCK",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "stat.S_ISBLK",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "stat.S_ISCHR",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "stat.S_ISFIFO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "urllib.quote",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "urllib.quote",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "nt",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "urllib.parse.quote",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "urllib.parse.quote_from_bytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "nt._getfinalpathname",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "pwd",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pathlib.py",
      "to": "grp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pylab.py",
      "to": "matplotlib.pylab.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\pylab.py",
      "to": "matplotlib.pylab",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "__future__.absolute_import",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "functools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "operator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "types",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "importlib.util.spec_from_loader",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\six.py",
      "to": "StringIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "abc",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "builtins",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "collections",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "collections.abc",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "contextlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "functools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "inspect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "keyword",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "operator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "types",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "annotationlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing.AsyncContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing.AsyncGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing.ContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing.ParamSpec",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "annotationlib.Format",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "annotationlib.get_annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "_socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "functools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "types.MethodType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "asyncio.coroutines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "functools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\typing_extensions.py",
      "to": "inspect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "collections.abc.Awaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "collections.abc.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "concurrent.futures.Future",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "contextlib.AbstractAsyncContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "contextlib.AbstractContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "contextlib.contextmanager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "inspect.isawaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "threading.Lock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "threading.Thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "threading.current_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "threading.get_ident",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "_core._eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "_core._eventloop.get_cancelled_exc_class",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "_core._eventloop.threadlocals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "_core._eventloop.run",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "_core._exceptions.NoEventLoopError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "_core._synchronization.Event",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "_core._tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "_core._tasks.create_task_group",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "abc._tasks.TaskStatus",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "lowlevel.EventLoopToken",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\from_thread.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "typing.Literal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "typing.final",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "weakref.WeakKeyDictionary",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "_core._eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\lowlevel.py",
      "to": "abc.AsyncBackend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "collections.abc.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "collections.abc.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "contextlib.ExitStack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "contextlib.contextmanager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "inspect.isasyncgenfunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "inspect.iscoroutinefunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "inspect.ismethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "pytest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "sniffio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "_pytest.fixtures.SubRequest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "_pytest.outcomes.Exit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "_core._eventloop.get_all_backends",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "_core._eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "_core._exceptions.iterate_exceptions",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "abc.TestRunner",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py",
      "to": "exceptiongroup.ExceptionGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "atexit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "collections.deque",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "typing.Final",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": ".current_time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": ".to_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "_core._exceptions.BrokenWorkerInterpreter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "_core._synchronization.CapacityLimiter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "lowlevel.RunVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "concurrent.interpreters.ExecutionFailed",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "concurrent.interpreters.create",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "_interpqueues",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "_interpreters",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_interpreter.py",
      "to": "pickle",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "pickle",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "subprocess",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "collections.deque",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "importlib.util.module_from_spec",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "importlib.util.spec_from_file_location",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "_core._eventloop.current_time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "_core._eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "_core._eventloop.get_cancelled_exc_class",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "_core._exceptions.BrokenWorkerProcess",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "_core._subprocesses.open_process",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "_core._synchronization.CapacityLimiter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "_core._tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "_core._tasks.fail_after",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "abc.ByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "abc.ByteSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "abc.Process",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "lowlevel.RunVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "lowlevel.checkpoint_if_cancelled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "streams.buffered.BufferedByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_process.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "warnings.warn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "_core._eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "abc.CapacityLimiter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\to_thread.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._contextmanagers.AsyncContextManagerMixin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._contextmanagers.ContextManagerMixin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._eventloop.current_time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._eventloop.get_all_backends",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._eventloop.get_cancelled_exc_class",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._eventloop.run",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._eventloop.sleep",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._eventloop.sleep_forever",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._eventloop.sleep_until",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.BrokenResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.BrokenWorkerInterpreter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.BrokenWorkerProcess",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.BusyResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.ClosedResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.ConnectionFailed",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.DelimiterNotFound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.EndOfStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.IncompleteRead",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.NoEventLoopError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.RunFinishedError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.TypedAttributeLookupError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._exceptions.WouldBlock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._fileio.AsyncFile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._fileio.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._fileio.open_file",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._fileio.wrap_file",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._resources.aclose_forcefully",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._signals.open_signal_receiver",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.TCPConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.UNIXConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.as_connectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.connect_tcp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.connect_unix",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.create_connected_udp_socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.create_connected_unix_datagram_socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.create_tcp_listener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.create_udp_socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.create_unix_datagram_socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.create_unix_listener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.getaddrinfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.getnameinfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.notify_closing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.wait_readable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.wait_socket_readable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.wait_socket_writable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._sockets.wait_writable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._streams.create_memory_object_stream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._subprocesses.open_process",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._subprocesses.run_process",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.CapacityLimiter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.CapacityLimiterStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.Condition",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.ConditionStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.Event",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.EventStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.Lock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.LockStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.ResourceGuard",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.Semaphore",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._synchronization.SemaphoreStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tasks.TASK_STATUS_IGNORED",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tasks.create_task_group",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tasks.current_effective_deadline",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tasks.fail_after",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tasks.move_on_after",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tempfile.NamedTemporaryFile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tempfile.SpooledTemporaryFile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tempfile.TemporaryDirectory",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tempfile.TemporaryFile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tempfile.gettempdir",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tempfile.gettempdirb",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tempfile.mkdtemp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._tempfile.mkstemp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._testing.TaskInfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._testing.get_current_task",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._testing.get_running_tasks",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._testing.wait_all_tasks_blocked",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._typedattr.TypedAttributeProvider",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._typedattr.TypedAttributeSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "_core._typedattr.typed_attribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\__init__.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "abc.ABCMeta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "collections.abc.AsyncIterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "collections.abc.Awaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "collections.abc.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "contextlib.AbstractContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "signal.Signals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "socket.AddressFamily",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "socket.SocketKind",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "socket.socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_typeshed.FileDescriptorLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_core._synchronization.CapacityLimiter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_core._synchronization.Event",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_core._synchronization.Lock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_core._synchronization.Semaphore",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_core._tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_core._testing.TaskInfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "from_thread.BlockingPortal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_sockets.ConnectedUDPSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_sockets.ConnectedUNIXDatagramSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_sockets.IPSockAddrType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_sockets.SocketListener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_sockets.SocketStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_sockets.UDPSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_sockets.UNIXDatagramSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_sockets.UNIXSocketStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_subprocesses.Process",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_tasks.TaskGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "to": "_testing.TestRunner",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_resources.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_resources.py",
      "to": "abc.ABCMeta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_resources.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_resources.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_resources.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "errno",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "collections.abc.Collection",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "contextlib.AsyncExitStack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "io.IOBase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "ipaddress.IPv4Address",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "ipaddress.IPv6Address",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "socket.AddressFamily",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_core._eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_core._typedattr.TypedAttributeProvider",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_core._typedattr.TypedAttributeSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_core._typedattr.typed_attribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_streams.ByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_streams.Listener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_streams.UnreliableObjectStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_tasks.TaskGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "typing.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": "_core._sockets.convert_ipv6_sockaddr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "to": ".create_task_group",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "abc.ABCMeta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "_core._exceptions.EndOfStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "_core._typedattr.TypedAttributeProvider",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "_resources.AsyncResource",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "_tasks.TaskGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "typing.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_streams.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_subprocesses.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_subprocesses.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_subprocesses.py",
      "to": "signal.Signals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_subprocesses.py",
      "to": "_resources.AsyncResource",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_subprocesses.py",
      "to": "_streams.ByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_subprocesses.py",
      "to": "_streams.ByteSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "abc.ABCMeta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "collections.abc.Awaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing.Protocol",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing_extensions.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "to": "_core._tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "types",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "abc.ABCMeta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "collections.abc.AsyncGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "collections.abc.Coroutine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\_testing.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_eventloop.AsyncBackend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_resources.AsyncResource",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.ConnectedUDPSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.ConnectedUNIXDatagramSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.IPAddressType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.IPSockAddrType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.SocketAttribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.SocketListener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.SocketStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.UDPPacketType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.UDPSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.UNIXDatagramPacketType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.UNIXDatagramSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_sockets.UNIXSocketStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.AnyByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.AnyByteSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.AnyByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.AnyByteStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.AnyUnreliableByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.AnyUnreliableByteSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.AnyUnreliableByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.ByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.ByteSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.ByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.ByteStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.Listener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.ObjectReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.ObjectSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.ObjectStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.ObjectStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.UnreliableObjectReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.UnreliableObjectSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_streams.UnreliableObjectStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_subprocesses.Process",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_tasks.TaskGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_tasks.TaskStatus",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_testing.TestRunner",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_core._synchronization.CapacityLimiter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_core._synchronization.Condition",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_core._synchronization.Event",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_core._synchronization.Lock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_core._synchronization.Semaphore",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "_core._tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\abc\\__init__.py",
      "to": "from_thread.BlockingPortal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "typing.SupportsIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": ".ClosedResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": ".DelimiterNotFound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": ".EndOfStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": ".IncompleteRead",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "abc.AnyByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "abc.AnyByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "abc.AnyByteStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "abc.ByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "abc.ByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "abc.ByteStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "typing.override",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\buffered.py",
      "to": "typing_extensions.override",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "io.SEEK_SET",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "io.UnsupportedOperation",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "typing.BinaryIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": ".BrokenResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": ".ClosedResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": ".EndOfStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": ".TypedAttributeSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": ".to_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": ".typed_attribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "abc.ByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\file.py",
      "to": "abc.ByteSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "collections.OrderedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "collections.deque",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "typing.NamedTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": ".BrokenResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": ".ClosedResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": ".EndOfStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": ".WouldBlock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "_core._testing.TaskInfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "_core._testing.get_current_task",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "abc.Event",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "abc.ObjectReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "abc.ObjectSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\memory.py",
      "to": "lowlevel.checkpoint",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "collections.abc.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "abc.ByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "abc.ByteSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "abc.ByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "abc.Listener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "abc.ObjectReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "abc.ObjectSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "abc.ObjectStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": "abc.TaskGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\stapled.py",
      "to": ".create_task_group",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "codecs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "dataclasses.InitVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "dataclasses.field",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "abc.AnyByteReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "abc.AnyByteSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "abc.AnyByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "abc.AnyByteStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "abc.ObjectReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "abc.ObjectSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "abc.ObjectStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "abc.ObjectStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "typing.override",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\text.py",
      "to": "typing_extensions.override",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "ssl",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "functools.wraps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "ssl.SSLContext",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": ".BrokenResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": ".EndOfStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": ".aclose_forcefully",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": ".get_cancelled_exc_class",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": ".to_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "_core._typedattr.TypedAttributeSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "_core._typedattr.typed_attribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "abc.AnyByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "abc.AnyByteStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "abc.ByteStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "abc.ByteStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "abc.Listener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "abc.TaskGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing.override",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": "typing_extensions.override",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\streams\\tls.py",
      "to": ".fail_after",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "concurrent.futures",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "contextvars",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "threading",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "weakref",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.AbstractEventLoop",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.CancelledError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.all_tasks",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.create_task",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.current_task",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.get_running_loop",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.sleep",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.base_events._run_until_complete_cb",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.OrderedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.deque",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.abc.AsyncGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.abc.AsyncIterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.abc.Awaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.abc.Collection",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.abc.Coroutine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "collections.abc.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "concurrent.futures.Future",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "contextlib.AbstractContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "contextlib.suppress",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "contextvars.Context",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "contextvars.copy_context",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "functools.partial",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "functools.wraps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "inspect.CORO_RUNNING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "inspect.CORO_SUSPENDED",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "inspect.getcoroutinestate",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "inspect.iscoroutine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "io.IOBase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "queue.Queue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "signal.Signals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "socket.AddressFamily",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "socket.SocketKind",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "threading.Thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "types.CodeType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "weakref.WeakKeyDictionary",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "sniffio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": ".CapacityLimiterStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": ".EventStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": ".LockStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": ".TaskInfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": ".abc",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._eventloop.claim_worker_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._eventloop.threadlocals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._exceptions.BrokenResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._exceptions.BusyResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._exceptions.ClosedResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._exceptions.EndOfStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._exceptions.RunFinishedError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._exceptions.WouldBlock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._exceptions.iterate_exceptions",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._sockets.convert_ipv6_sockaddr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._streams.create_memory_object_stream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._synchronization.CapacityLimiter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._synchronization.Event",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._synchronization.Lock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._synchronization.ResourceGuard",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._synchronization.SemaphoreStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._synchronization.Semaphore",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_core._tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "abc.AsyncBackend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "abc.IPSockAddrType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "abc.SocketListener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "abc.UDPPacketType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "abc.UNIXDatagramPacketType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "abc._eventloop.StrOrBytesPath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "lowlevel.RunVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "streams.memory.MemoryObjectReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "streams.memory.MemoryObjectSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_typeshed.FileDescriptorLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.ParamSpec",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing_extensions.ParamSpec",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.Runner",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "contextvars",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "signal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.coroutines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.events",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.exceptions",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "asyncio.tasks",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "exceptiongroup.BaseExceptionGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "_pytest.outcomes.OutcomeException",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "uvloop",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "uvloop",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "anyio._core._asyncio_selector_thread.get_selector",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "anyio._core._asyncio_selector_thread.get_selector",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "anyio._core._asyncio_selector_thread.get_selector",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "to": "anyio._core._asyncio_selector_thread.get_selector",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "types",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "weakref",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "collections.abc.AsyncGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "collections.abc.AsyncIterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "collections.abc.Awaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "collections.abc.Collection",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "collections.abc.Coroutine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "collections.abc.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "concurrent.futures.Future",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "contextlib.AbstractContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "functools.partial",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "io.IOBase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "signal.Signals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "socket.AddressFamily",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "socket.SocketKind",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.NoReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.from_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.lowlevel",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "outcome.Error",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "outcome.Outcome",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "outcome.Value",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.lowlevel.current_root_task",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.lowlevel.current_task",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.lowlevel.notify_closing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.lowlevel.wait_readable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.lowlevel.wait_writable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.socket.SocketType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.to_thread.run_sync",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": ".CapacityLimiterStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": ".EventStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": ".LockStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": ".RunFinishedError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": ".TaskInfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": ".WouldBlock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": ".abc",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._eventloop.claim_worker_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._exceptions.BrokenResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._exceptions.BusyResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._exceptions.ClosedResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._exceptions.EndOfStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._sockets.convert_ipv6_sockaddr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._streams.create_memory_object_stream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._synchronization.CapacityLimiter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._synchronization.Event",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._synchronization.Lock",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._synchronization.ResourceGuard",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._synchronization.SemaphoreStatistics",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._synchronization.Semaphore",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_core._tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "abc.IPSockAddrType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "abc.UDPPacketType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "abc.UNIXDatagramPacketType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "abc._eventloop.AsyncBackend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "abc._eventloop.StrOrBytesPath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "streams.memory.MemoryObjectSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "_typeshed.FileDescriptorLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.ParamSpec",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing_extensions.ParamSpec",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "exceptiongroup.BaseExceptionGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "queue.Queue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "to": "trio.testing.wait_all_tasks_blocked",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "asyncio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "threading",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "selectors.EVENT_READ",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "selectors.EVENT_WRITE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "selectors.DefaultSelector",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "to": "_typeshed.FileDescriptorLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "contextlib.AbstractAsyncContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "contextlib.AbstractContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "inspect.isasyncgen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "inspect.iscoroutine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "inspect.isgenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "typing.Protocol",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "to": "typing.final",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "threading",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "collections.abc.Awaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "collections.abc.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "contextlib.contextmanager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "importlib.import_module",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "sniffio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "typing.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "typing.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "typing_extensions.TypeVarTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "typing_extensions.Unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "abc.AsyncBackend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "to": "lowlevel.EventLoopToken",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_exceptions.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_exceptions.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_exceptions.py",
      "to": "collections.abc.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_exceptions.py",
      "to": "textwrap.dedent",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_exceptions.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_exceptions.py",
      "to": "exceptiongroup.BaseExceptionGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "pathlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "collections.abc.AsyncIterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "collections.abc.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "collections.abc.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "functools.partial",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "typing.AnyStr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "typing.ClassVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "typing.Final",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": ".to_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "abc.AsyncResource",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "types.ModuleType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "_typeshed.OpenBinaryMode",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "_typeshed.OpenTextMode",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "_typeshed.ReadableBuffer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "to": "_typeshed.WriteableBuffer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_resources.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_resources.py",
      "to": "abc.AsyncResource",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_resources.py",
      "to": "_tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_signals.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_signals.py",
      "to": "collections.abc.AsyncIterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_signals.py",
      "to": "contextlib.AbstractContextManager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_signals.py",
      "to": "signal.Signals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_signals.py",
      "to": "_eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "errno",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "socket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "ssl",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "stat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "collections.abc.Awaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "ipaddress.IPv4Address",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "ipaddress.IPv6Address",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "ipaddress.ip_address",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "os.chmod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "socket.AddressFamily",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "socket.SocketKind",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "typing.Literal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": ".ConnectionFailed",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": ".to_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.ByteStreamConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.ConnectedUDPSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.ConnectedUNIXDatagramSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.IPAddressType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.IPSockAddrType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.SocketListener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.SocketStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.UDPSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.UNIXDatagramSocket",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "abc.UNIXSocketStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "streams.stapled.MultiListener",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "streams.tls.TLSConnectable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "streams.tls.TLSStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "_eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "_resources.aclose_forcefully",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "_synchronization.Event",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "_tasks.create_task_group",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "_tasks.move_on_after",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "_typeshed.FileDescriptorLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "exceptiongroup.ExceptionGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "typing.override",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "typing_extensions.override",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "typing_extensions.deprecated",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "warnings.deprecated",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "to": "idna",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_streams.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_streams.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_streams.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_streams.py",
      "to": "warnings.warn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_streams.py",
      "to": "streams.memory.MemoryObjectReceiveStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_streams.py",
      "to": "streams.memory.MemoryObjectSendStream",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_streams.py",
      "to": "streams.memory.MemoryObjectStreamState",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "collections.abc.AsyncIterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "collections.abc.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "subprocess.PIPE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "subprocess.CalledProcessError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "subprocess.CompletedProcess",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "abc.Process",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "_eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "_tasks.create_task_group",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "typing.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "collections.deque",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "sniffio.AsyncLibraryNotFoundError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "lowlevel.checkpoint_if_cancelled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "_eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "_exceptions.BusyResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "_tasks.CancelScope",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "_testing.TaskInfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "to": "_testing.get_current_task",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "to": "collections.abc.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "to": "contextlib.contextmanager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "to": "abc._tasks.TaskGroup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "to": "abc._tasks.TaskStatus",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "to": "_eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "tempfile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "io.TextIOWrapper",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "types.TracebackType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "typing.AnyStr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": ".to_thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "_core._fileio.AsyncFile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "lowlevel.checkpoint_if_cancelled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "_typeshed.OpenBinaryMode",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "_typeshed.OpenTextMode",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "_typeshed.ReadableBuffer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "to": "_typeshed.WriteableBuffer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_testing.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_testing.py",
      "to": "collections.abc.Awaitable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_testing.py",
      "to": "collections.abc.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_testing.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_testing.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_testing.py",
      "to": "_eventloop.get_async_backend",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "to": "typing.final",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "to": "_exceptions.TypedAttributeLookupError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "types.ModuleType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "typing.MutableSequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "bs4._typing._NamespaceMapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "soupsieve.SoupSieve",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "bs4.element",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "bs4.element.ResultSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "bs4.element.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "soupsieve",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\css.py",
      "to": "bs4.ResultSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "html.entities.codepoint2name",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "codecs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "html.entities.html5",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "logging.Logger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "logging.getLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "types.ModuleType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.Pattern",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.Set",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "typing_extensions.Literal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "bs4._typing._Encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "bs4._typing._Encodings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "cchardet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "chardet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\dammit.py",
      "to": "charset_normalizer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "cProfile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "html.parser.HTMLParser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "bs4",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "bs4.__version__",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "bs4.builder.builder_registry",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "pstats",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "random",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "tempfile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "traceback",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "bs4._typing._IncomingMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "lxml.etree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "lxml.etree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "html5lib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "lxml.etree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\diagnose.py",
      "to": "html5lib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.css.CSS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._deprecation._deprecated",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._deprecation._deprecated_alias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._deprecation._deprecated_function_alias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.formatter.Formatter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.formatter.HTMLFormatter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.formatter.XMLFormatter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._warnings.AttributeResemblesVariableWarning",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.MutableSequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Pattern",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Set",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing_extensions.Self",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.filter.SoupStrainer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.builder.TreeBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.filter.ElementFilter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.formatter._EntitySubstitutionFunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.formatter._FormatterOrName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._AtMostOneElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._AtMostOneTag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._AtMostOneNavigableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._AttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._AttributeValues",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._Encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._InsertableElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._OneElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._QueryResults",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._RawOrProcessedAttributeValues",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._StrainableElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._StrainableAttribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._StrainableAttributes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._StrainableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._SomeNavigableStrings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4._typing._SomeTags",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.filter.ElementFilter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\element.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\exceptions.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._deprecation._deprecated",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4.element.AttributeDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4.element.NavigableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4.element.PageElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4.element.ResultSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4.element.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._AtMostOneElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._AttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._NullableStringMatchFunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._OneElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._PageElementMatchFunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._QueryResults",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._RawAttributeValues",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._RegularExpressionProtocol",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._StrainableAttribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._StrainableElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._StrainableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._StringMatchFunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\filter.py",
      "to": "bs4._typing._TagMatchFunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing.Set",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "bs4.dammit.EntitySubstitution",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "bs4._typing._AttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\formatter.py",
      "to": "element.NavigableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_deprecation.py",
      "to": "functools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_deprecation.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_deprecation.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_deprecation.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing_extensions.runtime_checkable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing_extensions.Protocol",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.Pattern",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "bs4.element.AttributeValueList",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "bs4.element.NamespacedAttribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "bs4.element.NavigableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "bs4.element.PageElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "bs4.element.ResultSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\_typing.py",
      "to": "bs4.element.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "collections.Counter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "builder.builder_registry",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "builder.TreeBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "builder._htmlparser.HTMLParserTreeBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "dammit.UnicodeDammit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "css.CSS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "_deprecation._deprecated",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.CData",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.Comment",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.DEFAULT_OUTPUT_ENCODING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.Declaration",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.Doctype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.NavigableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.PageElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.ProcessingInstruction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.PYTHON_SPECIFIC_ENCODINGS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.ResultSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.Script",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.Stylesheet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "element.TemplateString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "formatter.Formatter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "filter.ElementFilter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "filter.SoupStrainer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Counter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Sized",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._typing._Encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._typing._Encodings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._typing._IncomingMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._typing._InsertableElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._typing._RawAttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._typing._RawAttributeValues",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._typing._RawMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4.exceptions.FeatureNotFound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4.exceptions.ParserRejectedMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4.exceptions.StopParsing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._warnings.AttributeResemblesVariableWarning",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._warnings.GuessedAtParserWarning",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._warnings.MarkupResemblesLocatorWarning",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._warnings.UnusualUsageWarning",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "bs4._warnings.XMLParsedAsHTMLWarning",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4._typing._AttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4._typing._AttributeValues",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4._typing._Encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4._typing._Encodings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4._typing._NamespaceURL",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4._typing._RawMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.builder.DetectsXMLParsedAsHTML",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.builder.PERMISSIVE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.builder.HTML",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.builder.HTML_5",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.builder.HTMLTreeBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.element.NamespacedAttribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.element.PageElement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.element.nonwhitespace_re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "html5lib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "html5lib.constants.namespaces",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.element.Comment",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.element.Doctype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.element.NavigableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.element.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "html5lib.treebuilders.base",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_html5lib.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "html.parser.HTMLParser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.element.AttributeDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.element.CData",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.element.Comment",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.element.Declaration",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.element.Doctype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.element.ProcessingInstruction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.dammit.EntitySubstitution",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.dammit.UnicodeDammit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.builder.DetectsXMLParsedAsHTML",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.builder.HTML",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.builder.HTMLTreeBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.builder.STRICT",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.exceptions.ParserRejectedMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4.element.NavigableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4._typing._Encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4._typing._Encodings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_htmlparser.py",
      "to": "bs4._typing._RawMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.Set",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "io.StringIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "typing_extensions.TypeAlias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "lxml.etree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.element.AttributeDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.element.XMLAttributeDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.element.Comment",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.element.Doctype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.element.NamespacedAttribute",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.element.ProcessingInstruction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.element.XMLProcessingInstruction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.builder.DetectsXMLParsedAsHTML",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.builder.FAST",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.builder.HTML",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.builder.HTMLTreeBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.builder.PERMISSIVE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.builder.TreeBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.builder.XML",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.dammit.EncodingDetector",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.exceptions.ParserRejectedMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4._typing._Encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4._typing._Encodings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4._typing._NamespacePrefix",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4._typing._NamespaceURL",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4._typing._NamespaceMapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4._typing._InvertedNamespaceMapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4._typing._RawMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\_lxml.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "types.ModuleType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.Pattern",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.Set",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.AttributeDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.AttributeValueList",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.CharsetMetaAttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.ContentMetaAttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.RubyParenthesisString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.RubyTextString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.Stylesheet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.Script",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.TemplateString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.nonwhitespace_re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.exceptions.ParserRejectedMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4._typing._AttributeValues",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4._typing._RawAttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4._warnings.XMLParsedAsHTMLWarning",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "._htmlparser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.BeautifulSoup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.NavigableString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4.element.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4._typing._AttributeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4._typing._Encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4._typing._Encodings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4._typing._RawOrProcessedAttributeValues",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "bs4._typing._RawMarkup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "._html5lib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\bs4\\builder\\__init__.py",
      "to": "._lxml",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\core.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\core.py",
      "to": "atexit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\core.py",
      "to": "importlib.resources.as_file",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\core.py",
      "to": "importlib.resources.files",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\core.py",
      "to": "importlib.resources.path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\core.py",
      "to": "importlib.resources.read_text",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\__init__.py",
      "to": "core.contents",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\__init__.py",
      "to": "core.where",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\__main__.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\__main__.py",
      "to": "certifi.contents",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\certifi\\__main__.py",
      "to": "certifi.where",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "typing.BinaryIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "cd.coherence_ratio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "cd.encoding_languages",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "cd.mb_encoding_languages",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "cd.merge_coherence_ratios",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "constant.IANA_SUPPORTED",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "constant.TOO_BIG_SEQUENCE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "constant.TOO_SMALL_SEQUENCE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "constant.TRACE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "md.mess_ratio",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "models.CharsetMatch",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "models.CharsetMatches",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "utils.any_specified_encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "utils.cut_sequence_chunks",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "utils.iana_name",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "utils.identify_sig_or_bom",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "utils.is_cp_similar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "utils.is_multi_byte_encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\api.py",
      "to": "utils.should_strip_sig_or_bom",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "importlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "codecs.IncrementalDecoder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "collections.Counter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "functools.lru_cache",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "typing.Counter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "constant.FREQUENCIES",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "constant.KO_NAMES",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "constant.LANGUAGE_SUPPORTED_COUNT",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "constant.TOO_SMALL_SEQUENCE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "constant.ZH_NAMES",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "md.is_suspiciously_successive_range",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "models.CoherenceMatches",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "utils.is_accentuated",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "utils.is_latin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "utils.is_multi_byte_encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "utils.is_unicode_range_secondary",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cd.py",
      "to": "utils.unicode_range",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "codecs.BOM_UTF8",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "codecs.BOM_UTF16_BE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "codecs.BOM_UTF16_LE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "codecs.BOM_UTF32_BE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "codecs.BOM_UTF32_LE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "encodings.aliases.aliases",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "re.IGNORECASE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\constant.py",
      "to": "re.compile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
      "to": "warnings.warn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
      "to": "api.from_bytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
      "to": "constant.CHARDET_CORRESPONDENCE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
      "to": "constant.TOO_SMALL_SEQUENCE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\legacy.py",
      "to": "typing_extensions.TypedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "functools.lru_cache",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "logging.getLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "constant.COMMON_SAFE_ASCII_CHARACTERS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "constant.TRACE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "constant.UNICODE_SECONDARY_RANGE_KEYWORD",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_accentuated",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_arabic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_arabic_isolated_form",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_case_variable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_cjk",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_emoticon",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_hangul",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_hiragana",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_katakana",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_latin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_punctuation",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_separator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_symbol",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_thai",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_unprintable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.remove_accent",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.unicode_range",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\md.py",
      "to": "utils.is_cjk_uncommon",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "encodings.aliases.aliases",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "hashlib.sha256",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "json.dumps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "re.sub",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "constant.RE_POSSIBLE_ENCODING_INDICATION",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "constant.TOO_BIG_SEQUENCE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "utils.iana_name",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "utils.is_multi_byte_encoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "utils.unicode_range",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "charset_normalizer.cd.encoding_languages",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\models.py",
      "to": "charset_normalizer.cd.mb_encoding_languages",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "importlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "unicodedata",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "codecs.IncrementalDecoder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "encodings.aliases.aliases",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "functools.lru_cache",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "re.findall",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "typing.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "_multibytecodec.MultibyteIncrementalDecoder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "constant.ENCODING_MARKS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "constant.IANA_SUPPORTED_SIMILAR",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "constant.RE_POSSIBLE_ENCODING_INDICATION",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "constant.UNICODE_RANGES_COMBINED",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "constant.UNICODE_SECONDARY_RANGE_KEYWORD",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "constant.UTF8_MAXIMAL_ALLOCATION",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\utils.py",
      "to": "constant.COMMON_CJK_CHARACTERS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\version.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "api.from_bytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "api.from_fp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "api.from_path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "api.is_binary",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "legacy.detect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "models.CharsetMatch",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "models.CharsetMatches",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "utils.set_logging_handler",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "version.VERSION",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__init__.py",
      "to": "version.__version__",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__main__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\__main__.py",
      "to": "cli.cli_detect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__init__.py",
      "to": "__main__.cli_detect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__init__.py",
      "to": "__main__.query_yes_no",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "json.dumps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "os.path.abspath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "os.path.basename",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "os.path.dirname",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "os.path.join",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "os.path.realpath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "platform.python_version",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "unicodedata.unidata_version",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "charset_normalizer.md",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "charset_normalizer.from_fp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "charset_normalizer.models.CliDetectionResult",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "to": "charset_normalizer.version.__version__",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "itertools.chain",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "itertools.pairwise",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.typecheck.check_code_array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.typecheck.check_offset_array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.typecheck.check_point_array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.types.CLOSEPOLY",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.types.LINETO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.types.MOVETO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.types.code_dtype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.types.offset_dtype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy.types.point_dtype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\array.py",
      "to": "contourpy._contourpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\chunk.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\chunk.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "itertools.pairwise",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy._contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy._contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy.array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy.enum_util.as_fill_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy.enum_util.as_line_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy.typecheck.check_filled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy.typecheck.check_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy.types.MOVETO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy.types.offset_dtype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\convert.py",
      "to": "contourpy._contourpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy._contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy._contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy.array.concat_codes_or_none",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy.array.concat_offsets_or_none",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy.array.concat_points_or_none",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy.array.concat_points_or_none_with_nan",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy.enum_util.as_fill_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy.enum_util.as_line_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy.typecheck.check_filled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy.typecheck.check_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\dechunk.py",
      "to": "contourpy._contourpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\enum_util.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\enum_util.py",
      "to": "contourpy._contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\enum_util.py",
      "to": "contourpy._contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\enum_util.py",
      "to": "contourpy._contourpy.ZInterp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy.enum_util.as_fill_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy.enum_util.as_line_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy.types.MOVETO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy.types.code_dtype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy.types.offset_dtype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy.types.point_dtype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\typecheck.py",
      "to": "contourpy._contourpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\types.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\types.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.ContourGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.Mpl2005ContourGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.Mpl2014ContourGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.SerialContourGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.ThreadedContourGenerator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.ZInterp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._contourpy.max_threads",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy._version.__version__",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.chunk.calc_chunk_sizes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.convert.convert_filled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.convert.convert_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.convert.convert_multi_filled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.convert.convert_multi_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.dechunk.dechunk_filled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.dechunk.dechunk_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.dechunk.dechunk_multi_filled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.dechunk.dechunk_multi_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.enum_util.as_fill_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.enum_util.as_line_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "contourpy.enum_util.as_z_interp",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "numpy.typing.ArrayLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "_contourpy.CoordinateArray",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\__init__.py",
      "to": "_contourpy.MaskArray",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.io.export_png",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.io.export_svg",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.io.show",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.io.export.get_screenshot_as_png",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.layouts.gridplot",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.models.annotations.labels.Label",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.palettes.Category10",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.plotting.figure",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy.enum_util.as_fill_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy.enum_util.as_line_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy.util.bokeh_util.filled_to_bokeh",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy.util.bokeh_util.lines_to_bokeh",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy.util.renderer.Renderer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.core.enums.OutputBackendType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.models.GridPlot",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "bokeh.palettes.Palette",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "numpy.typing.ArrayLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "selenium.webdriver.remote.webdriver.WebDriver",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy._contourpy.FillReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_renderer.py",
      "to": "contourpy._contourpy.LineReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy.array.offsets_from_codes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy.convert.convert_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy.dechunk.dechunk_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy._contourpy.CoordinateArray",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy._contourpy.FillReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy._contourpy.LineReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\bokeh_util.py",
      "to": "contourpy._contourpy.LineReturn_ChunkCombinedNan",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\data.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\data.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\data.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\data.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\data.py",
      "to": "contourpy._contourpy.CoordinateArray",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "itertools.pairwise",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "matplotlib.collections",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "matplotlib.pyplot",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.convert.convert_filled",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.convert.convert_lines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.enum_util.as_fill_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.enum_util.as_line_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.util.mpl_util.filled_to_mpl_paths",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.util.mpl_util.lines_to_mpl_paths",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy.util.renderer.Renderer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "collections.abc.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "matplotlib.axes.Axes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "matplotlib.figure.Figure",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "numpy.typing.ArrayLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "contourpy._contourpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_renderer.py",
      "to": "matplotlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "itertools.pairwise",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "matplotlib.path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "contourpy.array.codes_from_offsets",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "contourpy._contourpy.FillReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "contourpy._contourpy.LineReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\mpl_util.py",
      "to": "contourpy._contourpy.LineReturn_Separate",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "abc.ABC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "numpy.typing.ArrayLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "contourpy._contourpy.CoordinateArray",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "contourpy._contourpy.FillReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "contourpy._contourpy.FillType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "contourpy._contourpy.LineReturn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\renderer.py",
      "to": "contourpy._contourpy.LineType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\_build_config.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\contourpy\\util\\__init__.py",
      "to": "contourpy.util._build_config.build_config",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "collections.abc.Hashable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "collections.abc.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "copy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "functools.reduce",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "itertools.product",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "itertools.cycle",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "operator.mul",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "operator.add",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.Generic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.overload",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\cycler\\__init__.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\easter.py",
      "to": "datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\relativedelta.py",
      "to": "datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\relativedelta.py",
      "to": "calendar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\relativedelta.py",
      "to": "operator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\relativedelta.py",
      "to": "math.copysign",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\relativedelta.py",
      "to": "six.integer_types",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\relativedelta.py",
      "to": "warnings.warn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\relativedelta.py",
      "to": "_common.weekday",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "calendar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "heapq",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "functools.wraps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "warnings.warn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "six.advance_iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "six.integer_types",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "six.moves._thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "six.moves.range",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "_common.weekday",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "math.gcd",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "fractions.gcd",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "dateutil.parser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "dateutil.parser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "dateutil.easter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": ".tz",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\rrule.py",
      "to": "dateutil.parser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tzwin.py",
      "to": "tz.win.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\utils.py",
      "to": "__future__.unicode_literals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\utils.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\utils.py",
      "to": "datetime.time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\__init__.py",
      "to": "_version.version",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\__init__.py",
      "to": "importlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "datetime.time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "datetime.date",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "calendar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "dateutil.tz",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "functools.wraps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "to": "six",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "__future__.unicode_literals",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "string",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "calendar.monthrange",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "io.StringIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "six",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "six.integer_types",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "six.text_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "decimal.Decimal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": "warnings.warn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": ".relativedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "to": ".tz",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser.parse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser.parser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser.parserinfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser.ParserError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser.DEFAULTPARSER",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser.DEFAULTTZPARSER",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser.UnknownTimezoneWarning",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser.__doc__",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "isoparser.isoparser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "isoparser.isoparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser._timelex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser._resultbase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser._tzparser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "_parser._parsetz",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "functools.wraps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "bisect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "weakref",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "collections.OrderedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "six",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "six.string_types",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "six.moves._thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "_common.tzname_in_python2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "_common._tzinfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "_common.tzrangebase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "_common.enfold",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "_common._validate_fromutc_inputs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "_factories._TzSingleton",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "_factories._TzOffsetFactory",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "_factories._TzStrFactory",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "warnings.warn",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "win.tzwin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "win.tzwinlocal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "contextlib.nullcontext",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "dateutil.relativedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "dateutil.parser._parser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "dateutil.relativedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "dateutil.rrule",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\tz.py",
      "to": "dateutil.zoneinfo.get_zonefile_instance",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\win.py",
      "to": "datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\win.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\win.py",
      "to": "six.moves.winreg",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\win.py",
      "to": "six.text_type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\win.py",
      "to": "_common.tzrangebase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\win.py",
      "to": "ctypes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\win.py",
      "to": "ctypes.wintypes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_common.py",
      "to": "six.PY2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_common.py",
      "to": "functools.wraps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_common.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_common.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_common.py",
      "to": "datetime.tzinfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_factories.py",
      "to": "datetime.timedelta",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_factories.py",
      "to": "weakref",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_factories.py",
      "to": "collections.OrderedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\_factories.py",
      "to": "six.moves._thread",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\__init__.py",
      "to": "tz.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\tz\\__init__.py",
      "to": "tz.__doc__",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "tempfile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "shutil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "subprocess.check_call",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "subprocess.check_output",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "tarfile.TarFile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "dateutil.zoneinfo.METADATA_FN",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "to": "dateutil.zoneinfo.ZONEFILENAME",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
      "to": "json",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
      "to": "tarfile.TarFile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
      "to": "pkgutil.get_data",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
      "to": "dateutil.tz.tzfile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\afmLib.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\afmLib.py",
      "to": "EasyDialogs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\afmLib.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\agl.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\agl.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\agl.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "typing.TYPE_CHECKING",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "collections.abc.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "fontTools.misc.filesystem._base.FS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "xml.etree.ElementTree.Element",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "fontTools.ufoLib.UFOFormatVersion",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "fontTools.ufoLib.glifLib.GLIFFormatVersion",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\annotations.py",
      "to": "lxml.etree._Element",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "ttLib.newTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "ttLib.tables._c_m_a_p.cmap_classes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "ttLib.tables._g_l_y_f.flagCubic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "ttLib.tables.O_S_2f_2.Panose",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "misc.timeTools.timestampNow",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "collections.OrderedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "ttLib.tables._f_v_a_r.Axis",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "ttLib.tables._f_v_a_r.NamedInstance",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.CFFFontSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.TopDictIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.TopDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.CharStrings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.GlobalSubrsIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.PrivateDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.CFFFontSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.TopDictIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.TopDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.CharStrings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.GlobalSubrsIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.PrivateDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.FDArrayIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.FontDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "varLib.builder.buildVarRegionList",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "varLib.builder.buildVarData",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "varLib.builder.buildVarStore",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "cffLib.VarStoreData",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "varLib._add_avar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "feaLib.builder.addOpenTypeFeaturesFromString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "varLib.featureVars",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "fontTools.colorLib.builder.buildCOLR",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "fontTools.colorLib.builder.buildCPAL",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
      "to": "otlLib.builder.buildStatTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\help.py",
      "to": "pkgutil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\help.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\help.py",
      "to": "fontTools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\help.py",
      "to": "importlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\help.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\help.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\tfmLib.py",
      "to": "types.SimpleNamespace",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\tfmLib.py",
      "to": "fontTools.misc.sstruct.calcsize",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\tfmLib.py",
      "to": "fontTools.misc.sstruct.unpack",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\tfmLib.py",
      "to": "fontTools.misc.sstruct.unpack2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\tfmLib.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.ttLib.OPTIMIZE_FONT_SPEED",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.ttLib.TTLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.misc.macCreatorType.getMacCreatorAndType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.unicode.setUnicodeData",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.misc.textTools.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.misc.timeTools.timestampSinceEpoch",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.misc.loggingTools.Timer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.misc.cliTools.makeOutputFileName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "getopt",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.ttLib.sfnt",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.ttLib.sfnt.calcChecksum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttx.py",
      "to": "fontTools.version",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicode.py",
      "to": "unicodedata2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\unicode.py",
      "to": "unicodedata",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\__init__.py",
      "to": "fontTools.misc.loggingTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\__main__.py",
      "to": "runpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.ttLib.newTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.misc.cliTools.makeOutputFileName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.misc.psCharStrings.T2StackUseExtractor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.cffLib.TopDictIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.cffLib.buildOrder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.cffLib.buildDefaults",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.cffLib.topDictOperators",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.cffLib.privateDictOperators",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.cffLib.FDSelect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "transforms.desubroutinizeCharString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "specializer.specializeProgram",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "width.optimizeWidths",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "fontTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFF2ToCFF.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.ttLib.newTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.misc.cliTools.makeOutputFileName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.misc.psCharStrings.T2WidthExtractor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.cffLib.TopDictIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.cffLib.FDArrayIndex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.cffLib.FontDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.cffLib.buildOrder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.cffLib.topDictOperators",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.cffLib.privateDictOperators",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.cffLib.topDictOperators2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.cffLib.privateDictOperators2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "fontTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\CFFToCFF2.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py",
      "to": "fontTools.cffLib.maxStackLimit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\specializer.py",
      "to": "fontTools.misc.cliTools.makeOutputFileName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\transforms.py",
      "to": "fontTools.misc.psCharStrings.SimpleT2Decompiler",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\transforms.py",
      "to": "fontTools.misc.psCharStrings.T2WidthExtractor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\transforms.py",
      "to": "fontTools.misc.psCharStrings.calcSubrBias",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
      "to": "operator.add",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
      "to": "functools.reduce",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.sstruct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.psCharStrings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.arrayTools.unionRect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.arrayTools.intRect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.textTools.bytechr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.textTools.byteord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.textTools.bytesjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.misc.textTools.safeEval",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.ttLib.tables.otBase.OTTableWriter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.ttLib.tables.otBase.OTTableReader",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "CFFToCFF2._convertCFFToCFF2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "CFF2ToCFF._convertCFF2ToCFF",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "transforms.desubroutinize",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "transforms.remove_hints",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "transforms.remove_unused_subroutines",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cffLib\\__init__.py",
      "to": "array.array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "collections",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "copy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "functools.partial",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "math.ceil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "math.log",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Generator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.TypeVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.misc.arrayTools.intRect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.misc.fixedTools.fixedToFloat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.misc.treeTools.build_n_ary_tree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.ttLib.tables.C_O_L_R_",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.ttLib.tables.C_P_A_L_",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.ttLib.tables._n_a_m_e",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.ttLib.tables.otTables.ExtendMode",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "fontTools.ttLib.tables.otTables.CompositeMode",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "errors.ColorLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "geometry.round_start_circle_stable_containment",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "table_builder.BuildCallback",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
      "to": "table_builder.TableBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\geometry.py",
      "to": "math.copysign",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\geometry.py",
      "to": "math.cos",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\geometry.py",
      "to": "math.hypot",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\geometry.py",
      "to": "math.isclose",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\geometry.py",
      "to": "math.pi",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\geometry.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "collections",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otBase.BaseTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otBase.FormatSwitchingBaseTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otBase.UInt8FormatSwitchingBaseTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.ComputedInt",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.SimpleValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.Struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.Short",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.UInt8",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.UShort",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.IntValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.FloatValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.ttLib.tables.otConverters.OptionalValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\table_builder.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\unbuilder.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\unbuilder.py",
      "to": "table_builder.TableUnbuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\unbuilder.py",
      "to": "pprint.pprint",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\unbuilder.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\colorLib\\unbuilder.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\config\\__init__.py",
      "to": "textwrap.dedent",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\config\\__init__.py",
      "to": "fontTools.misc.configTools.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\benchmark.py",
      "to": "cu2qu.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\benchmark.py",
      "to": "random",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\benchmark.py",
      "to": "timeit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "shutil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "multiprocessing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "contextlib.closing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "functools.partial",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "fontTools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "ufo.font_to_quadratic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "ufo.fonts_to_quadratic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "ufoLib2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cli.py",
      "to": "defcon",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cu2qu.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cu2qu.py",
      "to": "errors.Error",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cu2qu.py",
      "to": "errors.ApproxNotFoundError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cu2qu.py",
      "to": "cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\cu2qu.py",
      "to": "fontTools.misc.cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "fontTools.pens.basePen.AbstractPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "fontTools.pens.pointPen.PointToSegmentPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "fontTools.pens.reverseContourPen.ReverseContourPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": ".curves_to_quadratic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "errors.UnequalZipLengthsError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "errors.IncompatibleSegmentNumberError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "errors.IncompatibleSegmentTypesError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "errors.IncompatibleGlyphsError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\ufo.py",
      "to": "errors.IncompatibleFontsError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\__init__.py",
      "to": "cu2qu.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\cu2qu\\__main__.py",
      "to": "cli._main",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.AxisDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.AxisMappingDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.DesignSpaceDocument",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.DiscreteAxisDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.InstanceDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.RuleDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.SimpleLocationDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.SourceDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.VariableFontDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.statNames.StatNames",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.statNames.getStatNames",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.types.ConditionSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.types.Range",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.types.Region",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.types.getVFUserRegion",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.types.locationInRegion",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.types.regionInRegion",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\split.py",
      "to": "fontTools.designspaceLib.types.userRegionToDesignRegion",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "typing.Literal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "fontTools.designspaceLib.AxisDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "fontTools.designspaceLib.AxisLabelDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "fontTools.designspaceLib.DesignSpaceDocument",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "fontTools.designspaceLib.DiscreteAxisDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "fontTools.designspaceLib.SimpleLocationDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
      "to": "fontTools.designspaceLib.SourceDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "fontTools.designspaceLib.AxisDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "fontTools.designspaceLib.DesignSpaceDocument",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "fontTools.designspaceLib.DesignSpaceDocumentError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "fontTools.designspaceLib.RangeAxisSubsetDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "fontTools.designspaceLib.SimpleLocationDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "fontTools.designspaceLib.ValueAxisSubsetDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\types.py",
      "to": "fontTools.designspaceLib.VariableFontDescriptor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "collections",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "copy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "posixpath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "io.StringIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "textwrap.indent",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "typing.MutableMapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "typing.cast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "fontTools.misc.etree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "fontTools.misc.plistlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "fontTools.misc.loggingTools.LogMixin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "argparse.ArgumentParser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "fontTools.varLib.models.piecewiseLinearMap",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "fontTools.varLib.models.piecewiseLinearMap",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "fontTools.varLib.models.normalizeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\__main__.py",
      "to": "fontTools.designspaceLib.main",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\encodings\\codecs.py",
      "to": "codecs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\encodings\\codecs.py",
      "to": "encodings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
      "to": "weakref",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
      "to": "fontTools.feaLib.error.FeatureLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
      "to": "fontTools.feaLib.location.FeatureLibLocation",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
      "to": "fontTools.misc.encodingTools.getEncoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
      "to": "fontTools.misc.textTools.byteord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
      "to": "collections.OrderedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\ast.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.misc.sstruct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.misc.textTools.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.misc.textTools.binary2num",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.misc.textTools.safeEval",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.feaLib.error.FeatureLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.feaLib.lookupDebugInfo.LookupDebugInfo",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_INFO_KEY",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_ENV_VAR",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.feaLib.parser.Parser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.feaLib.ast.FeatureFile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.feaLib.variableScalar.VariableScalar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.maxContextCalc.maxCtxFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.ttLib.newTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.ttLib.getTableModule",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.ttLib.tables.otBase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.AlternateSubstBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.ChainContextPosBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.ChainContextSubstBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.LigatureSubstBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.MultipleSubstBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.CursivePosBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.MarkBasePosBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.MarkLigPosBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.MarkMarkPosBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.ReverseChainSingleSubstBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.SingleSubstBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.ClassPairPosSubtableBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.PairPosBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.SinglePosBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.ChainContextualRule",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.builder.AnySubstBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.otlLib.error.OpenTypeLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.varLib.errors.VarLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.varLib.varStore.OnlineVarStoreBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.varLib.builder.buildVarDevTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.varLib.featureVars.addFeatureVariationsRaw",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.varLib.models.normalizeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "fontTools.varLib.models.piecewiseLinearMap",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "copy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "io.StringIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lexer.py",
      "to": "fontTools.feaLib.error.FeatureLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lexer.py",
      "to": "fontTools.feaLib.error.IncludedFeaNotFound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lexer.py",
      "to": "fontTools.feaLib.location.FeatureLibLocation",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lexer.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lexer.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lexer.py",
      "to": "cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lexer.py",
      "to": "fontTools.misc.cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\location.py",
      "to": "typing.NamedTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\lookupDebugInfo.py",
      "to": "typing.NamedTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.feaLib.error.FeatureLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.feaLib.lexer.Lexer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.feaLib.lexer.IncludingLexer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.feaLib.lexer.NonIncludingLexer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.feaLib.variableScalar.VariableScalar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.misc.encodingTools.getEncoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.misc.textTools.bytechr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.feaLib.ast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
      "to": "fontTools.misc.loggingTools.deprecateArgument",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\variableScalar.py",
      "to": "fontTools.varLib.models.VariationModel",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\variableScalar.py",
      "to": "fontTools.varLib.models.normalizeValue",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\variableScalar.py",
      "to": "fontTools.varLib.models.piecewiseLinearMap",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "fontTools.feaLib.builder.addOpenTypeFeatures",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "fontTools.feaLib.builder.Builder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "fontTools.feaLib.error.FeatureLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "fontTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "fontTools.misc.cliTools.makeOutputFileName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\feaLib\\__main__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\base.py",
      "to": "fontTools.ttLib.tables.DefaultTable.DefaultTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\base.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\cmap.py",
      "to": "fontTools.merge.unicode.is_Default_Ignorable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\cmap.py",
      "to": "fontTools.pens.recordingPen.DecomposingRecordingPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\cmap.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
      "to": "fontTools.ttLib.tables.DefaultTable.DefaultTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
      "to": "fontTools.merge.base.add_method",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
      "to": "fontTools.merge.base.mergeObjects",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
      "to": "fontTools.merge.util.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\layout.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "fontTools.cffLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "fontTools.misc.psCharStrings.T2WidthExtractor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "fontTools.ttLib.tables.DefaultTable.DefaultTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "fontTools.merge.base.add_method",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "fontTools.merge.base.mergeObjects",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "fontTools.merge.cmap.computeMegaCmap",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "fontTools.merge.util.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\tables.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\util.py",
      "to": "fontTools.misc.timeTools.timestampNow",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\util.py",
      "to": "fontTools.ttLib.tables.DefaultTable.DefaultTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\util.py",
      "to": "functools.reduce",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\util.py",
      "to": "operator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\util.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.merge.base",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.merge.cmap.computeMegaGlyphOrder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.merge.cmap.computeMegaCmap",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.merge.cmap.renameCFFCharStrings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.merge.layout.layoutPreMerge",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.merge.layout.layoutPostMerge",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.merge.options.Options",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.merge.tables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.misc.loggingTools.Timer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "functools.reduce",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__init__.py",
      "to": "fontTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\merge\\__main__.py",
      "to": "fontTools.merge.main",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\arrayTools.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\arrayTools.py",
      "to": "fontTools.misc.vector.Vector",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\arrayTools.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\arrayTools.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\arrayTools.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\arrayTools.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "fontTools.misc.arrayTools.calcBounds",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "fontTools.misc.arrayTools.sectRect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "fontTools.misc.arrayTools.rectArea",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "fontTools.misc.transform.Identity",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "collections.namedtuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "math.sqrt",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "math.acos",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "math.cos",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "math.pi",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\bezierTools.py",
      "to": "fontTools.misc.cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\classifyTools.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\classifyTools.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\cliTools.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\cliTools.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.ClassVar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.MutableMapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.Set",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\configTools.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\cython.py",
      "to": "types.SimpleNamespace",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\eexec.py",
      "to": "fontTools.misc.textTools.bytechr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\eexec.py",
      "to": "fontTools.misc.textTools.bytesjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\eexec.py",
      "to": "fontTools.misc.textTools.byteord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\eexec.py",
      "to": "binascii",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\eexec.py",
      "to": "binascii",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\eexec.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\eexec.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\encodingTools.py",
      "to": "fontTools.encodings.codecs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\enumTools.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\enumTools.py",
      "to": "enum.Enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\enumTools.py",
      "to": "enum.StrEnum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "lxml.etree.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "contextlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "xml.etree.ElementTree._namespace_map",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "xml.etree.cElementTree.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "xml.etree.ElementTree.XML",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "xml.etree.ElementTree.Element",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\etree.py",
      "to": "xml.etree.ElementTree.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filenames.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filenames.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\fixedTools.py",
      "to": "roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\fixedTools.py",
      "to": "roundTools.nearestMultipleShortestRepr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\fixedTools.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\iterTools.py",
      "to": "itertools.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\lazyTools.py",
      "to": "collections.UserDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\lazyTools.py",
      "to": "collections.UserList",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "timeit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "functools.wraps",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "logging.PercentStyle",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\loggingTools.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macCreatorType.py",
      "to": "fontTools.misc.textTools.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macCreatorType.py",
      "to": "fontTools.misc.textTools.bytesjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macCreatorType.py",
      "to": "fontTools.misc.textTools.strjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macCreatorType.py",
      "to": "xattr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macCreatorType.py",
      "to": "fontTools.misc.textTools.pad",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macRes.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macRes.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macRes.py",
      "to": "fontTools.misc.sstruct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macRes.py",
      "to": "fontTools.misc.textTools.bytesjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macRes.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macRes.py",
      "to": "collections.OrderedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\macRes.py",
      "to": "collections.abc.MutableMapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.fixedTools.fixedToFloat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.fixedTools.floatToFixed",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.fixedTools.floatToFixedToStr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.fixedTools.strToFixedToFloat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.textTools.bytechr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.textTools.byteord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.textTools.bytesjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.textTools.strjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.pens.boundsPen.BoundsPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.encodings.StandardEncoding.StandardEncoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.textTools.num2binary",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.textTools.binary2num",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.misc.textTools.readHex",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psCharStrings.py",
      "to": "fontTools.encodings.StandardEncoding.StandardEncoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "fontTools.misc.textTools.bytechr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "fontTools.misc.textTools.byteord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "fontTools.misc.textTools.bytesjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "fontTools.misc.eexec",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.PSOperators",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_StandardEncoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_boolean",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_integer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_literal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_mark",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_name",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_operator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_procedure",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_procmark",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_real",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "psOperators.ps_string",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "collections.abc.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "string.whitespace",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psLib.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\psOperators.py",
      "to": "fontTools.encodings.StandardEncoding.StandardEncoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "decimal",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "contextlib.redirect_stderr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "contextlib.redirect_stdout",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "io.StringIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "types.SimpleNamespace",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "textTools.Tag",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "textTools.bytechr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "textTools.byteord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "textTools.bytesjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "textTools.strjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\py23.py",
      "to": "textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\roundTools.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\roundTools.py",
      "to": "functools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\roundTools.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\sstruct.py",
      "to": "fontTools.misc.fixedTools.fixedToFloat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\sstruct.py",
      "to": "fontTools.misc.fixedTools.floatToFixed",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\sstruct.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\sstruct.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\sstruct.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\sstruct.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\symfont.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\symfont.py",
      "to": "functools.partial",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\symfont.py",
      "to": "itertools.count",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\symfont.py",
      "to": "sympy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\symfont.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\symfont.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "collections.abc.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "shutil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "tempfile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "unittest.TestCase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "fontTools.config.Config",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "fontTools.misc.xmlWriter.XMLWriter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\testTools.py",
      "to": "xml.parsers.expat.ParserCreate",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\textTools.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\textTools.py",
      "to": "ast",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\textTools.py",
      "to": "string",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\textTools.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\textTools.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\timeTools.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\timeTools.py",
      "to": "time",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\timeTools.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\timeTools.py",
      "to": "datetime.timezone",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\timeTools.py",
      "to": "calendar",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\timeTools.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\timeTools.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\transform.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\transform.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\transform.py",
      "to": "typing.NamedTuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\transform.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\transform.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\transform.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\treeTools.py",
      "to": "math.ceil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\treeTools.py",
      "to": "math.log",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\vector.py",
      "to": "numbers.Number",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\vector.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\vector.py",
      "to": "operator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\vector.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\visitor.py",
      "to": "enum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\visitor.py",
      "to": "weakref",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py",
      "to": "fontTools.misc.textTools.safeEval",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py",
      "to": "fontTools.ttLib.tables.DefaultTable.DefaultTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py",
      "to": "xml.parsers.expat.ParserCreate",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlReader.py",
      "to": "fontTools.misc.loggingTools.deprecateArgument",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "fontTools.misc.textTools.byteord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "fontTools.misc.textTools.strjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "string",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\xmlWriter.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "abc.ABC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_copy.copy_dir",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_copy.copy_file",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_errors.DestinationExists",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_errors.DirectoryExpected",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_errors.FileExpected",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_errors.FilesystemClosed",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_errors.NoSysPath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_errors.ResourceNotFound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_path.dirname",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_walk.BoundWalker",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "typing.Collection",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "typing.Self",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_info.Info",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_subfs.SubFS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_base.py",
      "to": "_subfs.SubFS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py",
      "to": "_errors.IllegalDestination",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py",
      "to": "_path.combine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py",
      "to": "_path.frombase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py",
      "to": "_path.isbase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py",
      "to": "_tools.copy_file_data",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_copy.py",
      "to": "_base.FS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_info.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_info.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_info.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_info.py",
      "to": "datetime.timezone",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_info.py",
      "to": "_errors.MissingInfoNamespace",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_info.py",
      "to": "collections.abc.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_info.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "errno",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "platform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "shutil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "stat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "os.PathLike",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "pathlib.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_base.FS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_errors.CreateFailed",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_errors.DirectoryExpected",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_errors.DirectoryNotEmpty",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_errors.FileExpected",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_errors.IllegalDestination",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_errors.ResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_errors.ResourceNotFound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_info.Info",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_path.isbase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "collections.abc.Collection",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_osfs.py",
      "to": "_subfs.SubFS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_path.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_path.py",
      "to": "platform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "pathlib.PurePosixPath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "_base.FS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "_errors.DirectoryExpected",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "_errors.ResourceNotFound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "collections.abc.Collection",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_subfs.py",
      "to": "_info.Info",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tempfs.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tempfs.py",
      "to": "shutil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tempfs.py",
      "to": "tempfile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tempfs.py",
      "to": "_errors.OperationFailed",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tempfs.py",
      "to": "_osfs.OSFS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tools.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tools.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tools.py",
      "to": "pathlib.PurePosixPath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tools.py",
      "to": "_errors.DirectoryNotEmpty",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tools.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_tools.py",
      "to": "_base.FS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "collections.deque",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "collections.abc.Collection",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "collections.abc.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "_path.combine",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "_base.FS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_walk.py",
      "to": "_info.Info",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "io",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "shutil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "stat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "typing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "zipfile",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_base.FS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_errors.FileExpected",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_errors.ResourceNotFound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_errors.ResourceReadOnly",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_info.Info",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_path.dirname",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_path.forcedir",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_path.normpath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_path.relpath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_tempfs.TempFS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "collections.abc.Collection",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\_zipfs.py",
      "to": "_subfs.SubFS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.base",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.copy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.errors",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.info",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.osfs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.subfs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.tempfs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.tools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.walk",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "fs.zipfs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._base",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._copy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._errors",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._info",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._osfs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._subfs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._tempfs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._tools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._walk",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\filesystem\\__init__.py",
      "to": "._zipfs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "collections.abc",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.MutableMapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.Type",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "typing.IO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "datetime.datetime",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "base64.b64encode",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "base64.b64decode",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "numbers.Integral",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "types.SimpleNamespace",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "functools.singledispatch",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "fontTools.misc.etree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\misc\\plistlib\\__init__.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.ttLib.tables._c_m_a_p.cmap_classes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.ttLib.tables.otBase.ValueRecord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.ttLib.tables.otBase.valueRecordFormatDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.otlLib.builder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "contextlib.contextmanager",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.ttLib.newTable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_ENV_VAR",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.feaLib.lookupDebugInfo.LOOKUP_DEBUG_INFO_KEY",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "operator.setitem",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.misc.testTools.MockFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
      "to": "fontTools.misc.xmlWriter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__main__.py",
      "to": "fontTools.mtiLib.main",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "collections.namedtuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "collections.OrderedDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.misc.fixedTools.fixedToFloat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.ttLib.tables.otBase.ValueRecord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.ttLib.tables.otBase.valueRecordFormatDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.ttLib.tables.otBase.OTLOffsetOverflowError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.ttLib.tables.otBase.OTTableWriter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.ttLib.ttFont.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.feaLib.ast.STATNameStatement",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.otlLib.optimize.gpos._compression_level_from_env",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.otlLib.optimize.gpos.compact_lookup",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.otlLib.error.OpenTypeLibError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "fontTools.misc.loggingTools.deprecateFunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "functools.reduce",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
      "to": "copy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "collections.namedtuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "functools.cached_property",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "functools.reduce",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "itertools.chain",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "math.log2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "typing.DefaultDict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "typing.Sequence",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "fontTools.config.OPTIONS",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "fontTools.misc.intTools.bit_count",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "fontTools.misc.intTools.bit_indices",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "fontTools.ttLib.tables.otBase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "fontTools.otlLib.builder.buildPairPosClassesSubtable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\gpos.py",
      "to": "warnings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py",
      "to": "argparse.RawTextHelpFormatter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py",
      "to": "fontTools.otlLib.optimize.gpos.COMPRESSION_LEVEL",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py",
      "to": "fontTools.otlLib.optimize.gpos.compact",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py",
      "to": "argparse.ArgumentParser",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py",
      "to": "fontTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__init__.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\otlLib\\optimize\\__main__.py",
      "to": "fontTools.otlLib.optimize.main",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\areaPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\basePen.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\basePen.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\basePen.py",
      "to": "fontTools.misc.loggingTools.LogMixin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\basePen.py",
      "to": "fontTools.misc.transform.DecomposedTransform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\basePen.py",
      "to": "fontTools.misc.transform.Identity",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\basePen.py",
      "to": "fontTools.pens.transformPen.TransformPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\basePen.py",
      "to": "fontTools.pens.reverseContourPen.ReverseContourPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\boundsPen.py",
      "to": "fontTools.misc.arrayTools.updateBounds",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\boundsPen.py",
      "to": "fontTools.misc.arrayTools.pointInRect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\boundsPen.py",
      "to": "fontTools.misc.arrayTools.unionRect",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\boundsPen.py",
      "to": "fontTools.misc.bezierTools.calcCubicBounds",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\boundsPen.py",
      "to": "fontTools.misc.bezierTools.calcQuadraticBounds",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\boundsPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cairoPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cocoaPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cocoaPen.py",
      "to": "AppKit.NSBezierPath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
      "to": "operator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
      "to": "fontTools.cu2qu.curve_to_quadratic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
      "to": "fontTools.cu2qu.curves_to_quadratic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
      "to": "fontTools.pens.basePen.decomposeSuperBezierSegment",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
      "to": "fontTools.pens.filterPen.FilterPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
      "to": "fontTools.pens.reverseContourPen.ReverseContourPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
      "to": "fontTools.pens.pointPen.BasePointToSegmentPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\cu2quPen.py",
      "to": "fontTools.pens.pointPen.ReverseContourPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\explicitClosingLinePen.py",
      "to": "fontTools.pens.filterPen.ContourFilterPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\filterPen.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\filterPen.py",
      "to": "fontTools.pens.basePen.AbstractPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\filterPen.py",
      "to": "fontTools.pens.basePen.DecomposingPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\filterPen.py",
      "to": "fontTools.pens.pointPen.AbstractPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\filterPen.py",
      "to": "fontTools.pens.pointPen.DecomposingPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\filterPen.py",
      "to": "fontTools.pens.pointPen.ReverseFlipped",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\filterPen.py",
      "to": "fontTools.pens.recordingPen.RecordingPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "ctypes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "platform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "subprocess",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "collections",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.raw.FT_Outline_Get_Bitmap",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.raw.FT_Outline_Get_BBox",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.raw.FT_Outline_Get_CBox",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_types.FT_Pos",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_structs.FT_Vector",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_structs.FT_BBox",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_structs.FT_Bitmap",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_structs.FT_Outline",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_enums.FT_OUTLINE_NONE",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_enums.FT_OUTLINE_EVEN_ODD_FILL",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_enums.FT_PIXEL_MODE_GRAY",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_enums.FT_CURVE_TAG_ON",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_enums.FT_CURVE_TAG_CONIC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_enums.FT_CURVE_TAG_CUBIC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "freetype.ft_errors.FT_Exception",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "fontTools.pens.basePen.PenError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "fontTools.misc.transform.Transform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "numpy",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "matplotlib.pyplot",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\freetypePen.py",
      "to": "PIL.Image",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\hashPointPen.py",
      "to": "hashlib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\hashPointPen.py",
      "to": "fontTools.pens.basePen.MissingComponentError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\hashPointPen.py",
      "to": "fontTools.pens.pointPen.AbstractPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\momentsPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\momentsPen.py",
      "to": "fontTools.pens.basePen.OpenContourError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\momentsPen.py",
      "to": "cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\momentsPen.py",
      "to": "fontTools.misc.symfont.x",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\momentsPen.py",
      "to": "fontTools.misc.symfont.y",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\momentsPen.py",
      "to": "fontTools.misc.symfont.printGreenPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\momentsPen.py",
      "to": "fontTools.misc.cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\perimeterPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\perimeterPen.py",
      "to": "fontTools.misc.bezierTools.approximateQuadraticArcLengthC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\perimeterPen.py",
      "to": "fontTools.misc.bezierTools.calcQuadraticArcLengthC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\perimeterPen.py",
      "to": "fontTools.misc.bezierTools.approximateCubicArcLengthC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\perimeterPen.py",
      "to": "fontTools.misc.bezierTools.calcCubicArcLengthC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\perimeterPen.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointInsidePen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointInsidePen.py",
      "to": "fontTools.misc.bezierTools.solveQuadratic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointInsidePen.py",
      "to": "fontTools.misc.bezierTools.solveCubic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.misc.enumTools.StrEnum",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.misc.loggingTools.LogMixin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.misc.transform.DecomposedTransform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.misc.transform.Identity",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.pens.basePen.AbstractPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.pens.basePen.MissingComponentError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.pens.basePen.PenError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.pens.transformPen.TransformPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\pointPen.py",
      "to": "fontTools.pens.filterPen.OnCurveFirstPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\qtPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\qtPen.py",
      "to": "PyQt5.QtGui.QPainterPath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\qu2cuPen.py",
      "to": "fontTools.qu2cu.quadratic_to_curves",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\qu2cuPen.py",
      "to": "fontTools.pens.filterPen.ContourFilterPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\qu2cuPen.py",
      "to": "fontTools.pens.reverseContourPen.ReverseContourPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\qu2cuPen.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\quartzPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\quartzPen.py",
      "to": "Quartz.CoreGraphics.CGPathCreateMutable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\quartzPen.py",
      "to": "Quartz.CoreGraphics.CGPathMoveToPoint",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\quartzPen.py",
      "to": "Quartz.CoreGraphics.CGPathAddLineToPoint",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\quartzPen.py",
      "to": "Quartz.CoreGraphics.CGPathAddCurveToPoint",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\quartzPen.py",
      "to": "Quartz.CoreGraphics.CGPathAddQuadCurveToPoint",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\quartzPen.py",
      "to": "Quartz.CoreGraphics.CGPathCloseSubpath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\recordingPen.py",
      "to": "fontTools.pens.basePen.AbstractPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\recordingPen.py",
      "to": "fontTools.pens.basePen.DecomposingPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\recordingPen.py",
      "to": "fontTools.pens.pointPen.AbstractPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\recordingPen.py",
      "to": "fontTools.pens.pointPen.DecomposingPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\recordingPen.py",
      "to": "pprint.pprint",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "reportlab.graphics.shapes.Path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "reportlab.lib.colors",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "reportlab.graphics.renderPM",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "reportlab.graphics.shapes.Group",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "reportlab.graphics.shapes.Drawing",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reportLabPen.py",
      "to": "reportlab.graphics.shapes.scale",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reverseContourPen.py",
      "to": "fontTools.misc.arrayTools.pairwise",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\reverseContourPen.py",
      "to": "fontTools.pens.filterPen.ContourFilterPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\roundingPen.py",
      "to": "fontTools.misc.roundTools.noRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\roundingPen.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\roundingPen.py",
      "to": "fontTools.misc.transform.Transform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\roundingPen.py",
      "to": "fontTools.pens.filterPen.FilterPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\roundingPen.py",
      "to": "fontTools.pens.filterPen.FilterPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "math.sqrt",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "math.degrees",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "math.atan",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "fontTools.pens.basePen.OpenContourError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "fontTools.pens.momentsPen.MomentsPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "fontTools.pens.transformPen.TransformPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "fontTools.misc.transform.Scale",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\statisticsPen.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\svgPathPen.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\svgPathPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\svgPathPen.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\svgPathPen.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\svgPathPen.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\svgPathPen.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\svgPathPen.py",
      "to": "doctest",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "fontTools.cffLib.specializer.commandsToProgram",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "fontTools.cffLib.specializer.specializeCommands",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "fontTools.misc.psCharStrings.T2CharString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "fontTools.misc.roundTools.roundFunc",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\t2CharStringPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\teePen.py",
      "to": "fontTools.pens.basePen.AbstractPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\teePen.py",
      "to": "fontTools.pens.basePen._TestPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\transformPen.py",
      "to": "fontTools.pens.filterPen.FilterPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\transformPen.py",
      "to": "fontTools.pens.filterPen.FilterPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\transformPen.py",
      "to": "fontTools.pens.basePen._TestPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\transformPen.py",
      "to": "fontTools.misc.transform.Transform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\transformPen.py",
      "to": "fontTools.misc.transform.Transform",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "array.array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.misc.fixedTools.MAX_F2DOT14",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.misc.fixedTools.floatToFixedToFloat",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.misc.loggingTools.LogMixin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.pens.pointPen.AbstractPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.pens.basePen.LoggingPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.pens.basePen.PenError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.pens.transformPen.TransformPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.pens.transformPen.TransformPointPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.ttLib.tables.ttProgram",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.ttLib.tables._g_l_y_f.flagOnCurve",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.ttLib.tables._g_l_y_f.flagCubic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.ttLib.tables._g_l_y_f.Glyph",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.ttLib.tables._g_l_y_f.GlyphComponent",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.ttLib.tables._g_l_y_f.GlyphCoordinates",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "fontTools.ttLib.tables._g_l_y_f.dropImpliedOnCurvePoints",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\ttGlyphPen.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\wxPen.py",
      "to": "fontTools.pens.basePen.BasePen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\pens\\wxPen.py",
      "to": "wx",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\benchmark.py",
      "to": "qu2cu.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\benchmark.py",
      "to": "fontTools.cu2qu.curve_to_quadratic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\benchmark.py",
      "to": "random",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\benchmark.py",
      "to": "timeit",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py",
      "to": "fontTools.misc.cliTools.makeOutputFileName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py",
      "to": "fontTools.ttLib.TTFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py",
      "to": "fontTools.pens.qu2cuPen.Qu2CuPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py",
      "to": "fontTools.pens.ttGlyphPen.TTGlyphPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\cli.py",
      "to": "fontTools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "fontTools.misc.bezierTools.splitCubicAtTC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "collections.namedtuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "math",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "typing.Union",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "fontTools.cu2qu.benchmark.generate_curve",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "fontTools.cu2qu.curve_to_quadratic",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\qu2cu.py",
      "to": "fontTools.misc.cython",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\__init__.py",
      "to": "qu2cu.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\qu2cu\\__main__.py",
      "to": "cli._main",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py",
      "to": "fontTools.misc.psCharStrings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py",
      "to": "fontTools.pens.basePen.NullPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py",
      "to": "fontTools.misc.loggingTools.deprecateFunction",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py",
      "to": "fontTools.subset.util._add_method",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py",
      "to": "fontTools.subset.util._uniq_sort",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\cff.py",
      "to": "fontTools.encodings.StandardEncoding.StandardEncoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "functools.lru_cache",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "itertools.chain",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "itertools.count",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "typing.Dict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "typing.Iterator",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "typing.Set",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "fontTools.subset.util._add_method",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "fontTools.ttLib.tables.S_V_G_.SVGDocument",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\svg.py",
      "to": "lxml.etree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "__future__.annotations",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.config",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.ttLib.tables.otBase.USE_HARFBUZZ_REPACKER",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.otlLib.maxContextCalc.maxCtxFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.pens.basePen.NullPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.misc.loggingTools.Timer",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.misc.cliTools.makeOutputFileName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.subset.util._add_method",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.subset.util._uniq_sort",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.subset.cff.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.subset.svg.*",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.varLib.varStore",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.varLib.multiVarStore",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.ttLib.tables._n_a_m_e.NameRecordVisitor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.ttLib.tables._n_a_m_e.makeName",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.unicodedata.mirrored",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "struct",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "array",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "collections.Counter",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "collections.defaultdict",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "functools.reduce",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "types.MethodType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.colorLib.unbuilder.unbuildColrV1",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.colorLib.builder.buildColrV1",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.colorLib.builder.populateCOLRv0",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "os.path.splitext",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.configLogger",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "fontTools.ttLib.sfnt",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__main__.py",
      "to": "sys",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\subset\\__main__.py",
      "to": "fontTools.subset.main",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\__init__.py",
      "to": "path.SVGPath",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\__init__.py",
      "to": "path.parse_path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "fontTools.misc.transform.Identity",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "fontTools.misc.transform.Scale",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.atan2",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.ceil",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.cos",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.fabs",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.isfinite",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.pi",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.radians",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.sin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.sqrt",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\arc.py",
      "to": "math.tan",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\parser.py",
      "to": "arc.EllipticalArc",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\parser.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\shapes.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\__init__.py",
      "to": "fontTools.pens.transformPen.TransformPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\__init__.py",
      "to": "fontTools.misc.etree",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\__init__.py",
      "to": "fontTools.misc.textTools.tostr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\__init__.py",
      "to": "parser.parse_path",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\svgLib\\path\\__init__.py",
      "to": "shapes.PathBuilder",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.eexec",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.macCreatorType.getMacCreatorAndType",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.textTools.bytechr",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.textTools.byteord",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.textTools.bytesjoin",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.textTools.tobytes",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.psOperators._type1_pre_eexec_order",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.psOperators._type1_fontinfo_order",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.psOperators._type1_post_eexec_order",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.encodings.StandardEncoding.StandardEncoding",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "os",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "re",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.macRes.ResourceReader",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "Carbon.Res",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.psLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "fontTools.misc.psCharStrings",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\t1Lib\\__init__.py",
      "to": "Res",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\macUtils.py",
      "to": "io.BytesIO",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\macUtils.py",
      "to": "fontTools.misc.macRes.ResourceReader",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\macUtils.py",
      "to": "fontTools.misc.macRes.ResourceError",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\macUtils.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\macUtils.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "itertools",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "logging",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "typing.Mapping",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.cffLib.CFFFontSet",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.ttLib.ttFont",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.ttLib.tables._g_l_y_f",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.ttLib.tables._h_m_t_x",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.misc.psCharStrings.T2CharString",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.misc.roundTools.otRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.misc.roundTools.noRound",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.pens.ttGlyphPen.TTGlyphPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "fontTools.pens.t2CharStringPen.T2CharStringPen",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "pathops",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\removeOverlaps.py",
      "to": "argparse",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "fontTools.ttLib.tables.otBase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "abc.ABC",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "abc.abstractmethod",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "dataclasses.dataclass",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "collections.deque",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "typing.Optional",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "typing.Any",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "typing.Callable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "typing.Deque",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "typing.Iterable",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "typing.List",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\reorderGlyphs.py",
      "to": "typing.Tuple",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\scaleUpem.py",
      "to": "fontTools.ttLib.ttVisitor.TTVisitor",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\scaleUpem.py",
      "to": "fontTools.ttLib",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\scaleUpem.py",
      "to": "fontTools.ttLib.tables.otBase",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\scaleUpem.py",
      "to": "fontTools.ttLib.tables.otTables",
      "relationType": "imports"
    },
    {
      "from": "app\\domains\\arts\\investlab\\venv\\Lib\\site-packages\\fontTools\\ttLib\\scaleUpem.py",
      "to":
