{
  "openapi": "3.1.0",
  "info": {
    "title": "AI Advisor API",
    "description": "\n    **AI Advisor** - Domain-aligned AI with safety controls\n\n    ## Features\n\n    - \ud83d\udd12 **Provenance Enforcement**: All assertions must cite sources\n    - \ud83e\udd1d **Human-in-the-Loop**: Continuous improvement through feedback\n    - \ud83d\udee1\ufe0f **Agent Safety**: Dry-run mode, kill-switch, action whitelist\n    - \ud83d\udd2c **Science Domain**: Biomedical research, chemistry, physics\n    - \ud83d\udcbc **Commerce Domain**: FinanceAdvisor, UBI simulation, employment matching\n    - \ud83c\udfa8 **Arts Domain**: Creative intelligence, cultural preservation\n\n    ## FinanceAdvisor Module\n\n    - \ud83d\udcca **7-Phase Financial Intelligence**: Complete lifecycle from analysis to success\n    - \ud83c\udfaf **Goal Analysis**: Natural language to structured objectives\n    - \ud83d\udcc8 **Smart Predictions**: ML-powered income, retirement, and market forecasting\n    - \ud83d\udca1 **Portfolio Optimization**: Risk-based asset allocation\n    - \ud83d\uddfa\ufe0f **Success Roadmaps**: Clear paths with milestones and contingencies\n    - \u2705 **Ethical AI**: Bias-free, fair, and transparent recommendations\n\n    ## Safety First\n\n    - All agent actions default to dry-run mode\n    - Provenance required on all assertions\n    - Feedback queue for human review\n    - Emergency kill-switch for runaway agents\n\n    ## Domains\n\n    - **Science**: Health, Physics, Chemistry, Biology\n    - **Commerce**: Finance, Universal Income, Employment\n    - **Arts**: Creativity, History, Language, Culture\n    ",
    "contact": {
      "name": "AI Advisor Team",
      "url": "https://github.com/yourusername/ai-advisor"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/api/assertions/validate": {
      "post": {
        "tags": [
          "System",
          "Provenance"
        ],
        "summary": "Validate Assertion",
        "description": "Validate that an assertion includes proper provenance.\n\nThis endpoint enforces that all generated claims have:\n- At least one provenance source\n- Valid timestamps\n- Proper attribution\n\nReturns validation status and timestamp.",
        "operationId": "validate_assertion_api_assertions_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Assertion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/hil/feedback": {
      "post": {
        "tags": [
          "System",
          "Human-in-the-Loop"
        ],
        "summary": "Capture Feedback",
        "description": "Capture human-in-the-loop feedback for model improvement.\n\nThis endpoint queues user corrections and labels for:\n- Manual review by human labelers\n- Future model retraining\n- Quality monitoring\n\nReturns 202 Accepted (feedback queued for processing).",
        "operationId": "capture_feedback_api_hil_feedback_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HILFeedback"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "System",
          "Human-in-the-Loop"
        ],
        "summary": "Get Feedback",
        "description": "Retrieve queued feedback for review.\n\nThis endpoint is for human labelers to review submitted feedback.",
        "operationId": "get_feedback_api_hil_feedback_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Status Filter"
            }
          },
          {
            "name": "label_filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Label Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/execute": {
      "post": {
        "tags": [
          "System",
          "Agent Safety"
        ],
        "summary": "Execute Agent",
        "description": "Execute agent action with safety controls.\n\nSafety features:\n- Dry-run mode enabled by default (no side effects)\n- Action whitelist enforcement\n- Timeout controls\n- Execution logging\n\nTo execute real actions, set dry_run=False (requires approval).",
        "operationId": "execute_agent_api_agent_execute_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentExecutionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentExecutionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/agent/kill": {
      "post": {
        "tags": [
          "System",
          "Agent Safety"
        ],
        "summary": "Kill Agent",
        "description": "Emergency kill-switch for runaway agents.\n\nThis endpoint immediately terminates a running agent.\nUse with caution - may leave resources in inconsistent state.",
        "operationId": "kill_agent_api_agent_kill_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KillSignal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/agent/status/{agent_id}": {
      "get": {
        "tags": [
          "System",
          "Agent Safety"
        ],
        "summary": "Get Agent Status",
        "description": "Get status of a running agent.",
        "operationId": "get_agent_status_api_agent_status__agent_id__get",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "System",
          "System"
        ],
        "summary": "Health Check",
        "description": "System health check.\n\nReturns overall system status and component health.",
        "operationId": "health_check_api_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/metrics": {
      "get": {
        "tags": [
          "System",
          "System"
        ],
        "summary": "Get Metrics",
        "description": "System metrics and KPIs.\n\nReturns key performance indicators including:\n- Total requests and assertions\n- Provenance coverage\n- HIL feedback volume\n- Agent execution statistics",
        "operationId": "get_metrics_api_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Login",
        "description": "Authenticate user and return JWT access token.\n\n**Demo Credentials:**\n- Username: `admin`, Password: `admin123` (admin role)\n- Username: `user`, Password: `user123` (user role)\n\n**Security Note:** This is a demo implementation. In production:\n- Use bcrypt/argon2 for password hashing\n- Store users in a database\n- Implement rate limiting\n- Add account lockout after failed attempts\n- Use environment variables for secrets",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Logout",
        "description": "Logout current user.\n\nIn production, implement:\n- Token blacklisting\n- Session revocation\n- Audit logging",
        "operationId": "logout_api_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Get Current User Profile",
        "description": "Get current authenticated user profile.\n\nRequires valid JWT token in Authorization header:\n`Authorization: Bearer <token>`",
        "operationId": "get_current_user_profile_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/verify": {
      "get": {
        "tags": [
          "Authentication",
          "Authentication"
        ],
        "summary": "Verify Token",
        "description": "Verify if the provided token is valid.\n\nReturns user information if token is valid.",
        "operationId": "verify_token_api_auth_verify_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/science/biomedical/search": {
      "post": {
        "tags": [
          "Science"
        ],
        "summary": "Search Biomedical Literature",
        "description": "Search biomedical literature with provenance tracking.\n\nThis endpoint simulates searching PubMed, ClinicalTrials.gov, etc.\nIn production, this would integrate with actual APIs.",
        "operationId": "search_biomedical_literature_api_science_biomedical_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BiomedicalSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BiomedicalSearchResult"
                  },
                  "type": "array",
                  "title": "Response Search Biomedical Literature Api Science Biomedical Search Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/science/chemistry/simulate": {
      "post": {
        "tags": [
          "Science"
        ],
        "summary": "Simulate Chemistry Reaction",
        "description": "Simulate chemical reactions with safety checks.\n\nThis endpoint would integrate with RDKit or similar chemistry libraries.",
        "operationId": "simulate_chemistry_reaction_api_science_chemistry_simulate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChemistrySimulationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChemistrySimulationResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/science/physics/simulate": {
      "post": {
        "tags": [
          "Science"
        ],
        "summary": "Simulate Physics Problem",
        "description": "Simulate physics problems for space travel, materials science, etc.\n\nThis would integrate with physics simulation engines.",
        "operationId": "simulate_physics_problem_api_science_physics_simulate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Problem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/commerce/ubi/simulate": {
      "post": {
        "tags": [
          "Commerce"
        ],
        "summary": "Simulate Universal Basic Income",
        "description": "Simulate Universal Basic Income economic impact.\n\nThis endpoint models UBI effects on employment, poverty, and economic growth.",
        "operationId": "simulate_universal_basic_income_api_commerce_ubi_simulate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UBISimulationParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UBISimulationResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/commerce/employment/match": {
      "post": {
        "tags": [
          "Commerce"
        ],
        "summary": "Match Employment Opportunities",
        "description": "Match job seekers with employment opportunities using AI.\n\nIncludes fairness controls and bias mitigation.",
        "operationId": "match_employment_opportunities_api_commerce_employment_match_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmploymentMatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmploymentMatchResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/commerce/economy/forecast": {
      "post": {
        "tags": [
          "Commerce"
        ],
        "summary": "Forecast Economic Indicators",
        "description": "Forecast economic indicators and market trends.\n\nThis would integrate with economic models and market data.",
        "operationId": "forecast_economic_indicators_api_commerce_economy_forecast_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/create": {
      "post": {
        "tags": [
          "Arts"
        ],
        "summary": "Generate Creative Work",
        "description": "Generate creative works with ethical controls.\n\nThis endpoint creates artistic content with provenance tracking\nand originality verification.",
        "operationId": "generate_creative_work_api_arts_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWorkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeWork"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/analyze/cultural": {
      "post": {
        "tags": [
          "Arts"
        ],
        "summary": "Analyze Cultural Content",
        "description": "Analyze content for cultural context and sensitivity.\n\nThis endpoint performs sentiment analysis and cultural assessment.",
        "operationId": "analyze_cultural_content_api_arts_analyze_cultural_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CulturalAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CulturalAnalysisResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/language/preserve": {
      "post": {
        "tags": [
          "Arts"
        ],
        "summary": "Preserve Endangered Language",
        "description": "Analyze and preserve endangered languages.\n\nThis endpoint would work with linguistic databases and preservation experts.",
        "operationId": "preserve_endangered_language_api_arts_language_preserve_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguagePreservationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguagePreservationResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/history/analyze": {
      "post": {
        "tags": [
          "Arts"
        ],
        "summary": "Analyze Historical Trends",
        "description": "Analyze historical trends and their modern implications.\n\nThis would integrate with historical databases and trend analysis models.",
        "operationId": "analyze_historical_trends_api_arts_history_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Parameters"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/harmonyhub/emotional-message": {
      "post": {
        "tags": [
          "Arts"
        ],
        "summary": "Create Emotional Music Message",
        "description": "Create music-based emotional communication message.\n\nPart of HarmonyHub's music-as-communication platform.",
        "operationId": "create_emotional_music_message_api_arts_harmonyhub_emotional_message_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmotionalMusicRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/harmonyhub/therapeutic-session": {
      "post": {
        "tags": [
          "Arts"
        ],
        "summary": "Start Therapeutic Session",
        "description": "Start AI-powered therapeutic music session.\n\nIntegrates with HarmonyHub's emotional therapy engine.",
        "operationId": "start_therapeutic_session_api_arts_harmonyhub_therapeutic_session_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TherapeuticSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/harmonyhub/personalized-feed": {
      "post": {
        "tags": [
          "Arts"
        ],
        "summary": "Create Personalized Content Feed",
        "description": "Create personalized emotional content feed.\n\nUses HarmonyHub's Resonance Engine for AI-tailored content delivery.",
        "operationId": "create_personalized_content_feed_api_arts_harmonyhub_personalized_feed_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalizedFeedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/harmonyhub/market-intelligence/{symbol}": {
      "get": {
        "tags": [
          "Arts"
        ],
        "summary": "Get Creative Market Intelligence",
        "description": "Get market intelligence for creative assets and artists.\n\nBridges HarmonyHub Intelligence with creative market analysis.",
        "operationId": "get_creative_market_intelligence_api_arts_harmonyhub_market_intelligence__symbol__get",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Symbol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/arts/harmonyhub/status": {
      "get": {
        "tags": [
          "Arts"
        ],
        "summary": "Harmonyhub Status",
        "description": "Get HarmonyHub integration status and capabilities.",
        "operationId": "harmonyhub_status_api_arts_harmonyhub_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/finance/personal/analyze": {
      "post": {
        "tags": [
          "Finance Advisor",
          "Personal Finance"
        ],
        "summary": "Analyze Personal Finance",
        "description": "Comprehensive personal finance analysis.\n\nProvides:\n- Financial goal analysis\n- Risk assessment\n- Budget strategy\n- Investment recommendations\n- Success roadmap",
        "operationId": "analyze_personal_finance_api_finance_personal_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalFinanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/finance/enterprise/analyze": {
      "post": {
        "tags": [
          "Finance Advisor",
          "Enterprise Finance"
        ],
        "summary": "Analyze Enterprise Finance",
        "description": "Comprehensive enterprise finance analysis.\n\nProvides:\n- Sector benchmarking\n- Risk assessment\n- Capital allocation strategy\n- Growth strategy\n- Revenue forecasting",
        "operationId": "analyze_enterprise_finance_api_finance_enterprise_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseFinanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/finance/insights/quick": {
      "post": {
        "tags": [
          "Finance Advisor",
          "Quick Insights"
        ],
        "summary": "Get Quick Insights",
        "description": "Get quick financial insights and suggestions.\n\nProvides immediate, actionable suggestions based on current financial state.",
        "operationId": "get_quick_insights_api_finance_insights_quick_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickInsightsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/finance/goals/analyze": {
      "post": {
        "tags": [
          "Finance Advisor",
          "Goal Analysis"
        ],
        "summary": "Analyze Goals",
        "description": "Analyze and structure financial goals.\n\nConverts natural language goals into structured, actionable objectives.",
        "operationId": "analyze_goals_api_finance_goals_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_goals_api_finance_goals_analyze_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/finance/prediction/income": {
      "post": {
        "tags": [
          "Finance Advisor",
          "Predictions"
        ],
        "summary": "Predict Income",
        "description": "Predict future income growth.\n\nUses historical data and various factors to forecast income trajectory.",
        "operationId": "predict_income_api_finance_prediction_income_post",
        "parameters": [
          {
            "name": "years_ahead",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "title": "Years Ahead"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_predict_income_api_finance_prediction_income_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/finance/prediction/retirement": {
      "post": {
        "tags": [
          "Finance Advisor",
          "Predictions"
        ],
        "summary": "Project Retirement",
        "description": "Project retirement fund growth.\n\nCalculates future retirement savings based on contributions and returns.",
        "operationId": "project_retirement_api_finance_prediction_retirement_post",
        "parameters": [
          {
            "name": "current_balance",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Current Balance"
            }
          },
          {
            "name": "monthly_contribution",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Monthly Contribution"
            }
          },
          {
            "name": "years_to_retirement",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Years To Retirement"
            }
          },
          {
            "name": "expected_return",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0.07,
              "title": "Expected Return"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/finance/portfolio/optimize": {
      "post": {
        "tags": [
          "Finance Advisor",
          "Portfolio Management"
        ],
        "summary": "Optimize Portfolio",
        "description": "Optimize investment portfolio allocation.\n\nProvides optimal asset allocation based on risk tolerance and goals.",
        "operationId": "optimize_portfolio_api_finance_portfolio_optimize_post",
        "parameters": [
          {
            "name": "risk_tolerance",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Risk Tolerance"
            }
          },
          {
            "name": "time_horizon_years",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Time Horizon Years"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_optimize_portfolio_api_finance_portfolio_optimize_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/finance/scenario/investment": {
      "post": {
        "tags": [
          "Finance Advisor",
          "Scenario Analysis"
        ],
        "summary": "Simulate Investment Scenarios",
        "description": "Simulate different investment scenarios.\n\nCompare outcomes under different market conditions and return rates.",
        "operationId": "simulate_investment_scenarios_api_finance_scenario_investment_post",
        "parameters": [
          {
            "name": "initial_investment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Initial Investment"
            }
          },
          {
            "name": "monthly_contribution",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Monthly Contribution"
            }
          },
          {
            "name": "years",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Years"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": true
                },
                "title": "Scenarios"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/finance/health": {
      "get": {
        "tags": [
          "Finance Advisor",
          "System"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint for FinanceAdvisor module",
        "operationId": "health_check_api_finance_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "summary": "Root",
        "description": "Root endpoint with API information.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentExecutionRequest": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "params": {
            "additionalProperties": true,
            "type": "object",
            "title": "Params"
          },
          "dry_run": {
            "type": "boolean",
            "title": "Dry Run",
            "default": true
          },
          "requested_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested By"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "action"
        ],
        "title": "AgentExecutionRequest",
        "description": "Request to execute agent action"
      },
      "AgentExecutionResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "dry_run": {
            "type": "boolean",
            "title": "Dry Run"
          },
          "logs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Logs"
          },
          "outputs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Outputs"
          },
          "safety_checks": {
            "$ref": "#/components/schemas/SafetyCheck"
          },
          "duration_ms": {
            "type": "number",
            "title": "Duration Ms"
          }
        },
        "type": "object",
        "required": [
          "success",
          "dry_run",
          "logs",
          "outputs",
          "safety_checks",
          "duration_ms"
        ],
        "title": "AgentExecutionResponse",
        "description": "Response from agent execution"
      },
      "Assertion": {
        "properties": {
          "claim": {
            "type": "string",
            "title": "Claim"
          },
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "confidence": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Confidence"
          },
          "provenance": {
            "items": {
              "$ref": "#/components/schemas/Provenance"
            },
            "type": "array",
            "title": "Provenance"
          }
        },
        "type": "object",
        "required": [
          "claim",
          "domain",
          "confidence",
          "provenance"
        ],
        "title": "Assertion",
        "description": "Assertion with provenance"
      },
      "BiomedicalSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "max_results": {
            "type": "integer",
            "title": "Max Results",
            "default": 10
          },
          "include_abstracts": {
            "type": "boolean",
            "title": "Include Abstracts",
            "default": false
          },
          "sources": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sources",
            "default": [
              "PubMed",
              "ClinicalTrials.gov"
            ]
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "BiomedicalSearchRequest"
      },
      "BiomedicalSearchResult": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "authors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Authors"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "published_date": {
            "type": "string",
            "title": "Published Date"
          },
          "abstract": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Abstract"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score"
          },
          "provenance": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provenance"
          }
        },
        "type": "object",
        "required": [
          "title",
          "authors",
          "source",
          "url",
          "published_date",
          "abstract",
          "confidence_score",
          "provenance"
        ],
        "title": "BiomedicalSearchResult"
      },
      "Body_analyze_goals_api_finance_goals_analyze_post": {
        "properties": {
          "goals": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Goals"
          },
          "context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "goals"
        ],
        "title": "Body_analyze_goals_api_finance_goals_analyze_post"
      },
      "Body_optimize_portfolio_api_finance_portfolio_optimize_post": {
        "properties": {
          "current_allocation": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Current Allocation"
          },
          "goals": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Goals"
          }
        },
        "type": "object",
        "required": [
          "current_allocation"
        ],
        "title": "Body_optimize_portfolio_api_finance_portfolio_optimize_post"
      },
      "Body_predict_income_api_finance_prediction_income_post": {
        "properties": {
          "historical_income": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Historical Income"
          },
          "factors": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Factors"
          }
        },
        "type": "object",
        "required": [
          "historical_income"
        ],
        "title": "Body_predict_income_api_finance_prediction_income_post"
      },
      "ChemistrySimulationRequest": {
        "properties": {
          "reaction": {
            "type": "string",
            "title": "Reaction"
          },
          "conditions": {
            "additionalProperties": true,
            "type": "object",
            "title": "Conditions",
            "default": {}
          },
          "safety_checks": {
            "type": "boolean",
            "title": "Safety Checks",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "reaction"
        ],
        "title": "ChemistrySimulationRequest"
      },
      "ChemistrySimulationResult": {
        "properties": {
          "reaction": {
            "type": "string",
            "title": "Reaction"
          },
          "products": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Products"
          },
          "yield_prediction": {
            "type": "number",
            "title": "Yield Prediction"
          },
          "safety_warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Safety Warnings"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score"
          }
        },
        "type": "object",
        "required": [
          "reaction",
          "products",
          "yield_prediction",
          "safety_warnings",
          "confidence_score"
        ],
        "title": "ChemistrySimulationResult"
      },
      "CreativeWork": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "medium": {
            "type": "string",
            "title": "Medium"
          },
          "style": {
            "type": "string",
            "title": "Style"
          },
          "originality_score": {
            "type": "number",
            "title": "Originality Score"
          },
          "ethical_assessment": {
            "additionalProperties": true,
            "type": "object",
            "title": "Ethical Assessment"
          },
          "attribution": {
            "additionalProperties": true,
            "type": "object",
            "title": "Attribution"
          },
          "provenance": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provenance"
          }
        },
        "type": "object",
        "required": [
          "content",
          "medium",
          "style",
          "originality_score",
          "ethical_assessment",
          "attribution",
          "provenance"
        ],
        "title": "CreativeWork"
      },
      "CreativeWorkRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "style": {
            "type": "string",
            "title": "Style",
            "default": "modern"
          },
          "medium": {
            "type": "string",
            "title": "Medium",
            "default": "text"
          },
          "ethical_filters": {
            "type": "boolean",
            "title": "Ethical Filters",
            "default": true
          },
          "originality_check": {
            "type": "boolean",
            "title": "Originality Check",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "CreativeWorkRequest"
      },
      "CulturalAnalysisRequest": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "analysis_type": {
            "type": "string",
            "title": "Analysis Type",
            "default": "sentiment"
          },
          "cultural_sensitivity": {
            "type": "boolean",
            "title": "Cultural Sensitivity",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "CulturalAnalysisRequest"
      },
      "CulturalAnalysisResult": {
        "properties": {
          "primary_sentiment": {
            "type": "string",
            "title": "Primary Sentiment"
          },
          "sentiment_score": {
            "type": "number",
            "title": "Sentiment Score"
          },
          "themes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Themes"
          },
          "cultural_indicators": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Cultural Indicators"
          },
          "sensitivity_warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sensitivity Warnings"
          },
          "provenance": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provenance"
          }
        },
        "type": "object",
        "required": [
          "primary_sentiment",
          "sentiment_score",
          "themes",
          "cultural_indicators",
          "sensitivity_warnings",
          "provenance"
        ],
        "title": "CulturalAnalysisResult"
      },
      "EmotionalMusicRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "emotional_state": {
            "type": "string",
            "title": "Emotional State"
          },
          "intent": {
            "type": "string",
            "title": "Intent",
            "default": "expression"
          },
          "context_tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Context Tags",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "emotional_state"
        ],
        "title": "EmotionalMusicRequest"
      },
      "EmploymentMatchRequest": {
        "properties": {
          "user_profile": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "User Profile"
          },
          "job_requirements": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Job Requirements"
          },
          "fairness_checks": {
            "type": "boolean",
            "title": "Fairness Checks",
            "default": true
          },
          "bias_mitigation": {
            "type": "boolean",
            "title": "Bias Mitigation",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "user_profile",
          "job_requirements"
        ],
        "title": "EmploymentMatchRequest"
      },
      "EmploymentMatchResult": {
        "properties": {
          "match_score": {
            "type": "number",
            "title": "Match Score"
          },
          "compatibility_factors": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Compatibility Factors"
          },
          "recommended_actions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommended Actions"
          },
          "bias_indicators": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Bias Indicators"
          },
          "fairness_score": {
            "type": "number",
            "title": "Fairness Score"
          },
          "provenance": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provenance"
          }
        },
        "type": "object",
        "required": [
          "match_score",
          "compatibility_factors",
          "recommended_actions",
          "bias_indicators",
          "fairness_score",
          "provenance"
        ],
        "title": "EmploymentMatchResult"
      },
      "EnterpriseFinanceRequest": {
        "properties": {
          "financial_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Financial Data"
          },
          "business_info": {
            "additionalProperties": true,
            "type": "object",
            "title": "Business Info"
          },
          "strategic_goals": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Strategic Goals"
          }
        },
        "type": "object",
        "required": [
          "financial_data",
          "business_info",
          "strategic_goals"
        ],
        "title": "EnterpriseFinanceRequest",
        "description": "Request for enterprise finance analysis"
      },
      "HILFeedback": {
        "properties": {
          "assertion_id": {
            "type": "string",
            "title": "Assertion Id"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "correction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "assertion_id",
          "label"
        ],
        "title": "HILFeedback",
        "description": "Human-in-the-loop feedback"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "components": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Components"
          }
        },
        "type": "object",
        "required": [
          "status",
          "version",
          "timestamp",
          "components"
        ],
        "title": "HealthResponse",
        "description": "System health response"
      },
      "KillSignal": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "requested_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requested By"
          },
          "force": {
            "type": "boolean",
            "title": "Force",
            "default": false
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "reason"
        ],
        "title": "KillSignal",
        "description": "Emergency agent termination signal"
      },
      "LanguagePreservationRequest": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "text_sample": {
            "type": "string",
            "title": "Text Sample"
          },
          "analysis_type": {
            "type": "string",
            "title": "Analysis Type",
            "default": "grammar"
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "text_sample"
        ],
        "title": "LanguagePreservationRequest"
      },
      "LanguagePreservationResult": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "analysis_type": {
            "type": "string",
            "title": "Analysis Type"
          },
          "preservation_status": {
            "type": "string",
            "title": "Preservation Status"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score"
          },
          "cultural_significance": {
            "type": "string",
            "title": "Cultural Significance"
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "analysis_type",
          "preservation_status",
          "recommendations",
          "confidence_score",
          "cultural_significance"
        ],
        "title": "LanguagePreservationResult"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LoginRequest"
      },
      "MetricsResponse": {
        "properties": {
          "total_requests": {
            "type": "integer",
            "title": "Total Requests"
          },
          "total_assertions": {
            "type": "integer",
            "title": "Total Assertions"
          },
          "provenance_coverage": {
            "type": "number",
            "title": "Provenance Coverage"
          },
          "hil_feedback_count": {
            "type": "integer",
            "title": "Hil Feedback Count"
          },
          "agent_executions": {
            "type": "integer",
            "title": "Agent Executions"
          },
          "dry_run_percentage": {
            "type": "number",
            "title": "Dry Run Percentage"
          }
        },
        "type": "object",
        "required": [
          "total_requests",
          "total_assertions",
          "provenance_coverage",
          "hil_feedback_count",
          "agent_executions",
          "dry_run_percentage"
        ],
        "title": "MetricsResponse",
        "description": "System metrics response"
      },
      "PersonalFinanceRequest": {
        "properties": {
          "financial_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Financial Data"
          },
          "goals": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Goals"
          },
          "user_info": {
            "additionalProperties": true,
            "type": "object",
            "title": "User Info"
          }
        },
        "type": "object",
        "required": [
          "financial_data",
          "goals",
          "user_info"
        ],
        "title": "PersonalFinanceRequest",
        "description": "Request for personal finance analysis"
      },
      "PersonalizedFeedRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories"
          },
          "emotional_preferences": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emotional Preferences"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "categories",
          "emotional_preferences"
        ],
        "title": "PersonalizedFeedRequest"
      },
      "Provenance": {
        "properties": {
          "source": {
            "type": "string",
            "title": "Source"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "confidence": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Confidence",
            "default": 1.0
          }
        },
        "type": "object",
        "required": [
          "source",
          "timestamp"
        ],
        "title": "Provenance",
        "description": "Provenance information for assertions"
      },
      "QuickInsightsRequest": {
        "properties": {
          "financial_snapshot": {
            "additionalProperties": true,
            "type": "object",
            "title": "Financial Snapshot"
          }
        },
        "type": "object",
        "required": [
          "financial_snapshot"
        ],
        "title": "QuickInsightsRequest",
        "description": "Request for quick financial insights"
      },
      "SafetyCheck": {
        "properties": {
          "whitelist_ok": {
            "type": "boolean",
            "title": "Whitelist Ok"
          },
          "dry_run_allowed": {
            "type": "boolean",
            "title": "Dry Run Allowed"
          },
          "side_effects_detected": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Side Effects Detected"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          }
        },
        "type": "object",
        "required": [
          "whitelist_ok",
          "dry_run_allowed",
          "side_effects_detected",
          "warnings"
        ],
        "title": "SafetyCheck",
        "description": "Safety validation results"
      },
      "TherapeuticSessionRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "therapeutic_intent": {
            "type": "string",
            "title": "Therapeutic Intent"
          },
          "session_duration": {
            "type": "integer",
            "title": "Session Duration",
            "default": 1800
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "therapeutic_intent"
        ],
        "title": "TherapeuticSessionRequest"
      },
      "TokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in"
        ],
        "title": "TokenResponse"
      },
      "UBISimulationParams": {
        "properties": {
          "population_size": {
            "type": "integer",
            "title": "Population Size",
            "default": 1000000
          },
          "monthly_ubi_amount": {
            "type": "number",
            "title": "Monthly Ubi Amount",
            "default": 1000.0
          },
          "inflation_rate": {
            "type": "number",
            "title": "Inflation Rate",
            "default": 0.02
          },
          "productivity_impact": {
            "type": "number",
            "title": "Productivity Impact",
            "default": 0.05
          },
          "duration_years": {
            "type": "integer",
            "title": "Duration Years",
            "default": 5
          },
          "region": {
            "type": "string",
            "title": "Region",
            "default": "national"
          }
        },
        "type": "object",
        "title": "UBISimulationParams"
      },
      "UBISimulationResult": {
        "properties": {
          "total_cost": {
            "type": "number",
            "title": "Total Cost"
          },
          "economic_impact": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Economic Impact"
          },
          "employment_effects": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Employment Effects"
          },
          "gdp_change_percent": {
            "type": "number",
            "title": "Gdp Change Percent"
          },
          "poverty_reduction_percent": {
            "type": "number",
            "title": "Poverty Reduction Percent"
          },
          "confidence_intervals": {
            "additionalProperties": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Confidence Intervals"
          },
          "recommendations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Recommendations"
          },
          "simulation_metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Simulation Metadata"
          }
        },
        "type": "object",
        "required": [
          "total_cost",
          "economic_impact",
          "employment_effects",
          "gdp_change_percent",
          "poverty_reduction_percent",
          "confidence_intervals",
          "recommendations",
          "simulation_metadata"
        ],
        "title": "UBISimulationResult"
      },
      "User": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "default": "user"
          },
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "username",
          "email"
        ],
        "title": "User"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
