[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "minicon-cli"
version = "0.1.0"
description = "MiniCon transcription pipeline CLI"
requires-python = ">=3.12"
dependencies = [
  "typer>=0.12.0",
  "pytube>=15.0.0",
  "tqdm>=4.66.0",
  "openai-whisper>=20231117",
  "pydantic>=2.7.0",
  "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
diarisation = [
  "pyannote.audio>=2.1",
  "torch>=2.0",
]
test = [
  "pytest>=8.0",
  "pytest-mock>=3.12",
  "pytest-asyncio>=0.23",
  "pandas>=2.0",
  "openai>=1.0",
  "fastapi>=0.100",
  "uvicorn>=0.20",
  "pydantic>=2.0",
  "python-jose[cryptography]>=3.3",
  "passlib[bcrypt]>=1.7",
  "python-multipart>=0.0.6",
  "whisper>=1.0",
  "pytube>=15.0",
  "tqdm>=4.66",
]

[project.scripts]
framework-cli = "minicon.cli:app"

[tool.pytest.ini_options]
markers = [
  "unit: unit-level tests"
]

[tool.black]
line-length = 120
extend-exclude = "\\.venv|yt-transcribe-env"

[tool.flake8]
max-line-length = 120
extend-ignore = "E203, W503"
per-file-ignores = [
  "examples/*: E402",
  "tests/*: E402",
  "tools/*: E402",
  "maintenance/*: E402",
  "research-lab/*: E402",
  "automation/core/orchestrator.py: E402, F401",
  "minicon/cli.py: B008"
]
