#!/usr/bin/env python3
"""
Test script for authentication system
"""

import os
import sys
from auth.oauth_manager import OAuthManager
from auth.user_manager import UserManager


def test_oauth_manager():
    """Test OAuth manager"""
    print("Testing OAuth Manager...")

    oauth = OAuthManager()

    # Test configuration check
    for provider in ["google", "microsoft", "twitter"]:
        configured = oauth.is_configured(provider)
        status = "OK" if configured else "NO"
        print(f"  {status} {provider.title()}: {'Configured' if configured else 'Not configured'}")

    # Test URL generation (without actual OAuth)
    try:
        auth_url, state = oauth.generate_auth_url("google", "http://localhost:5001/callback/google")
        print(f"  OK Google auth URL generated successfully")
        print(f"  INFO Sample URL: {auth_url[:100]}...")
    except Exception as e:
        print(f"  ERROR URL generation failed: {e}")


def test_user_manager():
    """Test user manager"""
    print("\nTesting User Manager...")

    um = UserManager()

    # Test user profile creation
    sample_user = {
        "id": "test_user_123",
        "email": "test@example.com",
        "name": "Test User",
        "picture": "https://example.com/avatar.jpg",
    }

    sample_tokens = {
        "access_token": "sample_access_token",
        "refresh_token": "sample_refresh_token",
        "expires_in": 3600,
        "token_type": "Bearer",
    }

    try:
        profile_file = um.create_user_profile(sample_user, "google", sample_tokens)
        print(f"  OK User profile created: {profile_file}")

        # Test profile retrieval
        profile = um.get_user_profile("google", "test_user_123")
        if profile:
            print(f"  OK User profile retrieved: {profile['name']}")
        else:
            print("  ERROR User profile not found")

        # Test personalized data
        ms_data = um.get_personalized_microsoft_data("test_user_123")
        print(f"  OK Microsoft personalized data: {len(ms_data)} fields")

        # Test cleanup
        um.delete_user("google", "test_user_123")
        print("  OK Test user deleted")

    except Exception as e:
        print(f"  ‚ùå User manager test failed: {e}")


def main():
    """Main test function"""
    print("=" * 50)
    print("    AUTHENTICATION SYSTEM TEST")
    print("=" * 50)

    test_oauth_manager()
    test_user_manager()

    print("\n" + "=" * 50)
    print("Test completed!")
    print("=" * 50)


if __name__ == "__main__":
    main()
